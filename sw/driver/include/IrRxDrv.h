/*
-------------------------------------------------------------------------------
TYMPHANY LTD





                  Infrared Receiver driver
                  -------------------------

                  SW Module Document




@file        IrRxDrv.h
@brief       This file defines the structures and interfaces of the Infrared 
             receiver driver.
@author      Edmond Sung, Bob.Xu
@date        2014-07-15
@copyright (c) Tymphany Ltd. All rights reserved.

Change History:
VERSION    : 1    DRAFT      2014-07-15     Bob.Xu 
DESCRIPTION: First Draft. Generated by newclass.py
SCO/ERROR  : 
-------------------------------------------------------------------------------
*/

#ifndef _IR_RECEIVER_
#define _IR_RECEIVER_

#include "commonTypes.h"
#include "KeyDrv.h"
#include "cplus.h"

#ifdef	__cplusplus
extern "C" {
#endif

#ifdef HAS_IR_LEARNING
typedef struct tIrKeyIdMapCode
{
    eKeyID    irKeyId;
    uint32    irCode;
}tIrKeyIdMapCode;

SUBCLASS(cIrKeyDrv,cKeyDrv)
    const tIrKeyboardDevice* pKeyboardConfig;
METHODS
CLASS(cIrRxDrv)
    bool                isCreated;
METHODS

void    IrRxDrv_Ctor();
void    IrRxDrv_Xtor();

void IrKeyDrv_Ctor(cIrKeyDrv *me, const tIrKeyboardDevice *pIrKeyboardConfig, eKeyID keyID);
#else
CLASS(cIrRxDrv)
    bool  isCreated;
METHODS

void IrRxDrv_Ctor(cIrRxDrv *me, const tIrKeyIdMapCode * pIrKeyIdMapeCode, const tGPIOPin *pIoConfig);
void IrRxDrv_Xtor(cIrRxDrv *me);
eKeyState IrRxDrv_ReadKeyState(cIrRxDrv *me, eKeyID keyID);
void IrRxDrv_InterpretIrCode();
#endif
END_CLASS

#ifdef	__cplusplus
}
#endif

#endif

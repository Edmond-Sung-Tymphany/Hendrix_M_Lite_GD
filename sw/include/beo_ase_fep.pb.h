/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3 at Thu Jun 02 11:07:01 2016. */

#ifndef PB_BEO_ASE_FEP_PB_H_INCLUDED
#define PB_BEO_ASE_FEP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FepAseCommand_Command {
    FepAseCommand_Command_JOIN = 0,
    FepAseCommand_Command_PLAY = 1,
    FepAseCommand_Command_PAUSE = 2,
    FepAseCommand_Command_STOP = 3,
    FepAseCommand_Command_NEXT = 4,
    FepAseCommand_Command_PREV = 5,
    FepAseCommand_Command_BT_PAIRING_ON = 6,
    FepAseCommand_Command_BT_PAIRING_OFF = 7,
    FepAseCommand_Command_BTLE_PAIRING_ON = 8,
    FepAseCommand_Command_BTLE_PAIRING_OFF = 9,
    FepAseCommand_Command_STANDBY = 10,
    FepAseCommand_Command_OFF = 11,
    FepAseCommand_Command_FACTORY_RESET = 12,
    FepAseCommand_Command_MUTE = 13,
    FepAseCommand_Command_SOUND = 14,
    FepAseCommand_Command_SILENCE = 15,
    FepAseCommand_Command_NETWORK_SETUP = 16,
    FepAseCommand_Command_SOUND_SILENCE_TOGGLE = 17,
    FepAseCommand_Command_BT_PAIRING_TOGGLE = 18,
    FepAseCommand_Command_PLAY_PAUSE_TOGGLE = 19,
    FepAseCommand_Command_UNMUTE = 20,
    FepAseCommand_Command_NEXT_SOURCE = 21,
    FepAseCommand_Command_STORAGE = 22,
    FepAseCommand_Command_IOT = 23,
    FepAseCommand_Command_ALL_STANDBY = 24
} FepAseCommand_Command;

typedef enum _FepAseEvent_Event {
    FepAseEvent_Event_LINE_SENSE_ACTIVE = 0,
    FepAseEvent_Event_LINE_SENSE_INACTIVE = 1,
    FepAseEvent_Event_TOSLINK_SENSE_ACTIVE = 2,
    FepAseEvent_Event_TOSLINK_SENSE_INACTIVE = 3,
    FepAseEvent_Event_HDMI_SENSE_ACTIVE = 4,
    FepAseEvent_Event_HDMI_SENSE_INACTIVE = 5
} FepAseEvent_Event;

typedef enum _FepAseReq_Request {
    FepAseReq_Request_GET_INTERNAL_SPEAKER_COMPENSATION = 0
} FepAseReq_Request;

typedef enum _AseFepEvent_Event {
    AseFepEvent_Event_SW_UPDATE_STARTED = 0,
    AseFepEvent_Event_SW_UPDATE_FINISHED = 1,
    AseFepEvent_Event_SW_UPDATE_FAILED = 2,
    AseFepEvent_Event_BT_PAIRING_ENABLED = 3,
    AseFepEvent_Event_BT_PAIRING_DISABLED = 4,
    AseFepEvent_Event_BT_PAIRING_FAILED = 5,
    AseFepEvent_Event_BT_PAIRING_SUCCEEDED = 6,
    AseFepEvent_Event_BTLE_PAIRING_ENABLED = 7,
    AseFepEvent_Event_BTLE_PAIRING_DISABLED = 8,
    AseFepEvent_Event_BTLE_PAIRING_FAILED = 9,
    AseFepEvent_Event_BTLE_PAIRING_SUCCEEDED = 10,
    AseFepEvent_Event_PLAYER_PLAYING = 11,
    AseFepEvent_Event_PLAYER_PAUSED = 12,
    AseFepEvent_Event_PLAYER_STOPPED = 13,
    AseFepEvent_Event_PLAYER_MUTED = 14,
    AseFepEvent_Event_PLAYER_UNMUTED = 15,
    AseFepEvent_Event_SOFTAP_STARTED = 16,
    AseFepEvent_Event_SOFTAP_STOPPED = 17,
    AseFepEvent_Event_APPLE_WAC_STARTED = 20,
    AseFepEvent_Event_APPLE_WAC_STOPPED = 21,
    AseFepEvent_Event_APPLE_WAC_TIMEOUT = 22,
    AseFepEvent_Event_ASE_BOOTED = 23,
    AseFepEvent_Event_ASE_OVERHEAT_ALERT = 24,
    AseFepEvent_Event_SW_UPDATE_FEP_BOOTLOADER = 25,
    AseFepEvent_Event_SW_UPDATE_FEP_APPLICATION = 26,
    AseFepEvent_Event_SYSTEM_STATUS_STORAGE = 27,
    AseFepEvent_Event_SYSTEM_STATUS_STANDBY = 28,
    AseFepEvent_Event_SYSTEM_STATUS_ON = 29,
    AseFepEvent_Event_SYSTEM_STATUS_OFF = 30,
    AseFepEvent_Event_FACTORY_RESET_START = 31,
    AseFepEvent_Event_FACTORY_RESET_DONE = 32,
    AseFepEvent_Event_SYSTEM_STATUS_ASE_RESTART = 33,
    AseFepEvent_Event_SYSTEM_STATUS_RESTART = 34,
    AseFepEvent_Event_SYSTEM_STATUS_ON_NO_OPERATION = 35,
    AseFepEvent_Event_COMFORT_TONE_START = 36,
    AseFepEvent_Event_COMFORT_TONE_DONE = 37
} AseFepEvent_Event;

typedef enum _AseFepSetLineInSensitivity_LineInSensitivity {
    AseFepSetLineInSensitivity_LineInSensitivity_HIGH = 0,
    AseFepSetLineInSensitivity_LineInSensitivity_MEDIUM = 1,
    AseFepSetLineInSensitivity_LineInSensitivity_LOW = 2,
    AseFepSetLineInSensitivity_LineInSensitivity_DISABLED = 3
} AseFepSetLineInSensitivity_LineInSensitivity;

typedef enum _AseFepSetAudioPcmFormatCommand_Format {
    AseFepSetAudioPcmFormatCommand_Format_F32BE = 0,
    AseFepSetAudioPcmFormatCommand_Format_F32LE = 1,
    AseFepSetAudioPcmFormatCommand_Format_F64BE = 2,
    AseFepSetAudioPcmFormatCommand_Format_F64LE = 3,
    AseFepSetAudioPcmFormatCommand_Format_S16BE = 4,
    AseFepSetAudioPcmFormatCommand_Format_S16LE = 5,
    AseFepSetAudioPcmFormatCommand_Format_S24BE = 6,
    AseFepSetAudioPcmFormatCommand_Format_S24LE = 7,
    AseFepSetAudioPcmFormatCommand_Format_S32BE = 8,
    AseFepSetAudioPcmFormatCommand_Format_S32LE = 9,
    AseFepSetAudioPcmFormatCommand_Format_S8 = 10,
    AseFepSetAudioPcmFormatCommand_Format_U16BE = 11,
    AseFepSetAudioPcmFormatCommand_Format_U16LE = 12,
    AseFepSetAudioPcmFormatCommand_Format_U24BE = 13,
    AseFepSetAudioPcmFormatCommand_Format_U24LE = 14,
    AseFepSetAudioPcmFormatCommand_Format_U32BE = 15,
    AseFepSetAudioPcmFormatCommand_Format_U32LE = 16,
    AseFepSetAudioPcmFormatCommand_Format_U8 = 17
} AseFepSetAudioPcmFormatCommand_Format;

typedef enum _AseFepSetAudioPcmFormatCommand_Rate {
    AseFepSetAudioPcmFormatCommand_Rate_RATE_8_KHZ = 0,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_12_KHZ = 1,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_16_KHZ = 2,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_24_KHZ = 3,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_32_KHZ = 4,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_48_KHZ = 5,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_64_KHZ = 6,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_96_KHZ = 7,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_11025_HZ = 10,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_22050_HZ = 11,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_44100_HZ = 12,
    AseFepSetAudioPcmFormatCommand_Rate_RATE_88200_HZ = 13
} AseFepSetAudioPcmFormatCommand_Rate;

typedef enum _AseFepSetAudioPcmFormatCommand_Channels {
    AseFepSetAudioPcmFormatCommand_Channels_MONO = 0,
    AseFepSetAudioPcmFormatCommand_Channels_STEREO = 1
} AseFepSetAudioPcmFormatCommand_Channels;

typedef enum _FepAseSetAudioPcmFormatCommandResp_Error {
    FepAseSetAudioPcmFormatCommandResp_Error_NO_ERROR = 1,
    FepAseSetAudioPcmFormatCommandResp_Error_NOT_SUPORTED_FORMAT = 2,
    FepAseSetAudioPcmFormatCommandResp_Error_NOT_SUPPORTED_RATE = 3,
    FepAseSetAudioPcmFormatCommandResp_Error_NOT_SUPPORTED_CHANNELS = 4,
    FepAseSetAudioPcmFormatCommandResp_Error_UNKNOWN_ERROR = 5
} FepAseSetAudioPcmFormatCommandResp_Error;

typedef enum _FepAseAudioSocketChangeEvent_AudioSocket {
    FepAseAudioSocketChangeEvent_AudioSocket_MINI_JACK = 0
} FepAseAudioSocketChangeEvent_AudioSocket;

typedef enum _FepAseAudioSocketChangeEvent_SocketState {
    FepAseAudioSocketChangeEvent_SocketState_INSERTED = 0,
    FepAseAudioSocketChangeEvent_SocketState_REMOVED = 1
} FepAseAudioSocketChangeEvent_SocketState;

typedef enum _AseFepSetAudioInputReq_AudioInput {
    AseFepSetAudioInputReq_AudioInput_ASE = 0,
    AseFepSetAudioInputReq_AudioInput_LINE = 1,
    AseFepSetAudioInputReq_AudioInput_TOS_LINK = 2,
    AseFepSetAudioInputReq_AudioInput_POWER_LINK = 3,
    AseFepSetAudioInputReq_AudioInput_HDMI = 4,
    AseFepSetAudioInputReq_AudioInput_WIRELESS_MULTICHANNEL = 5
} AseFepSetAudioInputReq_AudioInput;

typedef enum _AseFepSetAudioOutputReq_AudioOutput {
    AseFepSetAudioOutputReq_AudioOutput_AMPLIFIER = 0,
    AseFepSetAudioOutputReq_AudioOutput_LINE = 1,
    AseFepSetAudioOutputReq_AudioOutput_TOS_LINK = 2,
    AseFepSetAudioOutputReq_AudioOutput_POWER_LINK = 3,
    AseFepSetAudioOutputReq_AudioOutput_HDMI = 4,
    AseFepSetAudioOutputReq_AudioOutput_WIRELESS_MULTICHANNEL = 5
} AseFepSetAudioOutputReq_AudioOutput;

typedef enum _FepAseProductLog_Severity {
    FepAseProductLog_Severity_DEBUG = 0,
    FepAseProductLog_Severity_INFO = 1,
    FepAseProductLog_Severity_NOTICE = 2,
    FepAseProductLog_Severity_WARNING = 3,
    FepAseProductLog_Severity_ERROR = 4
} FepAseProductLog_Severity;

typedef enum _FepAseServiceLog_Severity {
    FepAseServiceLog_Severity_NOTICE = 0,
    FepAseServiceLog_Severity_WARNING = 1,
    FepAseServiceLog_Severity_ERROR = 2,
    FepAseServiceLog_Severity_CRITICAL = 3,
    FepAseServiceLog_Severity_ALERT = 4,
    FepAseServiceLog_Severity_EMERGENCY = 5
} FepAseServiceLog_Severity;

typedef enum _PositionSoundMode_Position {
    PositionSoundMode_Position_UNDEFINED = 0,
    PositionSoundMode_Position_FREE = 1,
    PositionSoundMode_Position_WALL = 2,
    PositionSoundMode_Position_CORNER = 3,
    PositionSoundMode_Position_TABLE = 4
} PositionSoundMode_Position;

typedef enum _PositionSoundMode_Orientation {
    PositionSoundMode_Orientation_NONE = 0,
    PositionSoundMode_Orientation_HORIZONTAL = 1,
    PositionSoundMode_Orientation_VERTICAL = 2
} PositionSoundMode_Orientation;

typedef enum _FepAsePositionSoundModeResp_Error {
    FepAsePositionSoundModeResp_Error_NO_ERROR = 1,
    FepAsePositionSoundModeResp_Error_POSITION_ERROR = 2,
    FepAsePositionSoundModeResp_Error_ORIENTATION_ERROR = 3,
    FepAsePositionSoundModeResp_Error_COMBINATION_ERROR = 4
} FepAsePositionSoundModeResp_Error;

typedef enum _InternalSpeaker_Position {
    InternalSpeaker_Position_LEFT = 0,
    InternalSpeaker_Position_RIGHT = 1,
    InternalSpeaker_Position_CENTRE = 2
} InternalSpeaker_Position;

typedef enum _InternalSpeaker_Type {
    InternalSpeaker_Type_TWEETER = 0,
    InternalSpeaker_Type_MIDRANGE = 1,
    InternalSpeaker_Type_WOOFER = 2,
    InternalSpeaker_Type_FULLRANGE = 3
} InternalSpeaker_Type;

typedef enum _FepAseInternalSpeakerCompensationResp_Error {
    FepAseInternalSpeakerCompensationResp_Error_NO_ERROR = 1,
    FepAseInternalSpeakerCompensationResp_Error_POSITION_ERROR = 2,
    FepAseInternalSpeakerCompensationResp_Error_TYPE_ERROR = 3,
    FepAseInternalSpeakerCompensationResp_Error_POSITION_TYPE_COMBINATION_ERROR = 4,
    FepAseInternalSpeakerCompensationResp_Error_GAIN_ERROR = 5
} FepAseInternalSpeakerCompensationResp_Error;

typedef enum _AseFepReq_Request {
    AseFepReq_Request_PRODUCT_INFO = 0,
    AseFepReq_Request_POWER_STATUS = 1,
    AseFepReq_Request_VERSION_INFO = 2,
    AseFepReq_Request_STATISTICS = 3,
    AseFepReq_Request_NETWORK_INFO = 4,
    AseFepReq_Request_INTERNAL_SPEAKER_COMPENSATION = 5
} AseFepReq_Request;

typedef enum _FepAseProductInfo_ProductId {
    FepAseProductInfo_ProductId_UNKNOWN = 0,
    FepAseProductInfo_ProductId_FS1 = 1,
    FepAseProductInfo_ProductId_FS2 = 2,
    FepAseProductInfo_ProductId_SP3 = 3,
    FepAseProductInfo_ProductId_CA16 = 4
} FepAseProductInfo_ProductId;

typedef enum _FepAsePowerStatus_ACLineStatus {
    FepAsePowerStatus_ACLineStatus_UNPLUGGED = 0,
    FepAsePowerStatus_ACLineStatus_PLUGGED = 1
} FepAsePowerStatus_ACLineStatus;

typedef enum _FepAsePowerStatus_BatteryStatus {
    FepAsePowerStatus_BatteryStatus_NO_BATTERY = 0,
    FepAsePowerStatus_BatteryStatus_LEVEL_CRITICAL = 1,
    FepAsePowerStatus_BatteryStatus_LEVEL_LOW = 2,
    FepAsePowerStatus_BatteryStatus_LEVEL_MIDDLE = 3,
    FepAsePowerStatus_BatteryStatus_LEVEL_HIGH = 4
} FepAsePowerStatus_BatteryStatus;

typedef enum _FepAsePowerStatus_BatteryHealthStatus {
    FepAsePowerStatus_BatteryHealthStatus_UNKNOWN = 0,
    FepAsePowerStatus_BatteryHealthStatus_GOOD = 1,
    FepAsePowerStatus_BatteryHealthStatus_POOR = 2
} FepAsePowerStatus_BatteryHealthStatus;

typedef enum _WiFi_Quality {
    WiFi_Quality_EXELENT = 0,
    WiFi_Quality_GOOD = 1,
    WiFi_Quality_POOR = 2
} WiFi_Quality;

typedef enum _NetworkInfo_Type {
    NetworkInfo_Type_WIFI = 1,
    NetworkInfo_Type_ETHERNET = 2,
    NetworkInfo_Type_SOFT_AP = 3
} NetworkInfo_Type;

typedef enum _NetworkInfo_State {
    NetworkInfo_State_UNKNOWN = 0,
    NetworkInfo_State_SCANNING = 1,
    NetworkInfo_State_CONNECTING = 2,
    NetworkInfo_State_AUTHENTICATING = 3,
    NetworkInfo_State_ACQUIRING = 4,
    NetworkInfo_State_CONNECTED = 5,
    NetworkInfo_State_DISCONNECTED = 6,
    NetworkInfo_State_FAILED = 7
} NetworkInfo_State;

/* Struct definitions */
typedef struct _AseFepAliveResp {
    uint8_t dummy_field;
} AseFepAliveResp;

typedef struct _AseFepGetPositionSoundModeReq {
    uint8_t dummy_field;
} AseFepGetPositionSoundModeReq;

typedef struct _AseFepNetworkInfo {
    pb_callback_t networkInfo;
} AseFepNetworkInfo;

typedef struct _AseFepSetAudioOutputReq {
    pb_callback_t output;
} AseFepSetAudioOutputReq;

typedef struct _AseFepSetInternalSpeakerCompensationCommand {
    pb_callback_t internalSpeaker;
} AseFepSetInternalSpeakerCompensationCommand;

typedef struct _AseFepTunnel {
    pb_callback_t data;
} AseFepTunnel;

typedef struct _FepAseAliveReq {
    uint8_t dummy_field;
} FepAseAliveReq;

typedef struct _FepAsePlayComfortToneCmd {
    pb_callback_t tone;
} FepAsePlayComfortToneCmd;

typedef struct _FepAseSetAudioPcmFormatCommandResp {
    pb_callback_t error;
} FepAseSetAudioPcmFormatCommandResp;

typedef struct _FepAseStatistics {
    pb_callback_t keyValue;
} FepAseStatistics;

typedef struct _FepAseStatistics_KeyValuePair {
    pb_callback_t key;
    pb_callback_t value;
} FepAseStatistics_KeyValuePair;

typedef struct _FepAseTunnel {
    pb_callback_t data;
} FepAseTunnel;

typedef struct _FepAseVersionInfo {
    pb_callback_t module;
} FepAseVersionInfo;

typedef struct _FepAseVersionInfo_Module {
    pb_callback_t name;
    pb_callback_t hardware;
    pb_callback_t bootloader;
    pb_callback_t application;
    pb_callback_t configuration;
} FepAseVersionInfo_Module;

typedef struct _AseFepEvent {
    bool has_event;
    AseFepEvent_Event event;
} AseFepEvent;

typedef struct _AseFepReq {
    AseFepReq_Request request;
} AseFepReq;

typedef struct _AseFepSetAudioInputReq {
    bool has_input;
    AseFepSetAudioInputReq_AudioInput input;
    bool has_local;
    bool local;
} AseFepSetAudioInputReq;

typedef struct _AseFepSetAudioPcmFormatCommand {
    AseFepSetAudioPcmFormatCommand_Format format;
    AseFepSetAudioPcmFormatCommand_Rate sampling;
    AseFepSetAudioPcmFormatCommand_Channels channels;
} AseFepSetAudioPcmFormatCommand;

typedef struct _AseFepSetLineInSensitivity {
    bool has_sensitivity;
    AseFepSetLineInSensitivity_LineInSensitivity sensitivity;
} AseFepSetLineInSensitivity;

typedef struct _AseFepVolumeChangedEvent {
    bool has_volume;
    uint32_t volume;
} AseFepVolumeChangedEvent;

typedef struct _AseFepVolumeFadeEvent {
    bool has_start_volume;
    uint32_t start_volume;
    uint32_t target_volume;
    uint32_t fade_duration;
} AseFepVolumeFadeEvent;

typedef struct _FepAseAbsoluteVolumeCommand {
    bool has_volume;
    uint32_t volume;
} FepAseAbsoluteVolumeCommand;

typedef struct _FepAseAudioSocketChangeEvent {
    bool has_socket;
    FepAseAudioSocketChangeEvent_AudioSocket socket;
    bool has_state;
    FepAseAudioSocketChangeEvent_SocketState state;
} FepAseAudioSocketChangeEvent;

typedef struct _FepAseCommand {
    bool has_command;
    FepAseCommand_Command command;
} FepAseCommand;

typedef struct _FepAseEvent {
    bool has_event;
    FepAseEvent_Event event;
} FepAseEvent;

typedef struct _FepAseInternalSpeakerCompensationResp {
    FepAseInternalSpeakerCompensationResp_Error error;
    pb_callback_t internalSpeaker;
} FepAseInternalSpeakerCompensationResp;

typedef struct _FepAsePowerStatus {
    FepAsePowerStatus_ACLineStatus acLineStatus;
    FepAsePowerStatus_BatteryStatus batteryStatus;
    bool has_batteryLevel;
    uint32_t batteryLevel;
    FepAsePowerStatus_BatteryHealthStatus healthStatus;
} FepAsePowerStatus;

typedef struct _FepAseProductInfo {
    pb_callback_t productName;
    FepAseProductInfo_ProductId productId;
} FepAseProductInfo;

typedef struct _FepAseProductLog {
    bool has_severity;
    FepAseProductLog_Severity severity;
    pb_callback_t text;
    pb_callback_t file;
    bool has_line;
    uint32_t line;
} FepAseProductLog;

typedef struct _FepAseRelativeVolumeCommand {
    bool has_volume;
    int32_t volume;
} FepAseRelativeVolumeCommand;

typedef struct _FepAseReq {
    FepAseReq_Request request;
} FepAseReq;

typedef struct _FepAseServiceLog {
    bool has_severity;
    FepAseServiceLog_Severity severity;
    pb_callback_t text;
    pb_callback_t file;
    bool has_line;
    uint32_t line;
    bool has_code;
    uint32_t code;
} FepAseServiceLog;

typedef struct _FepAseSetAudioInputResp {
    bool has_success;
    bool success;
} FepAseSetAudioInputResp;

typedef struct _FepAseSetAudioOutputResp {
    bool has_success;
    bool success;
} FepAseSetAudioOutputResp;

typedef struct _FepAseVolumeFadeComplete {
    uint32_t volume;
} FepAseVolumeFadeComplete;

typedef struct _InternalSpeaker {
    InternalSpeaker_Position position;
    InternalSpeaker_Type type;
    bool has_compensation;
    double compensation;
} InternalSpeaker;

typedef struct _PositionSoundMode {
    bool has_position;
    PositionSoundMode_Position position;
    bool has_orientation;
    PositionSoundMode_Orientation orientation;
} PositionSoundMode;

typedef struct _WiFi {
    bool has_Configured;
    bool Configured;
    bool has_quality;
    WiFi_Quality quality;
} WiFi;

typedef struct _AseFepSetPositionSoundModeReq {
    bool has_mode;
    PositionSoundMode mode;
} AseFepSetPositionSoundModeReq;

typedef struct _FepAsePositionSoundModeResp {
    bool has_error;
    FepAsePositionSoundModeResp_Error error;
    bool has_mode;
    PositionSoundMode mode;
} FepAsePositionSoundModeResp;

typedef struct _NetworkInfo {
    bool has_type;
    NetworkInfo_Type type;
    bool has_state;
    NetworkInfo_State state;
    bool has_wifi;
    WiFi wifi;
} NetworkInfo;

typedef struct _AseFepMessage {
    pb_size_t which_OneOf;
    union {
        AseFepEvent aseFepEvent;
        AseFepVolumeChangedEvent aseFepVolumeChangedEvent;
        AseFepSetLineInSensitivity aseFepSetLineInSensitivity;
        AseFepTunnel aseFepTunnel;
        AseFepSetAudioInputReq aseFepSetAudioInputReq;
        AseFepSetAudioOutputReq aseFepSetAudioOutputReq;
        AseFepAliveResp aseFepAliveResp;
        AseFepSetPositionSoundModeReq aseFepSetPositionSoundModeReq;
        AseFepGetPositionSoundModeReq aseFepGetPositionSoundModeReq;
        AseFepNetworkInfo aseFepNetworkInfo;
        AseFepReq aseFepReq;
        AseFepSetAudioPcmFormatCommand aseFepSetAudioPcmFormatCommand;
        AseFepSetInternalSpeakerCompensationCommand aseFepSetInternalSpeakerCompensationCommand;
        AseFepVolumeFadeEvent aseFepVolumeFadeEvent;
    } OneOf;
} AseFepMessage;

typedef struct _FepAseMessage {
    pb_size_t which_OneOf;
    union {
        FepAseCommand fepAseCommand;
        FepAseEvent fepAseEvent;
        FepAseAbsoluteVolumeCommand fepAseAbsoluteVolumeCommand;
        FepAseRelativeVolumeCommand fepAseRelativeVolumeCommand;
        FepAseTunnel fepAseTunnel;
        FepAseSetAudioInputResp fepAseSetAudioInputResp;
        FepAseSetAudioOutputResp fepAseSetAudioOutputResp;
        FepAseAliveReq fepAseAliveReq;
        FepAseProductLog fepAseProductLog;
        FepAseServiceLog fepAseServiceLog;
        FepAsePositionSoundModeResp fepAsePositionSoundModeResp;
        FepAsePlayComfortToneCmd fepAsePlayComfortToneCmd;
        FepAseProductInfo fepAseProductInfo;
        FepAsePowerStatus fepAsePowerStatus;
        FepAseVersionInfo fepAseVersionInfo;
        FepAseStatistics fepAseStatistics;
        FepAseAudioSocketChangeEvent fepAseAudioSocketChangeEvent;
        FepAseSetAudioPcmFormatCommandResp fepAseSetAudioPcmFormatCommandResp;
        FepAseInternalSpeakerCompensationResp fepAseInternalSpeakerCompensationResp;
        FepAseVolumeFadeComplete fepAseVolumeFadeComplete;
        FepAseReq fepAseReq;
    } OneOf;
} FepAseMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FepAseCommand_init_default               {false, (FepAseCommand_Command)0}
#define FepAseEvent_init_default                 {false, (FepAseEvent_Event)0}
#define FepAseReq_init_default                   {(FepAseReq_Request)0}
#define AseFepEvent_init_default                 {false, (AseFepEvent_Event)0}
#define AseFepVolumeChangedEvent_init_default    {false, 0}
#define FepAseAbsoluteVolumeCommand_init_default {false, 0}
#define FepAseRelativeVolumeCommand_init_default {false, 0}
#define AseFepVolumeFadeEvent_init_default       {false, 0, 0, 0}
#define FepAseVolumeFadeComplete_init_default    {0}
#define AseFepSetLineInSensitivity_init_default  {false, (AseFepSetLineInSensitivity_LineInSensitivity)0}
#define AseFepSetAudioPcmFormatCommand_init_default {(AseFepSetAudioPcmFormatCommand_Format)0, (AseFepSetAudioPcmFormatCommand_Rate)0, (AseFepSetAudioPcmFormatCommand_Channels)0}
#define FepAseSetAudioPcmFormatCommandResp_init_default {{{NULL}, NULL}}
#define FepAseAudioSocketChangeEvent_init_default {false, (FepAseAudioSocketChangeEvent_AudioSocket)0, false, (FepAseAudioSocketChangeEvent_SocketState)0}
#define AseFepTunnel_init_default                {{{NULL}, NULL}}
#define FepAseTunnel_init_default                {{{NULL}, NULL}}
#define AseFepSetAudioInputReq_init_default      {false, (AseFepSetAudioInputReq_AudioInput)0, false, 0}
#define FepAseSetAudioInputResp_init_default     {false, 0}
#define AseFepSetAudioOutputReq_init_default     {{{NULL}, NULL}}
#define FepAseSetAudioOutputResp_init_default    {false, 0}
#define FepAseAliveReq_init_default              {0}
#define AseFepAliveResp_init_default             {0}
#define FepAseProductLog_init_default            {false, (FepAseProductLog_Severity)0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define FepAseServiceLog_init_default            {false, (FepAseServiceLog_Severity)0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0}
#define PositionSoundMode_init_default           {false, (PositionSoundMode_Position)0, false, (PositionSoundMode_Orientation)0}
#define AseFepSetPositionSoundModeReq_init_default {false, PositionSoundMode_init_default}
#define AseFepGetPositionSoundModeReq_init_default {0}
#define FepAsePositionSoundModeResp_init_default {false, (FepAsePositionSoundModeResp_Error)0, false, PositionSoundMode_init_default}
#define InternalSpeaker_init_default             {(InternalSpeaker_Position)0, (InternalSpeaker_Type)0, false, 0}
#define AseFepSetInternalSpeakerCompensationCommand_init_default {{{NULL}, NULL}}
#define FepAseInternalSpeakerCompensationResp_init_default {(FepAseInternalSpeakerCompensationResp_Error)0, {{NULL}, NULL}}
#define FepAsePlayComfortToneCmd_init_default    {{{NULL}, NULL}}
#define AseFepReq_init_default                   {(AseFepReq_Request)0}
#define FepAseProductInfo_init_default           {{{NULL}, NULL}, (FepAseProductInfo_ProductId)0}
#define FepAsePowerStatus_init_default           {(FepAsePowerStatus_ACLineStatus)0, (FepAsePowerStatus_BatteryStatus)0, false, 0, (FepAsePowerStatus_BatteryHealthStatus)0}
#define FepAseVersionInfo_init_default           {{{NULL}, NULL}}
#define FepAseVersionInfo_Module_init_default    {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define FepAseStatistics_init_default            {{{NULL}, NULL}}
#define FepAseStatistics_KeyValuePair_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define WiFi_init_default                        {false, 0, false, (WiFi_Quality)0}
#define NetworkInfo_init_default                 {false, (NetworkInfo_Type)0, false, (NetworkInfo_State)0, false, WiFi_init_default}
#define AseFepNetworkInfo_init_default           {{{NULL}, NULL}}
#define AseFepMessage_init_default               {0, {AseFepEvent_init_default}}
#define FepAseMessage_init_default               {0, {FepAseCommand_init_default}}
#define FepAseCommand_init_zero                  {false, (FepAseCommand_Command)0}
#define FepAseEvent_init_zero                    {false, (FepAseEvent_Event)0}
#define FepAseReq_init_zero                      {(FepAseReq_Request)0}
#define AseFepEvent_init_zero                    {false, (AseFepEvent_Event)0}
#define AseFepVolumeChangedEvent_init_zero       {false, 0}
#define FepAseAbsoluteVolumeCommand_init_zero    {false, 0}
#define FepAseRelativeVolumeCommand_init_zero    {false, 0}
#define AseFepVolumeFadeEvent_init_zero          {false, 0, 0, 0}
#define FepAseVolumeFadeComplete_init_zero       {0}
#define AseFepSetLineInSensitivity_init_zero     {false, (AseFepSetLineInSensitivity_LineInSensitivity)0}
#define AseFepSetAudioPcmFormatCommand_init_zero {(AseFepSetAudioPcmFormatCommand_Format)0, (AseFepSetAudioPcmFormatCommand_Rate)0, (AseFepSetAudioPcmFormatCommand_Channels)0}
#define FepAseSetAudioPcmFormatCommandResp_init_zero {{{NULL}, NULL}}
#define FepAseAudioSocketChangeEvent_init_zero   {false, (FepAseAudioSocketChangeEvent_AudioSocket)0, false, (FepAseAudioSocketChangeEvent_SocketState)0}
#define AseFepTunnel_init_zero                   {{{NULL}, NULL}}
#define FepAseTunnel_init_zero                   {{{NULL}, NULL}}
#define AseFepSetAudioInputReq_init_zero         {false, (AseFepSetAudioInputReq_AudioInput)0, false, 0}
#define FepAseSetAudioInputResp_init_zero        {false, 0}
#define AseFepSetAudioOutputReq_init_zero        {{{NULL}, NULL}}
#define FepAseSetAudioOutputResp_init_zero       {false, 0}
#define FepAseAliveReq_init_zero                 {0}
#define AseFepAliveResp_init_zero                {0}
#define FepAseProductLog_init_zero               {false, (FepAseProductLog_Severity)0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0}
#define FepAseServiceLog_init_zero               {false, (FepAseServiceLog_Severity)0, {{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, 0}
#define PositionSoundMode_init_zero              {false, (PositionSoundMode_Position)0, false, (PositionSoundMode_Orientation)0}
#define AseFepSetPositionSoundModeReq_init_zero  {false, PositionSoundMode_init_zero}
#define AseFepGetPositionSoundModeReq_init_zero  {0}
#define FepAsePositionSoundModeResp_init_zero    {false, (FepAsePositionSoundModeResp_Error)0, false, PositionSoundMode_init_zero}
#define InternalSpeaker_init_zero                {(InternalSpeaker_Position)0, (InternalSpeaker_Type)0, false, 0}
#define AseFepSetInternalSpeakerCompensationCommand_init_zero {{{NULL}, NULL}}
#define FepAseInternalSpeakerCompensationResp_init_zero {(FepAseInternalSpeakerCompensationResp_Error)0, {{NULL}, NULL}}
#define FepAsePlayComfortToneCmd_init_zero       {{{NULL}, NULL}}
#define AseFepReq_init_zero                      {(AseFepReq_Request)0}
#define FepAseProductInfo_init_zero              {{{NULL}, NULL}, (FepAseProductInfo_ProductId)0}
#define FepAsePowerStatus_init_zero              {(FepAsePowerStatus_ACLineStatus)0, (FepAsePowerStatus_BatteryStatus)0, false, 0, (FepAsePowerStatus_BatteryHealthStatus)0}
#define FepAseVersionInfo_init_zero              {{{NULL}, NULL}}
#define FepAseVersionInfo_Module_init_zero       {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define FepAseStatistics_init_zero               {{{NULL}, NULL}}
#define FepAseStatistics_KeyValuePair_init_zero  {{{NULL}, NULL}, {{NULL}, NULL}}
#define WiFi_init_zero                           {false, 0, false, (WiFi_Quality)0}
#define NetworkInfo_init_zero                    {false, (NetworkInfo_Type)0, false, (NetworkInfo_State)0, false, WiFi_init_zero}
#define AseFepNetworkInfo_init_zero              {{{NULL}, NULL}}
#define AseFepMessage_init_zero                  {0, {AseFepEvent_init_zero}}
#define FepAseMessage_init_zero                  {0, {FepAseCommand_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define AseFepNetworkInfo_networkInfo_tag        1
#define AseFepSetAudioOutputReq_output_tag       1
#define AseFepSetInternalSpeakerCompensationCommand_internalSpeaker_tag 1
#define AseFepTunnel_data_tag                    1
#define FepAsePlayComfortToneCmd_tone_tag        1
#define FepAseSetAudioPcmFormatCommandResp_error_tag 1
#define FepAseStatistics_keyValue_tag            1
#define FepAseStatistics_KeyValuePair_key_tag    1
#define FepAseStatistics_KeyValuePair_value_tag  2
#define FepAseTunnel_data_tag                    1
#define FepAseVersionInfo_module_tag             1
#define FepAseVersionInfo_Module_name_tag        1
#define FepAseVersionInfo_Module_hardware_tag    2
#define FepAseVersionInfo_Module_bootloader_tag  3
#define FepAseVersionInfo_Module_application_tag 4
#define FepAseVersionInfo_Module_configuration_tag 5
#define AseFepEvent_event_tag                    1
#define AseFepReq_request_tag                    1
#define AseFepSetAudioInputReq_input_tag         1
#define AseFepSetAudioInputReq_local_tag         2
#define AseFepSetAudioPcmFormatCommand_format_tag 1
#define AseFepSetAudioPcmFormatCommand_sampling_tag 2
#define AseFepSetAudioPcmFormatCommand_channels_tag 3
#define AseFepSetLineInSensitivity_sensitivity_tag 1
#define AseFepVolumeChangedEvent_volume_tag      1
#define AseFepVolumeFadeEvent_start_volume_tag   1
#define AseFepVolumeFadeEvent_target_volume_tag  2
#define AseFepVolumeFadeEvent_fade_duration_tag  3
#define FepAseAbsoluteVolumeCommand_volume_tag   1
#define FepAseAudioSocketChangeEvent_socket_tag  1
#define FepAseAudioSocketChangeEvent_state_tag   2
#define FepAseCommand_command_tag                1
#define FepAseEvent_event_tag                    1
#define FepAseInternalSpeakerCompensationResp_error_tag 1
#define FepAseInternalSpeakerCompensationResp_internalSpeaker_tag 2
#define FepAsePowerStatus_acLineStatus_tag       1
#define FepAsePowerStatus_batteryStatus_tag      2
#define FepAsePowerStatus_batteryLevel_tag       3
#define FepAsePowerStatus_healthStatus_tag       4
#define FepAseProductInfo_productName_tag        1
#define FepAseProductInfo_productId_tag          2
#define FepAseProductLog_severity_tag            1
#define FepAseProductLog_text_tag                2
#define FepAseProductLog_file_tag                3
#define FepAseProductLog_line_tag                4
#define FepAseRelativeVolumeCommand_volume_tag   1
#define FepAseReq_request_tag                    1
#define FepAseServiceLog_severity_tag            1
#define FepAseServiceLog_text_tag                2
#define FepAseServiceLog_file_tag                3
#define FepAseServiceLog_line_tag                4
#define FepAseServiceLog_code_tag                5
#define FepAseSetAudioInputResp_success_tag      1
#define FepAseSetAudioOutputResp_success_tag     1
#define FepAseVolumeFadeComplete_volume_tag      1
#define InternalSpeaker_position_tag             1
#define InternalSpeaker_type_tag                 2
#define InternalSpeaker_compensation_tag         3
#define PositionSoundMode_position_tag           1
#define PositionSoundMode_orientation_tag        2
#define WiFi_Configured_tag                      1
#define WiFi_quality_tag                         2
#define AseFepSetPositionSoundModeReq_mode_tag   1
#define FepAsePositionSoundModeResp_error_tag    1
#define FepAsePositionSoundModeResp_mode_tag     2
#define NetworkInfo_type_tag                     1
#define NetworkInfo_state_tag                    2
#define NetworkInfo_wifi_tag                     3
#define AseFepMessage_aseFepEvent_tag            2

#define AseFepMessage_aseFepVolumeChangedEvent_tag 3

#define AseFepMessage_aseFepSetLineInSensitivity_tag 4

#define AseFepMessage_aseFepTunnel_tag           6

#define AseFepMessage_aseFepSetAudioInputReq_tag 7

#define AseFepMessage_aseFepSetAudioOutputReq_tag 8

#define AseFepMessage_aseFepAliveResp_tag        9

#define AseFepMessage_aseFepSetPositionSoundModeReq_tag 11

#define AseFepMessage_aseFepGetPositionSoundModeReq_tag 12

#define AseFepMessage_aseFepNetworkInfo_tag      13

#define AseFepMessage_aseFepReq_tag              14

#define AseFepMessage_aseFepSetAudioPcmFormatCommand_tag 15

#define AseFepMessage_aseFepSetInternalSpeakerCompensationCommand_tag 16

#define AseFepMessage_aseFepVolumeFadeEvent_tag  17
#define FepAseMessage_fepAseCommand_tag          2

#define FepAseMessage_fepAseEvent_tag            3

#define FepAseMessage_fepAseAbsoluteVolumeCommand_tag 4

#define FepAseMessage_fepAseRelativeVolumeCommand_tag 5

#define FepAseMessage_fepAseTunnel_tag           7

#define FepAseMessage_fepAseSetAudioInputResp_tag 8

#define FepAseMessage_fepAseSetAudioOutputResp_tag 9

#define FepAseMessage_fepAseAliveReq_tag         10

#define FepAseMessage_fepAseProductLog_tag       11

#define FepAseMessage_fepAseServiceLog_tag       12

#define FepAseMessage_fepAsePositionSoundModeResp_tag 14

#define FepAseMessage_fepAsePlayComfortToneCmd_tag 16

#define FepAseMessage_fepAseProductInfo_tag      17

#define FepAseMessage_fepAsePowerStatus_tag      18

#define FepAseMessage_fepAseVersionInfo_tag      19

#define FepAseMessage_fepAseStatistics_tag       20

#define FepAseMessage_fepAseAudioSocketChangeEvent_tag 21

#define FepAseMessage_fepAseSetAudioPcmFormatCommandResp_tag 22

#define FepAseMessage_fepAseInternalSpeakerCompensationResp_tag 23

#define FepAseMessage_fepAseVolumeFadeComplete_tag 24

#define FepAseMessage_fepAseReq_tag              25

/* Struct field encoding specification for nanopb */
extern const pb_field_t FepAseCommand_fields[2];
extern const pb_field_t FepAseEvent_fields[2];
extern const pb_field_t FepAseReq_fields[2];
extern const pb_field_t AseFepEvent_fields[2];
extern const pb_field_t AseFepVolumeChangedEvent_fields[2];
extern const pb_field_t FepAseAbsoluteVolumeCommand_fields[2];
extern const pb_field_t FepAseRelativeVolumeCommand_fields[2];
extern const pb_field_t AseFepVolumeFadeEvent_fields[4];
extern const pb_field_t FepAseVolumeFadeComplete_fields[2];
extern const pb_field_t AseFepSetLineInSensitivity_fields[2];
extern const pb_field_t AseFepSetAudioPcmFormatCommand_fields[4];
extern const pb_field_t FepAseSetAudioPcmFormatCommandResp_fields[2];
extern const pb_field_t FepAseAudioSocketChangeEvent_fields[3];
extern const pb_field_t AseFepTunnel_fields[2];
extern const pb_field_t FepAseTunnel_fields[2];
extern const pb_field_t AseFepSetAudioInputReq_fields[3];
extern const pb_field_t FepAseSetAudioInputResp_fields[2];
extern const pb_field_t AseFepSetAudioOutputReq_fields[2];
extern const pb_field_t FepAseSetAudioOutputResp_fields[2];
extern const pb_field_t FepAseAliveReq_fields[1];
extern const pb_field_t AseFepAliveResp_fields[1];
extern const pb_field_t FepAseProductLog_fields[5];
extern const pb_field_t FepAseServiceLog_fields[6];
extern const pb_field_t PositionSoundMode_fields[3];
extern const pb_field_t AseFepSetPositionSoundModeReq_fields[2];
extern const pb_field_t AseFepGetPositionSoundModeReq_fields[1];
extern const pb_field_t FepAsePositionSoundModeResp_fields[3];
extern const pb_field_t InternalSpeaker_fields[4];
extern const pb_field_t AseFepSetInternalSpeakerCompensationCommand_fields[2];
extern const pb_field_t FepAseInternalSpeakerCompensationResp_fields[3];
extern const pb_field_t FepAsePlayComfortToneCmd_fields[2];
extern const pb_field_t AseFepReq_fields[2];
extern const pb_field_t FepAseProductInfo_fields[3];
extern const pb_field_t FepAsePowerStatus_fields[5];
extern const pb_field_t FepAseVersionInfo_fields[2];
extern const pb_field_t FepAseVersionInfo_Module_fields[6];
extern const pb_field_t FepAseStatistics_fields[2];
extern const pb_field_t FepAseStatistics_KeyValuePair_fields[3];
extern const pb_field_t WiFi_fields[3];
extern const pb_field_t NetworkInfo_fields[4];
extern const pb_field_t AseFepNetworkInfo_fields[2];
extern const pb_field_t AseFepMessage_fields[15];
extern const pb_field_t FepAseMessage_fields[22];

/* Maximum encoded size of messages (where known) */
#define FepAseCommand_size                       6
#define FepAseEvent_size                         6
#define FepAseReq_size                           6
#define AseFepEvent_size                         6
#define AseFepVolumeChangedEvent_size            6
#define FepAseAbsoluteVolumeCommand_size         6
#define FepAseRelativeVolumeCommand_size         11
#define AseFepVolumeFadeEvent_size               18
#define FepAseVolumeFadeComplete_size            6
#define AseFepSetLineInSensitivity_size          6
#define AseFepSetAudioPcmFormatCommand_size      18
#define FepAseAudioSocketChangeEvent_size        12
#define AseFepSetAudioInputReq_size              8
#define FepAseSetAudioInputResp_size             2
#define FepAseSetAudioOutputResp_size            2
#define FepAseAliveReq_size                      0
#define AseFepAliveResp_size                     0
#define PositionSoundMode_size                   12
#define AseFepSetPositionSoundModeReq_size       14
#define AseFepGetPositionSoundModeReq_size       0
#define FepAsePositionSoundModeResp_size         20
#define InternalSpeaker_size                     21
#define AseFepReq_size                           6
#define FepAsePowerStatus_size                   24
#define WiFi_size                                8
#define NetworkInfo_size                         22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BEO_ASE_FEP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif

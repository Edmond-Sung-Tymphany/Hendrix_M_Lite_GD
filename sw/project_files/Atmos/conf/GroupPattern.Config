/**
*  @file      GroupPattern.config
*  @brief     Config data for LED patterns, modified according to UI
*  @author    Tandy Liu
*  @date      21-June-2016
*  @copyright Tymphany Ltd.
*/

#include "ledsrv.h"

uint8   volToOneLed_tbl[] = { 60, 120, 180, 255, 0 }; /* must end with '\0' */
tGroupPatternData    knightRiderPattern[]={
    {.cmd = GPC_KnightRider,        .periodTime = 100,      .next_pattern = 0+1,    },
};

tGroupPatternData    fadePattern[]={
    {.cmd = GPC_FadeInByVolume,     .periodTime = 300,                              },
    {.cmd = GPC_FadeOutByVolume,    .periodTime = 300,      .next_pattern = 0+1,    },
};

tGroupPatternData    offOnPattern[]={
    { .cmd = GPC_OffByVolume,       .periodTime = 0,            },   /* all off immediately */
    { .cmd = GPC_OnByVolume,        .periodTime = 0,         .next_pattern = 0+1,        }, /* all on immediately */
};

tGroupPatternData    volumePattern[]={
    { .cmd = GPC_OnByVolume,        .periodTime = 0,            }, /* ON */
    { .cmd = GPC_Delay,             .periodTime = 1000,         },
    { .cmd = GPC_FadeOutByVolume,   .periodTime = 100,          },   /* fade in */
    {0},
};

tGroupPatternData    breathePattern[]={
    { .cmd = GPC_OnByVolume,        .periodTime = 0,            }, /* ON */
    { .cmd = GPC_Delay,             .periodTime = 1000,         },
    { .cmd = GPC_OffByVolume,       .periodTime = 100,          },  /* OFF-one by one */
    { .cmd = GPC_Delay,             .periodTime = 300,          },
    { .cmd = GPC_FadeInByVolume,    .periodTime = 100,          },   /* fade in */
    { .cmd = GPC_Delay,             .periodTime = 3000,         },
    { .cmd = GPC_FadeOutByVolume,   .periodTime = 100,      /*.next_pattern = 4+1, */     },  /* off */
    { .cmd = GPC_Delay,             .periodTime = 100,        .next_pattern = 4+1,    },    
    //[7] = {0},
};

#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG

/// Product Info
#define TP_PRODUCT  "BeoSound Shape"
#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F072RB"

#define STRINGIFY2(x) #x
#define STRINGIFY(x) STRINGIFY2(x)
#define PASTE(a, b) a##.b

/**************************************************/
/************ Firmware Version Control  *****************/
/**************************************************/
/******************************** version *******************************/
/// Bootloader version, ver0 is useless, only 3 digit.
#define BOOTLOADER_VERSION0 0   
#define BOOTLOADER_VERSION1 1
#define BOOTLOADER_VERSION2 0
#define BOOTLOADER_VERSION3 3
#define SOUNDWALL_BL_VERSION        STRINGIFY(BOOTLOADER_VERSION1.BOOTLOADER_VERSION2.BOOTLOADER_VERSION3)
/// application version,only 3 digit. non-zero ver0 used for test version.
#define APPLICATION_VERSION1 2
#define APPLICATION_VERSION2 1
#define APPLICATION_VERSION3 6
#define SOUNDWALL_APP_VERSION       STRINGIFY(APPLICATION_VERSION1.APPLICATION_VERSION2.APPLICATION_VERSION3)
// if APPLICATION_VERSION0 != 0, then it is test version ONLY
#define APPLICATION_VERSION0 0   
#define SOUNDWALL_APP_TEST_VERSION       STRINGIFY(APPLICATION_VERSION1.APPLICATION_VERSION2.APPLICATION_VERSION3.APPLICATION_VERSION0)
/******************************** version *******************************/

#if defined(BOOTLOADER_MACROS)

/* When ST-Bootloader jump to PIU/UBL, timer tick is disabled, and cause 
 * I2C init wait on I2CDrv_WaitReset() and never finish.
 * Workaround: let I2CDrv_WaitReset() delay but do not dependence with tick timer.
 */
//#define I2C_ESTIMATE_TIMEOUT
#define HAS_I2C_ERROR_RECOVERY

#define INTERNAL_HIGH_SPEED_CLOCK

/* Use external 8MHz clock, to give CPU frequency 32MHz
 */
//#define EXTERNAL_HIGH_SPEED_CLOCK

#if defined(EXTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_PCLK
#elif defined(INTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_HSI
#endif

#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (12000000)

///define the number of UART system is using
#define NUM_OF_UART     1

#define HAS_I2C2

#define HAS_IOE_LED
//#define IOE_LED_VIA_HW_I2C
#define IOE_LED_VIA_SW_I2C
#ifdef IOE_LED_VIA_SW_I2C
#define HAS_SWi2c_DEVICE
#endif

///@}  //endof Product Audio Features Config

#else   // APP use the following macros

/* --------------------------------------- application macro start here ---------------------------------------------*/

#define PROJECT_BnO_SOUNDWALL

//#define ENABLE_ONLY_STANDALONE_MODE

/******************************** volume control *******************************/
#define MAX_VOLUME_STEPS    81
/******************************** volume control *******************************/

/******************************** OSC *******************************/
//#define INTERNAL_HIGH_SPEED_CLOCK
#define EXTERNAL_HIGH_SPEED_CLOCK

#if defined(EXTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_PCLK
  #define SYSCLK_RUN_AT_32M
#elif defined(INTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_HSI
#endif

#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (12000000)
/******************************** OSC *******************************/

/******************************** MCU & peripheral *******************************/
#define HAS_I2C2
#define HAS_I2C_ERROR_RECOVERY
#define HAS_I2C_BUS_DETECT
/* For USB Virtual Com Port function */
#define HAS_USB
// master <-> slave communication
#define MCU_COMM_VIA_GPIO
///define the number of UART system is using
//#define MCU_COMM_VIA_UART
#ifdef MCU_COMM_VIA_UART
#define HAS_UART_3
#define NUM_OF_UART     3
#else
#define NUM_OF_UART     1
#endif
#ifdef NDEBUG
#define HAS_IWDG
#endif
#define HAS_I2C_SLAVE
#ifdef HAS_I2C_SLAVE
    #define I2C_SLAVE_DEVICE_ADDR   0xca
#endif
/******************************** MCU & peripheral *******************************/

/******************************** audio related *******************************/
#define HAS_SOUNDMODE_UPDATE
#define HAS_CS42528_CODEC
#define HAS_AUDIO_MUTE_CHANNEL

#define MUSIC_DETECT_BY_GPIO
#define SOURCE_HIJACK_COUNT     15      // unit : 100ms

#define HAS_AUTO_STANDBY
#define DSP_FW_COMPRESSED
#define SPDIF_DIRECT_TO_DSP
#define DSP_TUNING_ON_THE_FLY
/******************************** audio related *******************************/

/******************************** LED *******************************/
#define HAS_IOE_LED
#define IOE_LED_VIA_SW_I2C
//#define IOE_LED_VIA_HW_I2C
#ifdef IOE_LED_VIA_SW_I2C
#define HAS_SWi2c_DEVICE
#endif
//#define LED_ONLY_IN_ACTIVE_STATUS
/******************************** LED *******************************/

/******************************** controller server *******************************/
#define HAS_AUDIO_CONTROL
#define HAS_SYSTEM_CONTROL
#define HAS_DEBUG
#define HAS_SETTING
#define SETTING_HAS_ROM_DATA 
#define HAS_NVM
#define HAS_PERIODIC_SERVER_TASK
#define HAS_A2B
#define PERIODIC_SRV_HAS_DEACTIVE
/******************************** controller server *******************************/

/******************************** QP setting **************************/
#define NUM_OF_SMALL_EVENTS         20
#define SIZE_OF_SMALL_EVENTS        8

#define NUM_OF_MEDIUM_EVENTS        28
#define SIZE_OF_MEDIUM_EVENTS       32

#define NUM_OF_LARGE_EVENTS         5
#define SIZE_OF_LARGE_EVENTS        128

#define AUDIO_SRV_EVENT_Q_SIZE      10
#define SETT_SRV_EVENT_Q_SIZE       6
#define DBG_SRV_EVENT_Q_SIZE        6
#define DBG_SRV_TX_BUF_Q_SIZE      5
#define POWER_SRV_EVENT_Q_SIZE		6
#define I2C_SRV_EVENT_Q_SIZE		6
#define A2B_SRV_EVENT_Q_SIZE        6
#define USB_SRV_EVENT_Q_SIZE        10
#define MAINAPP_EVENT_Q_SIZE        10
/******************************** QP setting **************************/

/******************************** misc setting **************************/
#define HAS_HW_VERSION_TAG
#define HAS_TEMPERATURE_MONITOR
#define TP_MONITOR_ON_OFF_CONTROL
#define INITIATIVE_POWER_MODE_TO_EZ3
/******************************** misc setting **************************/


#define GET_TICKS_IN_MS(x)      (x)

//#define BRINGUP_printf(...)
#define BRINGUP_printf		printf
#define ALWAYS_printf		printf


// bring up debug option
#define KEY_FOR_DEBUG

/* --------------------------------------- application macro end here ---------------------------------------------*/

#endif  // BOOTLOADER_MACROS

//#define TUNING_ON_ST_EVK_BOARD
#define BRINGUP_DEBUG

#endif  // PRODUCT_CONFIG


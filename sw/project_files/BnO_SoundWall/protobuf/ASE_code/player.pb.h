/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Mon Apr 17 15:09:20 2017. */

#ifndef PB_PROTO_PLAYER_PLAYER_PB_H_INCLUDED
#define PB_PROTO_PLAYER_PLAYER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Proto_Player_Data_State {
    Proto_Player_Data_State_PLAYING = 0,
    Proto_Player_Data_State_PAUSED = 1,
    Proto_Player_Data_State_STOPPED = 2
} Proto_Player_Data_State;
#define _Proto_Player_Data_State_MIN Proto_Player_Data_State_PLAYING
#define _Proto_Player_Data_State_MAX Proto_Player_Data_State_STOPPED
#define _Proto_Player_Data_State_ARRAYSIZE ((Proto_Player_Data_State)(Proto_Player_Data_State_STOPPED+1))

/* Struct definitions */
typedef struct _Proto_Player_Data {
    char dummy_field;
/* @@protoc_insertion_point(struct:Proto_Player_Data) */
} Proto_Player_Data;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_Player_Data_init_default           {0}
#define Proto_Player_Data_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_Player_Data_fields[1];

/* Maximum encoded size of messages (where known) */
#define Proto_Player_Data_size                   0

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PLAYER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

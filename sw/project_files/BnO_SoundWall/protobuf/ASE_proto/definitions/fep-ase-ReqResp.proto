syntax = "proto2";
package Proto.FepAse;

enum ReqResp {
	/// Generic response
	PING = 0;

	/// Generic response
	PLAY = 1;

	/// Generic response
	PAUSE = 2;

	/// Generic response
	STOP = 3;

	/// Generic response
	NEXT = 4;

	/// Generic response
	PREV = 5;

	/// Generic response
	NEXT_SOURCE = 6;

	/// Generic response
	JOIN = 7;

	/// Generic response
	PLAY_PAUSE_TOGGLE = 8;

	/// Generic response
	SOUND_SILENCE_TOGGLE = 9;

	/// Generic response
	SOUND = 10;

	/// Generic response
	SILENCE = 11;

	/// Generic response
	MUTE = 12;

	/// Generic response
	UNMUTE = 13;

	/// Generic response
	BT_PAIRING_ON = 14;

	/// Generic response
	BT_PAIRING_OFF = 15;

	/// Generic response
	BTLE_PAIRING_ON = 16;

	/// Generic response
	BTLE_PAIRING_OFF = 17;

	/// Generic response
	BT_PAIRING_TOGGLE = 18;

	/// Generic response. When the request is done, ASE is ready to be shut down
	/// STORAGE and OFF commands make the product turn off
	/// When error is set, shutdown is not possible.
	OFF = 19;
	STORAGE = 20;

	/// Generic response. When the request is done, factory reset has started
	FACTORY_RESET = 21;

	/// Generic response. When the request is done, network setup is initiated
	NETWORK_SETUP = 22;

	/// Generic response. When the request is done, ASE is put to standby
	STANDBY = 23;

	/// Generic response. When the request is done, ALL STANDBY request is
	/// sent over the network and ASE is put to standby.
	ALL_STANDBY = 24;

	/// has Response data of type System.NetworkInfo
	NETWORK_INFO = 25;

	/// Request has data  of type Dsp.AbsoluteVolume or Dsp.RelativeVolumeChange
	/// Request may have missing data field. It means query
	/// of the current volume level. In this scenario response has data of type Dsp.AbsoluteVolume.
	VOLUME_CHANGE = 26;

	/// Response Wpl.Response.Status is set to Done if command was successfuly
	/// executed, or to Error if any error ocured.
	WPL_COMMAND = 27;
}

syntax = "proto2";
package Proto.Puc;

// @brief Input parameter to AseFep.ReqResp(PUC_COMMAND_SEND) 
message PucCommand {
	enum SendMode {
      		IR_SEND_COMMAND_ONCE = 0;
      		IR_SEND_COMMAND_CONTINUOUS = 1;
      		IR_SEND_COMMAND_CONTINUOUS_END = 2;
      		IR_SET_PUC_OUTPUT_LOW = 3;
		IR_SET_PUC_OUTPUT_HIGH = 4;
	}

	enum ModulationMode {
	      IR_MODULATION_OFF = 0;
	      IR_MODULATION_ON = 1;
	}

	enum CommandFormat {
      		IR_PROTOCOL_NEC_FORMAT = 0;
      		IR_PROTOCOL_RC5_FORMAT = 1;
      		IR_PROTOCOL_BITSTREAM_FORMAT = 2;
      		IR_PROTOCOL_RAW_FORMAT = 3;
	}

	optional SendMode sendMode = 1;
	optional ModulationMode modulationMode = 2;
	optional CommandFormat commandFormat = 3;
	required uint32 pucOutput = 4;
	repeated uint32 code = 5;
	optional bytes main = 6;
	optional bytes alt = 7;
	optional bytes repeat_signal_main = 8;
	optional bytes repeat_signal_alt = 9;
	optional bytes flanks = 10;
	optional bytes altFlanks = 11;
}


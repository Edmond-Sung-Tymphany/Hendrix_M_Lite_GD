/******************************************************************************

Copyright (c) 2015, Tymphany HK Ltd. All rights reserved.

Confidential information of Tymphany HK Ltd.

The Software is provided "AS IS" and "WITH ALL FAULTS," without warranty of any
kind, including without limitation the warranties of merchantability, fitness
for a particular purpose and non-infringement. Tymphany HK LTD. makes no
warranty that the Software is free of defects or is suitable for any particular
purpose.

******************************************************************************/

/** @defgroup productConfig  ProductConfig
*    @brief     The config data for product
*    @author    Wesley Lee
*    @note      ST-Nucleo-F072RB
*    @date      22-Sept-2015
*    @copyright Tymphany Ltd.
*
* @{
*/

#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG

 /* Do some test on STM32F091RC EVK */
#define DEBUG_ON_EVK    0
#define DEBUG_ON_PRE_ES    1
#define HAS_IGNORE_UART_FRAMING_ERROR

#define HAS_LED_STRIP

 /**************************************************/
/********* Stack overflow check config ************/
/**************************************************/
#define HAS_STACK_OVERFLOW_LOW_LEVEL_CHECK



/**************************************************/
/************ System Features Config  *******************/
/**************************************************/
/**
* @name System Features Config
* The config data for system features
*/
///@{


/* Enable to use project specific ProjBsp_AssertHandler(),
 * should implement on projBsp.c
 */
#define PROJECT_SPEC_ASSERT_HANDLER

/*
* NOTE!!!
* The feature should only be enabled in release build for MP stage.
* Do NOT enable the feature unless you are very clear on what you are doing!!!
*/
//#define ENABLE_STM_READ_PROTECTION


/**********************/
/* MainApp */
/**********************/
//Enable line in test mode only on debug build
#ifndef NDEBUG
    #define CA22_LINEIN_TEST_MODE
#endif

//#define HAS_SHOP_MODE

/* Note: the macro should be disable after implemented source hijack feature in ASE-TK. */
//#define SOURCE_HIJACK_IN_MCU

/* NOTE: This macro should only be enabled if need to support EVT new top panel. */
//#ifdef NDEBUG
//#define SUPPORT_NEW_TOP_PANEL
//#endif

/* When ST-Bootloader jump to PIU/UBL, timer tick is disabled, and cause
 * IO-Expender init wait on I2CDrv_WaitReset() and never finish.
 * Workaround: let I2CDrv_WaitReset() delay but do not dependence with tick timer.
 */
#if defined(_BOOTLOADER_UBL) || defined(_BOOTLOADER_PIU)
#define I2C_ESTIMATE_TIMEOUT
#endif


/**********************/
/* Power */
/**********************/
/// Enable POWER Server
#define TP_POWER_V2
#define HAS_POWER_CONTROL

///define if the system has battery
//#define HAS_BATTERY

///define the time when system will be auto off if it's in idle state
#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS 900000  // 15min


/**************************************************/
/************ System clock source config  *********/
/**************************************************/
#if DEBUG_ON_EVK
/* EVK uses 8MHz external clock*/
#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (8000000)
#else
#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (12000000)
#endif
/* Use internal clock, to give CPU frequency 8Hz
 */
//#define INTERNAL_HIGH_SPEED_CLOCK

/* Use external 12MHz clock, to give CPU frequency 48MHz
 */
#define EXTERNAL_HIGH_SPEED_CLOCK

#if defined(EXTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_PCLK
#elif defined(INTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_HSI
#endif


//#define USE_POWER_SNEAKY_SERVER


/**********************/
/* Debug */
/**********************/
#define HAS_PROJ_PRINTF // will send MCU log to ASE-TK

//#define GAIN_ADJUSTMENT_FOR_DIFF_BATTLEVEL
#define HAS_DEBUG
#define HW_GPIO_DEBUG
#define PT_ADC_DEBUG
#define BSP_DEBUG_ENABLE
#ifdef PT_ADC_DEBUG
#define HAS_DIRECT_ADC_ACCESS_BY_PORT_BIT
#endif//#if PT_ADC_DEBUG
//#define PT_I2C_DEBUG

#define HAS_APP_PRIVATE_SIG

/**********************/
/* Safety */
/**********************/
//#define HAS_IWDG
#define IWDG_FEED_PERIOD_SEC (20)

#ifndef NDEBUG
/*
  To make sure memory control function properly
  erase chip before burning new MCU image.
  This will reset minimal margin values from flash
  and prepare MCU for new stress testing cycles.
*/
  #define HAS_DYNAMIC_MEMORY_CONTROL
  #define HAS_DYNAMIC_MEMORY_CONTROL_WARNING_PERCENTAGE 30  //for debug build, assert when lower than it
#endif

/******************************** volume control *******************************/
#define MAX_VOLUME_STEPS    81
/******************************** volume control *******************************/

/**********************/
/* Setting */
/**********************/
#define HAS_SETTING
#define SETTING_HAS_ROM_DATA

///NVM is non-volatile-memory, which is the flash inside MCU, need MCU to support this
#define HAS_NVM



/**********************/
/* Audio */
/**********************/
/// Enable AUDIO Server
#define HAS_AUDIO_CONTROL
#define AUDIO_MULTI_SOURCE
#define HAS_AMPLIFY_MUTE
#define AUDIO_LIMITER_FOR_LOW_POWER
#define TP_AUDIO_V2
#define HAS_I2C2
#define SYSCLK_RUN_AT_32M
#define HAS_SWi2c_DEVICE
#define HAS_SWI2C1
//#define HAS_SWI2C2
//#define HAS_SWI2C3
#define HAS_AUXIN
//#define HAS_SPDIF_IN
#define HAS_CS8422
#define HAS_PCM1690
#define PCM1690_TDM_MODE

#define HAS_HW_SPI_DEVICE
#define HAS_CS48L11_DSP

//enable DSP-TUNNING on debug build
#ifndef NDEBUG
//  #define HAS_DSP_TUNING_MODE
#endif

#define HAS_LINE_IN_MULTI_ROOM
#define HAS_LINE_IN_SENSITIVITY_SETTING

/* DSP Path Definition */
#define AUDIO_CHNANNEL_ASE         AUDIO_CHANNEL_I2S_1
#define AUDIO_CHNANNEL_EXT_SOURCE  AUDIO_CHANNEL_I2S_2

#define DSP_TONE_TOUCH_DEFAULT_Gx 0.0
#define DSP_TONE_TOUCH_DEFAULT_Kx -0.967802
#define DSP_POSITION_DEFAULT  SPEAKER_POSITION_WALL


/**********************/
/* Key */
/**********************/
/// Enable KEY Server
#define HAS_KEYS
//#define HAS_ADC_KEY
#define HAS_GPIO_KEY
//#define HAS_INTERRUPT_WAKE_UP_KEY
#define KEY_SRV_HAS_DEBUG

#define HAS_COMB_KEY


/**********************/
/* Led */
/**********************/
/// Enable LED Server
#define HAS_LEDS
#ifdef HAS_LEDS
#define LED_SRV_HAS_SLEEP
#define LED_HAS_IOEXPANDER
//#define LED_HAS_PWM
#define LED_HAS_RGB
#endif



/**********************/
/* WIFI module */
/**********************/
//#define HAS_ASE_TK
//#define HAS_ASE_NG
#define HAS_REJECT_OTA_FROM_ASE
#define ASE_TK_DEBUG_SHOW_RX_DATA
#define ASE_TK_OTA
#define HAS_PRODUCTION_TEST_DISABLE_ASE_TK_UART
#define HAS_PRODUCTION_TEST_RECEIVE_ASE_TK_NOTICE
#define HAS_ASE_NG_SERVICE_TOOL

/**********************/
/* BT module */
/**********************/
//#define HAS_BLUETOOTH
///define if the system has BT tone
//#define HAS_BT_TONE

///define if the system support NFC pair feature
//#define BT_NFC_PAIR

/**********************/
/* HDMI */
/**********************/
#define HAS_HDMI



/**********************/
/* DELEGATE */
/**********************/
/// Enable DELEGATE
#define HAS_DELEGATES

#ifdef HAS_DELEGATES
  //#define HAS_IDLE_DELEGATE
  #ifdef HAS_IDLE_DELEGATE
    #define IDLE_TIMEOUT_IN_MS	(20*60*1000) /*idle debouncing: 20 min */
  #endif /* HAS_IDLE_DELEGATE */
#endif /* HAS_DELEGATES */



/**********************/
/* UART  */
/**********************/
/// Enable the feature that UART can wake up MCU from deep sleep, need MCU support
//#define ENABLE_WAKEUP_BY_UART

///define the number of UART system is using
#define NUM_OF_UART     2
#define UART_NON_DIRECT_MAP
#define HAS_IGNORE_UART_OVER_RUN_ERROR
///@}  //endof System Features Config

/**************************************************/
/**********Product Audio Features Config  ****************/
/**************************************************/
/**
* @name Product Audio Features Config
* The config data for Product Audio Features
*/
///@{

/** @brief Max volume, need to reference DSP volume table
*    @see MASTER_VOL
*/
#define VOLUME_STEP         (3)
#define CUST_MAX_VOL        (32)
#define MIN_VOLUME          0
#define MAX_VOLUME          90      // total of 91 vol.
#define VOLUME_SEND_TO_ASETK (4)    //When exceed this volume change, then send to ASE-TK. This is to reduce event number

/// The max volume when system power is low
#define LOW_POWER_MAX_VOLUME 15

/// The default volume when system is boot up
#define DEFAULT_VOLUME  (45)

#define SHOP_MODE_DEFAULT_VOL     (81)

#define ADUIO_MIN_FADE_STEP_TIME 15 // ms
#define ADUIO_MIN_FADE_STEP      1


/// BT/AUX In proirity config
//#define BT_AUDIO_HAS_HIGH_PRIO
//#define AUX_IN_HAS_HIGH_PRIO

/** iBT150 need to enable this macro to remember volue in audio server
*    But it need to set default volume for power on tone, so before that,
*    disable the macro now
*/
//#define REMEMBER_VOLUME

//#define REDUCE_DYNAMIC_RANGE_WHILE_LOW_POWER

//#define BT_CODEC_STATUS_CHECK       // GPIO from module indicate the status of the audio existance.


///@}  //endof Product Audio Features Config

/**************************************************/
/***************** Debug Control  *********************/
/**************************************************/
/**
* @name Debug Control
* Turn on/off the debug message seperately, easy for debug
*/
///@{

/* Enable it to quick boot. It do not wait ASE-TK to proivde MCLK,
 * thus audio driver will do nothing
 */
//#define DEBUG_QUICK_BOOT_NO_AUDIO

//#define BT_DEBUG_ENABLE
//#define POWER_DEBUG
#define AUDIOSRV_DEBUG
#define MAINAPP_DEBUG
#define ASE_TK_DEBUG_ENABLE
#define AMDRV_DEBUG
#define IDLEDLG_DEBUG
#define HDMISRV_DEBUG
#define HDMIDRV_DEBUG

/// diable all the debug
//#define ALL_DEBUG_DISABLE
#ifdef ALL_DEBUG_DISABLE
#  undef BT_DEBUG_ENABLE
#  undef POWER_DEBUG
#  undef AUDIOSRV_DEBUG
#  undef MAINAPP_DEBUG_ENABLE
#  undef ASE_TK_DEBUG_ENABLE
#endif

///this is ONLY for testing. it allow user use BT button to switch Normal Power and Low Power Drc
//#define LOW_POWER_DRC_QUICK_TEST

///@}  //endof Debug Control

/**************************************************/
/************ Firmware Version Control  *****************/
/**************************************************/
/**
* @name Firmware Version Control
* Firmware Version Info
*/
///@{

/// Product Info
#define TP_PRODUCT  "CA22"
#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F091RC"

#define STRINGIFY2(x) #x
#define STRINGIFY(x) STRINGIFY2(x)
#define PASTE(a, b) a##.b

/// PIU version
#define PIU_MAJOR_VERSION   SW_MAJOR_VERSION
#define PIU_MINOR_VERSION1  SW_MINOR_VERSION1
#define PIU_MINOR_VERSION2  SW_MINOR_VERSION2
#define PIU_MINOR_VERSION3  SW_MINOR_VERSION3
#define PIU_VERSION         STRINGIFY(PIU_MAJOR_VERSION.PIU_MINOR_VERSION1.PIU_MINOR_VERSION2.PIU_MINOR_VERSION3)

/// UBL Bootloader version
#define BL_MAJOR_VERSION   SW_MAJOR_VERSION
#define BL_MINOR_VERSION1  SW_MINOR_VERSION1
#define BL_MINOR_VERSION2  SW_MINOR_VERSION2
#define BL_MINOR_VERSION3  SW_MINOR_VERSION3
#define BOOTLOADER_VERSION      STRINGIFY(BL_MAJOR_VERSION.BL_MINOR_VERSION1.BL_MINOR_VERSION2.BL_MINOR_VERSION3)

/// SW version, i.e. swv0.0.1
#define SW_MAJOR_VERSION   0
#define SW_MINOR_VERSION1  0
#define SW_MINOR_VERSION2  0
#define SW_MINOR_VERSION3  1

#define PRODUCT_VERSION_MCU     STRINGIFY(SW_MAJOR_VERSION.SW_MINOR_VERSION1.SW_MINOR_VERSION2.SW_MINOR_VERSION3)

//#define PRODUCT_VERSION_DSP     ""

#define SOFTWARE_VERSION_STRING TP_PRODUCT PRODUCT_VERSION_MCU
//#define HARDWARE_VERSION_STRING "EVT1"  // should be one of string from hwVersionArray[] in powerdrv_light.c

#define BL_HAS_I2C

#define SW_VERSION_LENGTH    (8)
#define HW_VERSION_LENGTH    (10)
#define DSP_VERSION_LENGTH   (10)
#define PCB_SN_LENGTH        (16)

///@}  //endof Firmware Version Control

/**************************************************/
/****************** QP Setting  **********************/
/**************************************************/
/**
* @name QP Setting
* setting data for QP
*/
///@{
#define NUM_OF_SMALL_EVENTS        80
#define SIZE_OF_SMALL_EVENTS       8

#define NUM_OF_MEDIUM_EVENTS       40
#define SIZE_OF_MEDIUM_EVENTS      16

#define NUM_OF_LARGE_EVENTS        20
#define SIZE_OF_LARGE_EVENTS       220 //ASE-TK server need a big event, original setting (38bytes) is too small

#define AUDIO_SRV_EVENT_Q_SIZE     15
#define SETT_SRV_EVENT_Q_SIZE      10
#define LED_SRV_EVENT_Q_SIZE       15
#define DBG_SRV_EVENT_Q_SIZE       20
#define DBG_SRV_TX_BUF_Q_SIZE      5
#define POWER_SRV_EVENT_Q_SIZE     10
#define KEY_SRV_EVENT_Q_SIZE       10
#define ASETK_SRV_EVENT_Q_SIZE	   20
#define MAINAPP_EVENT_Q_SIZE       20
#define HDMI_SRV_EVENT_Q_SIZE      6


#define BRINGUP_DEBUG

#define BRINGUP_printf      printf
#define ALWAYS_printf       printf

#endif  // PRODUCT_CONFIG

///@}  //endof QP Setting


/// @} //endof product Config group for doxygen


/**
*  @file      controller.Cofig
*  @brief     Config data for controller
*  @author    Bob.Xu
*  @date      18-Mar-2014
*  @copyright Tymphany Ltd.
*/
#include "product.config"

/* server declaration */
#ifdef HAS_POWER_CONTROL
#include "PowerSrv.h"
static cPowerSrv PowerSrv = {SRV_CTOR_FNC(&PowerSrv_StartUp),
                        SRV_XTOR_FNC(&PowerSrv_ShutDown)};
#endif

#ifdef HAS_KEYS
#include "KeySrv.h"
static cKeySrv KeySrv = {SRV_CTOR_FNC(&KeySrv_StartUp),
                        SRV_XTOR_FNC(&KeySrv_ShutDown)};
#endif

#ifdef HAS_LEDS
#include "LedSrv.h"
static cLedSrv ledSrv = {SRV_CTOR_FNC(&LedSrv_StartUp),
                    SRV_XTOR_FNC(&LedSrv_ShutDown)};
#endif

#ifdef HAS_AUDIO_CONTROL
#include "AudioSrv.h"
static cAudioSrv AudioSrv = {SRV_CTOR_FNC(&AudioSrv_StartUp),
                        SRV_XTOR_FNC(&AudioSrv_ShutDown)};
#endif

#ifdef HAS_DEBUG
#ifndef Q_SPY
#include "DebugSSrv.h"
static cDebugSSrv DebugSSrv = {SRV_CTOR_FNC(&DebugSrv_StartUp),
                      SRV_XTOR_FNC(&DebugSSrv_ShutDown)};
#endif
#endif

#ifdef HAS_SETTING
#include "SettingSrv.h"
#ifdef SETTING_HAS_ROM_DATA
static cSettingSrv SettingSrv = {SRV_CTOR_FNC(&SettingSrv_StartUp),
                    SRV_XTOR_FNC(&SettingSrv_ShutDown)};
#endif  // SETTING_HAS_ROM_DATA
#endif  // HAS_SETTING

#ifdef HAS_ASE_TK
#include "AseTkSrv.h"
static cAseTkSrv AseTkSrv = {SRV_CTOR_FNC(&AseTkSrv_StartUp),
                    SRV_XTOR_FNC(&AseTkSrv_ShutDown)};
#endif

/*
  State transition: 
  |--------------------------------------------------------------------------------------------------------------|
  |         | [Off]  ->  [Led Booting]   ->  [Asetk Booting]    ->  [Normal]  ->  [Powering Down]   ->  [Off]    |
  |---------|----------------------------------------------------------------------------------------------------|
  | Purpose |            1 LED init           1 Wait ASE-TK boot                   Wait LED finish      sleep    |
  |         |            2 Touch restart      2 Audio init                                                       |
  |---------|----------------------------------------------------------------------------------------------------|
  | Server  |             POWER               POWER                  POWER         POWER                         |
  |         |             DEBUG               DEBUG                  DEBUG         DEBUG                         |
  |         |  KEY                            (KEY)                  KEY           KEY                   KEY     |
  |         |             (LED)               LED                    LED           LED                           |
  |         |                                 (Audio)                Audio                                       |
  |         |                                 (ASETK)                ASETK                                       |
  | -------------------------------------------------------------------------------------------------------------|

  Note:
  1. LedBooting is to show LED early. If init LED on AsetkBooting, there is 500ms delay on DSP init
  2. If disable LedSrv on OFF, LED still keep ON, need to find root cause
  3. If init Audio on NORMAL, AudioSrv need time to init, but ASE-TK will send UNMUTE very soon.
     AudioSrv will miss event and cause no output issue.
*/


/* user can config the mode below*/
const static tObjectListEntity  serverList [] =
{
    {DEBUG_SRV_ID,   (cPersistantObj*)&DebugSSrv,  NORMAL_MODE | LED_BOOTING_MODE | ASE_TK_BOOTING_MODE | WAIT_MODE | POWERING_DOWN_MODE            | FAST_BOOT_MODE | OFF_CHARGING_MODE },
    {SETTING_SRV_ID, (cPersistantObj*)&SettingSrv, NORMAL_MODE | LED_BOOTING_MODE | ASE_TK_BOOTING_MODE | WAIT_MODE | POWERING_DOWN_MODE | OFF_MODE | FAST_BOOT_MODE | OFF_CHARGING_MODE },
    {LED_SRV_ID,     (cPersistantObj*)&ledSrv,     NORMAL_MODE | LED_BOOTING_MODE | ASE_TK_BOOTING_MODE | WAIT_MODE | POWERING_DOWN_MODE            | FAST_BOOT_MODE | OFF_CHARGING_MODE },
    {AUDIO_SRV_ID,   (cPersistantObj*)&AudioSrv,   NORMAL_MODE |                    ASE_TK_BOOTING_MODE | WAIT_MODE                                 | FAST_BOOT_MODE },
    {KEY_SRV_ID,     (cPersistantObj*)&KeySrv,     NORMAL_MODE |                    ASE_TK_BOOTING_MODE | WAIT_MODE | POWERING_DOWN_MODE | OFF_MODE | FAST_BOOT_MODE | OFF_CHARGING_MODE },
    {POWER_SRV_ID,   (cPersistantObj*)&PowerSrv,   NORMAL_MODE | LED_BOOTING_MODE | ASE_TK_BOOTING_MODE | WAIT_MODE | POWERING_DOWN_MODE            | FAST_BOOT_MODE },
    {ASETK_SRV_ID,   (cPersistantObj*)&AseTkSrv,   NORMAL_MODE | LED_BOOTING_MODE | ASE_TK_BOOTING_MODE | WAIT_MODE },
};

/* App declaration*/
#include "MainApp.h"
static cMainApp MainApp =  {APP_CTOR_FNC(&MainApp_StartUp),
                        APP_XTOR_FNC(&MainApp_ShutDown)};

const static tObjectListEntity  appList [] =
{
    {MAIN_APP_ID,               (cPersistantObj *)&MainApp,          NORMAL_MODE},
};


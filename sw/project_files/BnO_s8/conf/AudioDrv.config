

#define SPDIF_IN_SAMPLES_BUFFER_SIZE	1000

#define NUM_OF_SPDIF_CHANNEL        2
#define NUM_OF_ANALOG_CHANNEL       2
#define SPDIF_SENSE_VALID_COUNT_MAX     570
#define SPDIF_SENSE_VALID_COUNT_MIN     500

#define SPDIF_SENSE_DOLBY_VALID_COUNT_MAX     (450)
#define SPDIF_SENSE_DOLBY_VALID_COUNT_MIN     (380)


#define SPDIF_HAVE_SIGNAL_COUNT         (100)     // if there is a laser signal

//#define SPDIF_SENSE_VALID_COUNT     550

#define SPDIF_SENSE_INVALID_LOWER            (450)
#define SPDIF_SENSE_INVALID_UPPER            (600)  

#define ANALOG_SENSE_VALID              (1000)

#define MICRO_DELAY     uint16 AvgData = 0;


#define     DET_IN1_PIN                     GPIO_23
#define     DET_IN1_READ(x)                 GpioDrv_ReadBit(&(x),DET_IN1_PIN)

#define     DET_IN2_PIN                     GPIO_24
#define     DET_IN2_READ(x)                 GpioDrv_ReadBit(&(x),DET_IN2_PIN)

#define     RJ45_SENSE_IN_PIN               GPIO_25
#define     RJ45_SENSE_IN_PIN_READ(x)       GpioDrv_ReadBit(&(x),RJ45_SENSE_IN_PIN)


static tSpdifObj SpdifObj[]={
    {
            .digital_data = 0,
            .pin = GPIO_21,
            .sample_count = 0,
            .channel = SPDIF_CHANNEL_0,
            .isCableConnected = 0
    },
    {
            .digital_data = 0,
            .pin = GPIO_22,
            .sample_count = 0,
            .channel = SPDIF_CHANNEL_1,
            .isCableConnected = 0
    }
};

#define IsLineInPluggedIn()             (!DET_IN1_READ(gpioAudio)&&!DET_IN2_READ(gpioAudio))
#define IsSpdif0InPluggedIn()           (SpdifObj[0].isCableConnected)
#define IsSpdif1InPluggedIn()           (!DET_IN1_READ(gpioAudio)&& DET_IN2_READ(gpioAudio))
#define IsRJ45InPluggedIn()             (RJ45_SENSE_IN_PIN_READ(gpioAudio))
//#define IsRJ45InPluggedIn()             (1)

#define IsLineInMusicDetected()         (AnalogObj[1].isHasMusic)
#define IsSpdif0MusicDetected()         (SpdifObj[0].isHasMusic)
#define IsSpdif1MusicDetected()         (SpdifObj[1].isHasMusic)
#define IsRJ45MusicDetected()           (AnalogObj[0].isHasMusic)    
//#define IsRJ45MusicDetected()           (1)    


static tAnalogObj AnalogObj[]={
        {
            .rawData =0,
            .sample_count = 0,
            .pin = ADC_PIN4,                        // PA1 Power Link Music Detect
            .channel = ANALOG_CHANNEL_0,
        },
        {
            .rawData =0,
            .sample_count = 0,
            .pin = ADC_PIN5,                        // PA2 Line In Music Detect
            .channel = ANALOG_CHANNEL_1,
        },
};



#include "mainapp_priv.h"

#define SETTING_RESEND_LIMIT    3
#define PAGE_SIZE               1024        // # of 32-bit Instructions per Page
#define IDLE_TIMEOUT_MS         3000
#define TIMER_PERIOD_MS         1000

#define NUM_OF_SCREEN_DIGIT             8
#define NUM_OF_PRESET                   3
#define NUM_OF_MENU_SETT_ITEMS          24
#define NUM_OF_PRESET_ITEMS             NUM_OF_MENU_SETT_ITEMS

#define NUM_OF_IR_LEARNING_CODE         (3*2*2)     // NUM_OF_KEY X 2 SET X 2 MEMBER


typedef int32 arrIrLearningCode[NUM_OF_IR_LEARNING_CODE];

typedef struct tSettingEntry
{
    uint8   vol_level[4];              /**< SETID_VOLUME       */
    bool    isAcPlugIn;             /**< SETID_AC_STATUS    */
#ifdef AUDIO_MULTI_SOURCE
    eAudioChannel channel; 
    bool isAuxInPlugIn;
#endif
    uint8 maxVolume;
    bool isMusicPlaying;            /***< SETID_MUSIC_DET */
    arrIrLearningCode IrLearningCode;
    tSourceObj SourceObj[4];        // Save all the Source Object
    eSourceName curSourceObj;       // Save the current Input Source Object
    uint32 magicNum;
}tSettingEntry;


static tSettingEntry setting;

/*
    SETID_VOLUME = SETID_START,
    SETID_CHANNEL,
    SETID_IS_AUXIN_PLUG_IN,
    SETID_MAX_VOLUME,
    SETID_MUSIC_DET,
    SETID_IR_LEARN_CODE,
    SETID_SOURCE_OBJECT,
    SETID_CURRENT_SOURCE,
    SETID_MAGIC_NUMBER,
*/

static tSettingDatabase settingDB[SETID_MAX] =
{
    { &setting.vol_level,       4,                              SETTING_ATTR_VALID | SETTING_ATTR_NVM},     // address in NVM=SETT_PAGE_ROM_ADDR
    { &setting.channel,         sizeof(setting.channel),        SETTING_ATTR_VALID | SETTING_ATTR_NVM},
    { &setting.isAuxInPlugIn,   sizeof(setting.isAuxInPlugIn),  SETTING_ATTR_VALID},
    { &setting.maxVolume,       sizeof(setting.maxVolume),      SETTING_ATTR_VALID},
    { &setting.isMusicPlaying,  sizeof(setting.isMusicPlaying), SETTING_ATTR_VALID},
    { &setting.IrLearningCode,  sizeof(setting.IrLearningCode), SETTING_ATTR_VALID | SETTING_ATTR_NVM},      // address in NVM=SETT_PAGE_ROM_ADDR
    { &setting.SourceObj,       sizeof(setting.SourceObj),      SETTING_ATTR_VALID | SETTING_ATTR_NVM},
    { &setting.curSourceObj,    sizeof(setting.curSourceObj),   SETTING_ATTR_VALID | SETTING_ATTR_NVM},
    { &setting.magicNum,        4,                              SETTING_ATTR_VALID | SETTING_ATTR_NVM},     // address in NVM=SETT_PAGE_ROM_ADDR
};

#define SETT_PAGE_ROM_ADDR      0x08007c00
#define SETT_ELEMENT_MAX_SIZE   0x0100


#define SETT_PAGE_NVM_ADDR_IR_LEARN_CODE        (SETT_PAGE_ROM_ADDR)
#define SETT_PAGE_NVM_ADDR_VOLUME               (SETT_PAGE_ROM_ADDR+sizeof(setting.IrLearningCode))
#define SETT_PAGE_NVM_ADDR_CHANNEL              (SETT_PAGE_NVM_ADDR_VOLUME+sizeof(setting.vol_level))
#define SETT_PAGE_NUM_ADDR_SOURCEOBJ            (SETT_PAGE_NVM_ADDR_CHANNEL+sizeof(setting.channel))
#define SETT_PAGE_NUM_ADDR_MAGIC_NUM            (SETT_PAGE_NUM_ADDR_SOURCEOBJ+sizeof(setting.SourceObj))
#define SETT_PAGE_NUM_ADDR_CURRENT_SOURCE       (SETT_PAGE_NUM_ADDR_MAGIC_NUM+sizeof(setting.curSourceObj))

static const tSettingRomMap settingRomMap[] =
{
    { SETID_IR_LEARN_CODE,   SETT_PAGE_ROM_ADDR                 },
    { SETID_VOLUME,          SETT_PAGE_NVM_ADDR_VOLUME          },
    { SETID_CHANNEL,         SETT_PAGE_NVM_ADDR_CHANNEL         },
    { SETID_SOURCE_OBJECT,   SETT_PAGE_NUM_ADDR_SOURCEOBJ       },
    { SETID_MAGIC_NUMBER,     SETT_PAGE_NUM_ADDR_MAGIC_NUM       },
    { SETID_CURRENT_SOURCE,   SETT_PAGE_NUM_ADDR_CURRENT_SOURCE  },
};



/** @defgroup productConfig  ProductConfig
*    @brief      The config data for product
*    @author   Edmond Sung
*    @note      B&O S8 MKII
*    @date      13-Jan-2015
*    @copyright Tymphany Ltd. 
* 
* @{
*/

#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG

/**************************************************/
/************ System Features Config  *******************/
/**************************************************/
/**
* @name System Features Config
* The config data for system features
*/
///@{

#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (8000000)

/// Define if there's battery info in setting server
//#define DEBUG_BATT_INFO
#define HAS_DEBUG

/// Enable LED Server
#define HAS_LEDS
#ifdef HAS_LEDS
//#define LED_HAS_IOEXPANDER
#define LED_HAS_PWM
#define LED_HAS_RGB
#endif
/// Enable AUDIO Server
#define HAS_AUDIO_CONTROL
/// Enable KEY Server
#define HAS_KEYS
//#define HAS_ADC_KEY
#define HAS_GPIO_KEY
/// Enable BLUETOOTH Server
//#define HAS_BLUETOOTH
#define HAS_IR_LEARNING
#define HAS_INFRARED_CTR


//#define HAS_SETTING
//#define SETTING_HAS_ROM_DATA

/// Enable POWER Server
//#define HAS_POWER_CONTROL

/// Enable DELEGATE
#define HAS_DELEGATES
#ifdef HAS_DELEGATES
//#define HAS_BT_DELEGATE
//#define HAS_POWER_DELEGATE
#define HAS_IR_LEARNING_DELEGATE
#endif

#define AUDIO_MULTI_SOURCE

/**@brief Enable NVM feature
*
*   NVM is non-volatile-memory, which is the flash inside MCU, need MCU to support this
*/
#define HAS_NVM

///Enable the extra timer for accurate delay
//#define ENABLE_ACCURATE_DELAY

/// Enable the feature that UART can wake up MCU from deep sleep, need MCU support
//#define ENABLE_WAKEUP_BY_UART

///define the number of UART system is using
#define NUM_OF_UART     1

///define the time when system will be auto off if it's in idle state
#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS  (900000)  // 15min
//#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS  (300000)  // 5min
//#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS  (15000)  // 15sec
//#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS  (30000)  // 30sec
//#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS  (60000)  // 1min
#define SWITCH_SOURCE_DELAY_MS          (800)       // 500ms

///define if the system has BT tone
//#define HAS_BT_TONE

///define if the system support NFC pair feature
//#define BT_NFC_PAIR

///set up the timeout for emergency mode 
#define EMERGENCY_MODE_TIMEOUT_MS  (3600*1000)  //1hours

///@}  //endof System Features Config

/**************************************************/
/**********Product Audio Features Config  ****************/
/**************************************************/
/**
* @name Product Audio Features Config
* The config data for Product Audio Features
*/
///@{

/** @brief Max volume, need to reference DSP volume table
*    @see MASTER_VOL
*/
#define MAX_VOLUME          31      // total of 20 vol. variations

/// The max volume when system power is low
#define LOW_POWER_MAX_VOLUME 15

/// The default volume when system is boot up
#define DEFAULT_VOLUME      16

/// The default volume for BT tone
#define BT_TONE_DEFALUT_VOLUME  8
/// The volume step for system to fade volume after playing tone
#define BT_TONE_RESTORE_VOL_STEP 1


/** iBT150 need to enable this macro to remember volue in audio server
*    But it need to set default volume for power on tone, so before that, 
*    disable the macro now 
*/
#define REMEMBER_VOLUME
#define TP_AUDIO_V1

//#define BT_CODEC_STATUS_CHECK       // GPIO from module indicate the status of the audio existance.

#define INTERNAL_HIGH_SPEED_CLOCK

///@}  //endof Product Audio Features Config

/**************************************************/
/***************** Debug Control  *********************/
/**************************************************/
/**
* @name Debug Control
* Turn on/off the debug message seperately, easy for debug
*/
///@{

//#define BT_DEBUG_ENABLE

//#define POWER_DEBUG

//#define AUDIOSRV_DEBUG

#define MAINAPP_DEBUG_ENABLE
//#define DSP_DRV_DEBUG_ENABLE
//#define IR_LEARNING_DRV_DEBUG_ENABLE
#define IR_LEARNING_DEBUG_ENABLE
//#define SETTING_SRV_DEBUG_ENABLE
#define AUDIO_DRV_DEBUG_ENABLE

/// diable all the debug 
//#define ALL_DEBUG_DISABLE
#ifdef ALL_DEBUG_DISABLE
#undef BT_DEBUG_ENABLE
#undef POWER_DEBUG
#undef AUDIOSRV_DEBUG
#undef MAINAPP_DEBUG_ENABLE
#endif

///this is ONLY for testing. it allow user use BT button to switch Normal Power and Low Power Drc
//#define LOW_POWER_DRC_QUICK_TEST

///@}  //endof Debug Control

/**************************************************/
/************ Firmware Version Control  *****************/
/**************************************************/
/**
* @name Firmware Version Control
* Firmware Version Info
*/
///@{

/// Product Info
#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F030x6"


#define STRINGIFY2(x) #x
#define STRINGIFY(x) STRINGIFY2(x)
#define PASTE2(a, b) a##b
#define PASTE(a, b) PASTE2(a,b)

/// SW version, i.e. swv5.05
#define SW_MAJOR_VERSION  3
#define SW_MINOR_VERSION1  0
#define SW_MINOR_VERSION2  1
#define PRODUCT_VERSION_MCU     STRINGIFY(PASTE(SW_MAJOR_VERSION.SW_MINOR_VERSION1, SW_MINOR_VERSION2))


/// DSP EQ version, i.e. EQ4.01
#define DSP_MAJOR_VERSION  0
#define DSP_MINOR_VERSION1  0
#define DSP_MINOR_VERSION2  1
#define PRODUCT_VERSION_DSP     STRINGIFY(PASTE(DSP_MAJOR_VERSION.DSP_MINOR_VERSION1, DSP_MINOR_VERSION2))

///@}  //endof Firmware Version Control

/**************************************************/
/****************** QP Setting  **********************/
/**************************************************/
/**
* @name QP Setting 
* setting data for QP
*/
///@{
#define NUM_OF_SMALL_EVENTS         0  //0 means we don't have the small event queue
#define SIZE_OF_SMALL_EVENTS        0

#define NUM_OF_MEDIUM_EVENTS        5
#define SIZE_OF_MEDIUM_EVENTS       8

#define NUM_OF_LARGE_EVENTS         7
#define SIZE_OF_LARGE_EVENTS        24

#define AUDIO_SRV_EVENT_Q_SIZE      3
#define LED_SRV_EVENT_Q_SIZE        3
#define KEY_SRV_EVENT_Q_SIZE        3
#define DBG_SRV_EVENT_Q_SIZE        3
#define DBG_SRV_TX_BUF_Q_SIZE       5

#define HAS_SPDIF_SIGNAL_SENSE
#define HAS_ANALOG_SIGNAL_SENSE

#define HAS_RJ45_INPUT

#define HAS_AUDIO_IO_MONITOR
#ifdef HAS_AUDIO_IO_MONITOR
#define HAS_GPIO_JACK_IN_DETECT
#endif

#define MUTIPLE_SOURCE_MUSIC_DETECTION

#define MUSIC_DETECTION_WHEN_STANDBY

//This number will be writen to a specific flash address after factory reset
#define FACTORY_RESET_CODE       (0xaa55aa55)

#endif  // PRODUCT_CONFIG

///@}  //endof QP Setting 


/// @} //endof product Config group for doxygen


/**
*  @file      controller.Cofig
*  @brief     Config data for controller
*  @author    Bob.Xu
*  @date      18-Mar-2014
*  @copyright Tymphany Ltd.
*/
#include "product.config"

/* server declaration */
#ifdef HAS_POWER_CONTROL
#include "PowerSrv.h"
static cPowerSrv PowerSrv = {SRV_CTOR_FNC(&PowerSrv_StartUp),
                             SRV_XTOR_FNC(&PowerSrv_ShutDown)
                            };
#endif

#ifdef HAS_SYSTEM_CONTROL
#include "SystemSrv.h"
static cSystemSrv SystemSrv = {SRV_CTOR_FNC(&SystemSrv_StartUp),
                               SRV_XTOR_FNC(&SystemSrv_ShutDown)
                              };
#endif

#ifdef HAS_KEYS
#include "KeySrv.h"
static cKeySrv KeySrv = {SRV_CTOR_FNC(&KeySrv_StartUp),
                         SRV_XTOR_FNC(&KeySrv_ShutDown)
                        };
#endif

#ifdef HAS_LEDS
#include "LedSrv.h"
static cLedSrv ledSrv = {SRV_CTOR_FNC(&LedSrv_StartUp),
                         SRV_XTOR_FNC(&LedSrv_ShutDown)
                        };
#endif

#ifdef HAS_AUDIO_CONTROL
#include "AudioSrv.h"
static cAudioSrv AudioSrv = {SRV_CTOR_FNC(&AudioSrv_StartUp),
                             SRV_XTOR_FNC(&AudioSrv_ShutDown)
                            };
#endif

#ifdef HAS_DEBUG
#ifndef Q_SPY
#include "DebugSSrv.h"
static cDebugSSrv DebugSSrv = {SRV_CTOR_FNC(&DebugSrv_StartUp),
                               SRV_XTOR_FNC(&DebugSSrv_ShutDown)
                              };
#endif
#endif

#ifdef HAS_BLUETOOTH
#include "BluetoothSrv.h"
static cBluetoothSrv BluetoothSrv = {SRV_CTOR_FNC(&BluetoothSrv_StartUp),
                                     SRV_XTOR_FNC(&BluetoothSrv_ShutDown)
                                    };
#endif

#ifdef HAS_SETTING
#include "SettingSrv.h"
#ifdef SETTING_HAS_ROM_DATA
static cSettingSrv SettingSrv = {SRV_CTOR_FNC(&SettingSrv_StartUp),
                                 SRV_XTOR_FNC(&SettingSrv_ShutDown)
                                };
#endif  // SETTING_HAS_ROM_DATA
#endif  // HAS_SETTING

#ifdef HAS_PERIODIC_SERVER_TASK
#include "PeriodicSrv.h"
static cPeriodicSrv PeriodicSrv = {SRV_CTOR_FNC(&PeriodicSrv_StartUp),
                                   SRV_XTOR_FNC(&PeriodicSrv_ShutDown)
                                  };
#endif

/*
  State transition:
  |--------------------------------------------------------------------------------------------------------------|
  |         | [Off]  ->  [POWERING_UP]   ->   [WAIT_MODE]       ->  [Normal]  ->  [Powering Down]   ->  [Off]    |
  |---------|----------------------------------------------------------------------------------------------------|
  | Purpose |            1 Power init         1 Wait BT boot                       Wait LED finish      sleep    |
  |         |            2 BT  init           2 Audio init                                                       |
  |---------|----------------------------------------------------------------------------------------------------|
  | Server  |             (POWER)             POWER                  POWER         POWER                         |
  |         |             (DEBUG)             DEBUG                  DEBUG         DEBUG                         |
  |         |  KEY                                                   (KEY)                                       |
  |         |             (LED)               LED                    LED           LED                           |
  |         |                                 (Audio)                Audio                                       |
  |         |                                 (BT)                   BT                                          |
  | -------------------------------------------------------------------------------------------------------------|
  |         | [OffCharging]                                                                                      |
  |---------|----------------------------------------------------------------------------------------------------|
  | Purpose | 1 charging                                                                                         |
  |         |                                                                                                    |
  |---------|----------------------------------------------------------------------------------------------------|
  | Server  |  POWER                                                                                             |
  |         |                                                                                                    |
  |         |                                                                                                    |
  |         |   LED                                                                                              |
  |         |                                                                                                    |
  |         |                                                                                                    |
  | -------------------------------------------------------------------------------------------------------------|

  Note:
  1. TO DO may need WAIT_MODE for BT module booting
  2.
  3.
*/


/* user can config the mode below*/
const static tObjectListEntity  serverList [] =
{
//                                                       POWERING_UP_MODE | WAIT_MODE | NORMAL_MODE | SLEEP_MODE | POWERING_DOWN_MODE | OFF_MODE | OFF_CHARGING_MODE | SHOP_MODE
#ifdef HAS_DEBUG
#ifndef Q_SPY
    {DEBUG_SRV_ID,    (cPersistantObj *)&DebugSSrv,      POWERING_UP_MODE | WAIT_MODE | NORMAL_MODE | SLEEP_MODE | POWERING_DOWN_MODE | OFF_MODE | OFF_CHARGING_MODE | SHOP_MODE },
#endif
#endif
    {POWER_SRV_ID,    (cPersistantObj *)&PowerSrv,       POWERING_UP_MODE | WAIT_MODE | NORMAL_MODE              | POWERING_DOWN_MODE                                | SHOP_MODE },
    {SETTING_SRV_ID,  (cPersistantObj *)&SettingSrv,     POWERING_UP_MODE | WAIT_MODE | NORMAL_MODE | SLEEP_MODE | POWERING_DOWN_MODE | OFF_MODE | OFF_CHARGING_MODE | SHOP_MODE },
    {LED_SRV_ID,      (cPersistantObj *)&ledSrv,         POWERING_UP_MODE | WAIT_MODE | NORMAL_MODE              | POWERING_DOWN_MODE            | OFF_CHARGING_MODE | SHOP_MODE },
    {AUDIO_SRV_ID,    (cPersistantObj *)&AudioSrv,                          WAIT_MODE | NORMAL_MODE              | POWERING_DOWN_MODE                                | SHOP_MODE },
    {KEY_SRV_ID,      (cPersistantObj *)&KeySrv,                                        NORMAL_MODE                                   | OFF_MODE | OFF_CHARGING_MODE | SHOP_MODE },       /* KEY still active at sleep, to allow factory reset, according to UI */
    {BT_SRV_ID,       (cPersistantObj *)&BluetoothSrv,                      WAIT_MODE | NORMAL_MODE                                                                              },
};

/* App declaration*/
#include "MainApp.h"
static cMainApp MainApp =  {APP_CTOR_FNC(&MainApp_StartUp),
                            APP_XTOR_FNC(&MainApp_ShutDown)
                           };

const static tObjectListEntity  appList [] =
{
    {MAIN_APP_ID,               (cPersistantObj *)&MainApp,          NORMAL_MODE},
};


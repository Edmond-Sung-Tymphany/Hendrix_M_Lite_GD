/**
*  @file      pattern.config
*  @brief     Config data for LED patterns, modified according to UI
*  @author    Wesley Lee
*  @date      15-Jul-2014
*  @copyright Tymphany Ltd.
*/

#include "LedDrv.h"
/***************************************************************************
 * led Pattern Config Data,

 * @param  periodTime       the repeated period time in ms
 * @para   onTime           the time of turning on LED (duty cycle),
 *                          it's only valid in Blink style
 *                          when onTime     == periodTime    , it will light up solid
 * @para   duration         the duration of the pattern,
 *                          set to ALWAYS_REPEAT if it's always repeated
 * @para   color            the color of LED
 * para    nextPattern      It's used to combine patterns. When one pattern is shown once,
 *                          led_srv will jump to show the next pattern which is defined
 *                          in this parameter. Set it to PAT_MAX_NUMBER to only show one pattern
 *                          check below "SYS_ON_CRITICAL_BAT_PAT" for example
 * @para   style            the style we need, defined in ePatStyle
 ***************************************************************************/

/* NOISE_EXTEND_PERIOD_MS
 * Flash white LED for touch noise detect period
 */
//#include "tch_defines.h"

/* Fading pattern setting
 */
#define MAX_BRIGHTNESS   (100)
#define FADING_DATA_SIZE  128

extern const uint8 LED_FADING_NORMAL_DATA[FADING_DATA_SIZE];
extern const uint8 LED_FADING_DIM_DATA[FADING_DATA_SIZE];
extern const uint8 LED_FADING_PULSE_DATA[FADING_DATA_SIZE];
extern const uint8 LED_FADING_DATA[FADING_DATA_SIZE];

/* Other Setting
 */
#define NOT_NEEDED  0
#define ALWAYS_REPEAT (~0)
#define LED_OFF_LEVEL   0
#define LED_ON_LEVEL    (100)




const tPatternData patternConfig[PAT_MAX_NUMBER] =
{
    /* FG_OFF_PATT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = BLACK,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
        .fading_data  = NULL,
    },

    /* BG_WHITE_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
        .fading_data    = NULL,
    },

    /* BG_RED_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
        .fading_data    = NULL,
    },

    /* BG_BLUE_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = BLUE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
        .fading_data    = NULL,
    },

    /* BG_GREEN_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = GREEN,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
        .fading_data    = NULL,
    },

    /* BG_WHITE_DIM_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = DIM_WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
    },

    /* BG_RED_DIM_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = DIM_RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
    },

    /* BG_BLUE_DIM_PAT */
    {
        .periodTime     = 0,
        .onTime         = 0,
        .duration       = ALWAYS_REPEAT,
        .color          = DIM_BLUE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = SOLID_STYLE,
    },

    /* BG_WHITE_FLASH_PAT */
    {
        .periodTime     = 1000,
        .onTime         = 500,
        .duration       = ALWAYS_REPEAT,
        .color          = WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG_RED_FLASH_PAT */
    {
        .periodTime     = 1600,
        .onTime         = 700,
        .duration       = ALWAYS_REPEAT,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG_BLUE_FLASH_PAT */
    {
        .periodTime     = 1000,
        .onTime         = 500,
        .duration       = ALWAYS_REPEAT,
        .color          = BLUE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG_RED_SLOW_FLASH_PAT */
    {
        .periodTime     = 3000,
        .onTime         = 1500,
        .duration       = ALWAYS_REPEAT,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG SLOW_FLASH_RED_DIM */
    {
        .periodTime     = 3000,
        .onTime         = 1500,
        .duration       = ALWAYS_REPEAT,
        .color          = DIM_RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },
    /* FLASH_PAT_RED_DIM */
    {
        .periodTime     = 1600,
        .onTime         = 700,
        .duration       = ALWAYS_REPEAT,
        .color          = DIM_RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG_WHITE_QUICK_FLASH_PAT */
    {
        .periodTime     = 200,
        .onTime         = 100,
        .duration       = ALWAYS_REPEAT,
        .color          = WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* BG_RED_QUICK_FLASH_PAT */
    {
        .periodTime     = 200,
        .onTime         = 100,
        .duration       = ALWAYS_REPEAT,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },
    /* BG_BLUE_QUICK_FLASH_PAT */
    {
        .periodTime     = 200,
        .onTime         = 100,
        .duration       = ALWAYS_REPEAT,
        .color          = BLUE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* FG_RED_QUICK_FLASH_ONCE_PAT */
    {
        .periodTime     = 300,
        .onTime         = 200,
        .duration       = 300,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },

    /* FG_DIM_WHITE_QUICK_FLASH_ONCE_PAT */
    {
        .periodTime     = 200,
        .onTime         = 100,
        .duration       = 200,
        .color          = DIM_WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = BLINK_STYLE,
        .fading_data    = NULL,
    },


    /* BG_WHITE_PULSE_PAT */
    {
        .periodTime     = 4000,
        .onTime         = 4000,
        .duration       = ALWAYS_REPEAT,
        .color          = WHITE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = FADE_STYLE,
        .fading_data    = LED_FADING_PULSE_DATA,
    },

    /* BG_RED_PULSE_PAT */
    {
        .periodTime     = 3000,
        .onTime         = 3000,
        .duration       = ALWAYS_REPEAT,
        .color          = RED,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = FADE_STYLE,
        .fading_data    = LED_FADING_DATA,
    },

    /* BG_BLUE_PULSE_PAT */
    {
        .periodTime     = 4000,
        .onTime         = 4000,
        .duration       = ALWAYS_REPEAT,
        .color          = BLUE,
        .nextPattern    = PAT_MAX_NUMBER,
        .style          = FADE_STYLE,
        .fading_data    = LED_FADING_PULSE_DATA,
    },
    /* FG_RED_ONCE_PAT */
    {
        .periodTime     = 3000,
        .onTime         = 3000,
        .duration       = 3000,
        .color          = RED,
        .nextPattern    = TRANS_PREV_2_OFF_PAT,
        .style          = FADE_STYLE,
        .fading_data    = LED_FADING_DATA,
    },

    /* TRANS_OFF_2_ON_PAT_RED */
    {
        .periodTime     = 1000,
        .onTime         = 1000,
        .duration       = 1000,
        .color          = RED,
        .nextPattern    = SOLID_PAT_RED,
        .style          = FADE_IN_STYLE,
        .fading_data    = LED_FADING_NORMAL_DATA,
    },
    /* TRANS_OFF_2_ON_PAT_DIM_RED */
    {
        .periodTime     = 1000,
        .onTime         = 1000,
        .duration       = 1000,
        .color          = DIM_RED,
        .nextPattern    = DIM_PATT_RED,
        .style          = FADE_IN_STYLE,
        .fading_data    = LED_FADING_NORMAL_DATA,
    },
    /* TRANS_PREV_2_ON_PAT_DIM_RED */
    {
        .periodTime     = 500,
        .onTime         = 500,
        .duration       = 500,
        .color          = PREVIOUS_COLOR,
        .nextPattern    = DIM_PATT_RED,
        .style          = FADE_IN_STYLE,
        .fading_data    = LED_FADING_NORMAL_DATA,
    },

    /* TRANS_PREV_2_ON_PAT_RED */
    {
        .periodTime     = 500,
        .onTime         = 500,
        .duration       = 500,
        .color          = PREVIOUS_COLOR,
        .nextPattern    = SOLID_PAT_RED,
        .style          = FADE_IN_STYLE,
        .fading_data    = LED_FADING_NORMAL_DATA,
    },
    /* TRANS_PREV_2_OFF_PAT */
    {
        .periodTime     = 500,
        .onTime         = 500,
        .duration       = 500,
        .color          = PREVIOUS_COLOR,
        .nextPattern    = OFF_PATT,
        .style          = FADE_IN_STYLE,
        .fading_data    = LED_FADING_NORMAL_DATA,
    },

};
/**********************************************************/
/* below part is NOT needed config */


const uint8 LED_FADING_DATA[FADING_DATA_SIZE]=
{
      0,   1,   2,   4,   5,   6,   7,   9,
     10,  11,  12,  13,  15,  16,  17,  18,
     20,  21,  22,  23,  24,  25,  27,  28,
     29,  30,  31,  33,  34,  35,  36,  37,
     38,  39,  41,  42,  43,  44,  45,  46,
     47,  48,  49,  50,  51,  52,  53,  55,
     56,  57,  58,  59,  60,  61,  62,  62,
     63,  64,  65,  66,  67,  68,  69,  70,
     71,  72,  72,  73,  74,  75,  76,  77,
     77,  78,  79,  80,  80,  81,  82,  82,
     83,  84,  84,  85,  86,  86,  87,  88,
     88,  89,  89,  90,  90,  91,  91,  92,
     92,  93,  93,  94,  94,  95,  95,  95,
     96,  96,  96,  97,  97,  97,  98,  98,
     98,  98,  99,  99,  99,  99,  99,  99,
    100, 100, 100, 100, 100, 100, 100, 100,
};


/* On FS1/FS2,
 *   IO-Expendor brightness 60~255 => 100% human feeling brightness
 *   IO-Expendor brightness     50 =>  50% human feeling brightness
 *   IO-Expendor brightness      6 =>  25% human feeling brightness
 */

//0%~100%
const uint8 LED_FADING_NORMAL_DATA[FADING_DATA_SIZE]=
{
    0, 0, 0, 0, 0, 0, 1, 1,
    1, 1, 2, 2, 2, 3, 3, 3,
    4, 4, 5, 5, 6, 7, 7, 8,
    9, 9, 10, 11, 12, 12, 13, 14,
    15, 16, 17, 18, 19, 20, 21, 22,
    23, 24, 25, 26, 27, 28, 29, 30,
    31, 32, 34, 35, 36, 37, 38, 40,
    41, 42, 43, 44, 46, 47, 48, 49,
    51, 52, 53, 54, 56, 57, 58, 59,
    60, 62, 63, 64, 65, 66, 68, 69,
    70, 71, 72, 73, 74, 75, 76, 77,
    78, 79, 80, 81, 82, 83, 84, 85,
    86, 87, 88, 88, 89, 90, 91, 91,
    92, 93, 93, 94, 95, 95, 96, 96,
    97, 97, 97, 98, 98, 98, 99, 99,
    99, 99, 100, 100, 100, 100, 100, 100,
};


//50%~100%
const uint8 LED_FADING_DIM_DATA[FADING_DATA_SIZE]=
{
    50, 51, 51, 52, 52, 53, 54, 54,
    55, 56, 56, 57, 57, 58, 59, 59,
    60, 60, 61, 62, 62, 63, 63, 64,
    65, 65, 66, 66, 67, 68, 68, 69,
    69, 70, 70, 71, 72, 72, 73, 73,
    74, 74, 75, 75, 76, 76, 77, 77,
    78, 78, 79, 79, 80, 80, 81, 81,
    82, 82, 83, 83, 84, 84, 85, 85,
    86, 86, 86, 87, 87, 88, 88, 88,
    89, 89, 90, 90, 90, 91, 91, 91,
    92, 92, 92, 93, 93, 93, 94, 94,
    94, 95, 95, 95, 95, 96, 96, 96,
    96, 97, 97, 97, 97, 97, 98, 98,
    98, 98, 98, 98, 99, 99, 99, 99,
    99, 99, 99, 99, 100, 100, 100, 100,
    100, 100, 100, 100, 100, 100, 100, 100,
};


//5%~70%
const uint8 LED_FADING_PULSE_DATA[FADING_DATA_SIZE]=
{
    1, 1, 1, 1, 1, 1, 2, 2,
    2, 2, 3, 3, 3, 3, 4, 4,
    4, 5, 5, 5, 6, 6, 6, 7,
    7, 8, 8, 8, 9, 9, 10, 10,
    11, 11, 12, 12, 13, 13, 14, 15,
    15, 16, 16, 17, 18, 18, 19, 19,
    20, 21, 21, 22, 23, 23, 24, 25,
    25, 26, 27, 28, 28, 29, 30, 30,
    31, 32, 33, 33, 34, 35, 36, 37,
    37, 38, 39, 40, 40, 41, 42, 43,
    44, 44, 45, 46, 47, 48, 48, 49,
    50, 51, 52, 52, 53, 54, 55, 56,
    56, 57, 58, 59, 60, 60, 61, 62,
    63, 64, 64, 65, 66, 67, 67, 68,
    69, 70, 70, 71, 72, 73, 73, 74,
    75, 75, 76, 77, 77, 78, 79, 79,
};







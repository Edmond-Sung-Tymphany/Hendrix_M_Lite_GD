#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG

#include "model_config.h"

#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F030CC"

/******************************** version message **************************/

//#define RELEASE_VERSION
#ifdef RELEASE_VERSION
#define NDEBUG
#endif

#ifndef NDEBUG
//#define MAINAPP_DEBUG
#endif

#define BT_MAC_ADDR_LENGTH   (6)
#define SW_VERSION_LENGTH    (16)
#define HW_VERSION_LENGTH    (16)
#define DSP_VERSION_LENGTH   (16)
#define BT_VERSION_LENGTH    (16)

//#define MCU_FW_SELF_CHECKING
#define SHORT_PRESS_PAIRING

//#define UNIT_TEST_ENABLE

/******************************** volume **************************/
/* volume, treble, bass setting */
#define MAX_VOLUME_STEPS	33
#define DEFAULT_VOLUME  	20
#define DEFAULT_AUDIO_CUE_VOLUME        (20)
#define CLICK_NUM_PER_VOLUME_STEP 1

#define MAX_BASS_STEPS		11
#define DEFAULT_BASS  	    5
#define CLICK_NUM_PER_BASS_STEP 3

#define MAX_TREBLE_STEPS	11
#define DEFAULT_TREBLE  	5
#define CLICK_NUM_PER_TREBLE_STEP 3

#define DSP_EQ_BAND_NUM     (5)
#define MAX_EQ_BAND_STEPS   (11)
#define DEFAULT_EQ_LEVEL    (5)

#define ROTATER_LED_NUM     (10)

#define DEFAULT_VOLUME_IN_SHOPMODE      (20)
#define DEFAULT_BASS_IN_SHOPMODE        (5)
#define DEFAULT_TREBLE_IN_SHOPMODE      (5)

/******************************** volume **************************/

/******************************** Bluetooth **************************/
#define BLUETOOTH_V3
#define HAS_BLUETOOTH
#define HAS_BT_RESET_PIN
#define HAS_BT_AUDIO_CUE
#define HAS_FIX_VOL_AUDIO_CUE
#define HAS_SKIP_CMD
#define BT_ON_OFF_USE_PIO_CMD
#define HAS_BT_SEQ_CONTROL
#define WAIT_BT_MODULE_BOOT_UP
//#define HAS_COMM_WATCHDOG       /* it should be enabled after DVT stage */

/******************************** Bluetooth **************************/

/******************************** audio **************************/
//#define HAS_MCO          // already compile sucess, Open this difine when the new board ready
#define HAS_AUXIN
#define HAS_AUTO_STANDBY
#define AUTO_STANDBY_TIMEOUT_CNT    (20*60*100)  // 20minute * 60second / 0.01 second(100ms)
#define HAS_AUDIO_CONTROL
#define HAS_ADAU1761_DSP
#define TP_AUDIO_V2
#define DSP_TUNING_ON_THE_FLY
#define DSP_TREBLE_BASS_TUNINGx

#define HAS_TAS5760_AMP
#define HAS_TPA3116_AMP
#define HAS_ADAU1761_DSP_VERSION
/******************************** audio **************************/

/******************************** key **************************/
#define HAS_KEYS
#define HAS_GPIO_KEY
#define HAS_ROTATER_KEY
#define KEY_SRV_HAS_DEBUG
#define HAS_COMB_KEY
#define HAS_POWER_SWITCH_KEY
#define POWER_OFF_TO_ON_DEBOUNCE
#define HAS_COMPLEX_PRESS_KEY
/******************************** key **************************/

/******************************** system control **************************/
#define HAS_POWER_CONTROL
#define SYSTEM_RESTART_AFTER_FACTORY_RESET
#define PERIODIC_SRV_HAS_DEACTIVE // added by colin for test

#define WORK_MODE_ID_NORMAL (0)
#define WORK_MODE_ID_SHOP   (1)

#define WORK_MODE_ID_MAX    (2)


/******************************** system control **************************/

/******************************** IO Expander **************************/
#define IOEXPANDERDRV_RST_CONTROL
#define IOEXPANDERDRV_ONE_RST_FOR_MULTI_IOE
/******************************** IO Expander **************************/

/******************************** power **************************/
#define TP_POWER_V2
#define HAS_MCU_SLEEP
/******************************** power **************************/

/******************************** Safety **************************/
//#define HAS_IWDG
#define IWDG_FEED_PERIOD_SEC (20)

/******************************** Safety **************************/

/******************************** debug & rom **************************/
#define HAS_DEBUG
#define HAS_SETTING
#define SETTING_HAS_ROM_DATA
#define HAS_NVM
//#define TP_MONITOR_ON_OFF_CONTROL
#define TP_MONITOR_HAS_PRIVATE_SIGNAL
#define HAS_IGNORE_UART_OVER_RUN_ERROR
#define HAS_IGNORE_UART_FRAMING_ERROR
#define HAS_DEBUG_RESP

/******************************** debug & rom **************************/

/******************************** led **************************/
#define HAS_LEDS
//#define LED_HAS_RGB
#define LED_SRV_SUPPORT_64_LEDS
#define LED_SRV_HAS_SLEEP
#define LED_HAS_IOEXPANDER
#define LED_SRV_EVENT_Q_SIZE        10
#define LED_SRV_HAS_RESPONSE

#define LED_BRIGHTNESS_MAX          (255)

#define STEADY_BRIGHTNESS_MAX      (70)
#define STEADY_BRIGHTNESS_DEFAULT  (52)

#define DIM_BRIGHTNESS_MAX      (10)
#define DIM_BRIGHTNESS_DEFAULT  (7)

/******************************** led **************************/

/******************************** MCU & peripheral **************************/
///define the number of UART system is using
#define NUM_OF_UART     4
#define UART_NON_DIRECT_MAP
#define CUSTOM_UART3_8_IRQHANDLER

//#define HAS_INDEPENDED_WATCHDOG
#define HAS_I2C2
/******************************** MCU peripheral **************************/

/******************************** OSC **************************/
#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (12288000)
//#define EXTERNAL_AND_INTERNAL_HIGH_SPEED_CLOCK
#define INTERNAL_HIGH_SPEED_CLOCK
/******************************** OSC **************************/

/******************************** QP setting **************************/
#define NUM_OF_SMALL_EVENTS         15
#define SIZE_OF_SMALL_EVENTS        8

#define NUM_OF_MEDIUM_EVENTS        15
#define SIZE_OF_MEDIUM_EVENTS       16

#define NUM_OF_LARGE_EVENTS         16
#define SIZE_OF_LARGE_EVENTS        80 //bluetooth server need a big event for PB data, original setting (32bytes) is too small

#define AUDIO_SRV_EVENT_Q_SIZE      10
#define SETT_SRV_EVENT_Q_SIZE       6
#define DBG_SRV_EVENT_Q_SIZE        6
#define DBG_SRV_TX_BUF_Q_SIZE       30
#define KEY_SRV_EVENT_Q_SIZE        10
#define BT_SRV_EVENT_Q_SIZE	        5
#define POWER_SRV_EVENT_Q_SIZE		5
#define ASETK_SRV_EVENT_Q_SIZE	   10
#define MAINAPP_EVENT_Q_SIZE       10
/******************************** QP setting **************************/


/**********************/
/* DELEGATE */
/**********************/
/// Enable DELEGATE
#define HAS_DELEGATES
//#define HAS_BT_DELEGATE
//#define HAS_POWER_DELEGATE
#ifdef HAS_DELEGATES
  #define HAS_IDLE_DELEGATE
#endif /* HAS_DELEGATES */


/******************************** stack **************************/
#define HAS_STACK_OVERFLOW_LOW_LEVEL_CHECK
/******************************** stack **************************/

#define BRINGUP_printf		printf
#define ALWAYS_printf		printf

#define SYS_TICKS_PER_SEC       1000U
#define GET_TICKS_IN_MS(x)      (x * SYS_TICKS_PER_SEC / 1000)



#endif  // PRODUCT_CONFIG


/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Thu Mar 22 17:57:35 2018. */

#ifndef PB_PROTO_BTDEVINFO_BT_DEV_INFO_PB_H_INCLUDED
#define PB_PROTO_BTDEVINFO_BT_DEV_INFO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(6) Proto_BtDevInfo_Data_btAddr_t;
typedef struct _Proto_BtDevInfo_Data {
    bool has_btAddr;
    Proto_BtDevInfo_Data_btAddr_t btAddr;
/* @@protoc_insertion_point(struct:Proto_BtDevInfo_Data) */
} Proto_BtDevInfo_Data;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_BtDevInfo_Data_init_default        {false, {0, {0}}}
#define Proto_BtDevInfo_Data_init_zero           {false, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_BtDevInfo_Data_btAddr_tag          1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_BtDevInfo_Data_fields[2];

/* Maximum encoded size of messages (where known) */
#define Proto_BtDevInfo_Data_size                8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BT_DEV_INFO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

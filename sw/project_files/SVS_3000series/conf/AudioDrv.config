/**
*  @file      AudioSrv.Config
*  @brief     Config data for audio server 
*  @project   iBT150 
*  @author    Johnny Fan
*  @date      15-Sep-2014
*  @copyright Tymphany Ltd.
*/

#include "AudioSrv.h"
#include "product.config"
#include "limits.h"



/*****************************************************************
 * Config Data
 *****************************************************************/

/* The original request from B&O Jens is: 950uV, 350uV, 150uV
 * But DSP's RMS detect block have bug, it sometimes report -81.9dB when mute aux-in (jack remove)
 * Workaround: increase high-level from 150uV (-83dB) to 189uV (-81dB)
 */
#define AUDIO_AUXIN_DETECT_LOW_DB       -69  /* dB, 950uVrms */
#define AUDIO_AUXIN_DETECT_MID_DB       -77  /* dB, 350uVrms */
#define AUDIO_AUXIN_DETECT_HIGH_DB      -81  /* dB, 189uVrms */

#define AUDIO_AUXIN_DETECT_DISABLE      0x7F /* invalid issue */

#define AUDIO_AUXIN_DETECT_PEROID_MSEC  1000 /* ms */
#define AUDIO_AUXIN_DETECT_SMOOTH_RATE  0.3  /* smooth rate, between 0.0~1.0 */

/* the time (ms) per timeout signal */
#define AUDIO_SRV_TIMEOUT_IN_MS        100 //MUST be the same with AudioSrv.Config
#define AUDIO_HAS_MUSIC_TIMES          (5)
#define AUDIO_DRV_PRINT_TIMEOUT_IN_MS  2000

/* measured in ms */
#define AUDIO_ACTIVE_AUXIN_JACK_DET_TIME        100   /* there is no this detection pin*/
#define AUDIO_ACTIVE_MUSIC_DETECT_TIME          400
#define AUDIO_AMP_TEMP_CHECK_TIME               200
#define AUDIO_ACTIVE_MUTE_DEBOUNCE_TIME         1000

/* Pin usage */
#define  AMP_WAKEUP(x)     GpioDrv_SetBit(&(x), GPIO_OUT_AMP_STDBY) //Active LOW
#define  AMP_SHUTDOWN(x)   GpioDrv_ClearBit(&(x), GPIO_OUT_AMP_STDBY)

#define  AMP_MUTE(x)       GpioDrv_SetBit(&(x), GPIO_OUT_AMP_MUTE) //Active HIGH
#define  AMP_UNMUTE(x)     GpioDrv_ClearBit(&(x), GPIO_OUT_AMP_MUTE)

//#define TEMP_DETECT_SMOOTH_RATE  (30)  /*  smooth rate in %, between (0.0~1.0)*100  */
#define TEMPERATURE_POSITIONS_NUM  ArraySize(audioNtcTempTable)

/* The DSP version range. If out of range, might means DSP is unstabe, due to VCC3V3 can not pull low on EVT1/EVT2 hardware */
#define DSP_MIN_VER 3.0
#define DSP_MAX_VER 100.0


/*****************************************************************
 * Temp sensor configuration
 *****************************************************************/
///* Temperature lookup table on EVT1
// * array index is "degree C"
// */
//const uint16 audioNtcTempTable[] =
//{
//    876, 850, 823, 795, 768,    739, 717, 694, 670, 647,   //0~9 degree C
//    623, 603, 584, 564, 544,    524, 508, 492, 475, 458,   //10~19 degree C
//    442, 428, 414, 400, 386,    372, 361, 349, 338, 326,   //20~29 degree C
//    314, 305, 295, 286, 276,    266, 258, 250, 242, 234,   //30~39 degree C
//    226, 219, 212, 206, 199,    192, 186, 181, 175, 169,   //40~49 degree C
//    164, 159, 154, 149, 145,    140, 136, 132, 128, 124,   //50~59 degree C
//    120, 117, 113, 110, 107,    103, 100,  98,  95,  92,   //60~69 degree C
//     89,  87,  85,  82,  80,     77,  75,  73,  71,  69,   //70~79 degree C
//     67,  66,  64,  62,  60,     59,  57,  56,  54,  53,   //80~89 degree C
//     51,  50,  49,  47,  46,     45,  44,  43,  42,  41,   //90~99 degree C
//     40                                                    //100 degree C
//                                                           //otherwise, 101 degree C
//};


/* Temperature lookup table on EVT2, the same as ca16
 * array index is "degree C"
 */
//const uint16 audioNtcTempTable[] =
//{
//    3848,    3836,    3823,    3810,    3796,    3782,    3767,    3752,    3736,    3720, //0~9 degree C
//    3703,    3685,    3667,    3649,    3629,    3610,    3589,    3568,    3546,    3524, //10~19 degree C
//    3501,    3478,    3453,    3429,    3403,    3377,    3351,    3324,    3296,    3268, //20~29 degree C
//    3239,    3209,    3179,    3149,    3118,    3086,    3054,    3021,    2988,    2955, //30~39 degree C
//    2921,    2887,    2852,    2817,    2782,    2746,    2710,    2674,    2637,    2601, //40~49 degree C
//    2564,    2527,    2490,    2453,    2415,    2378,    2341,    2303,    2266,    2229, //50~59 degree C
//    2191,    2154,    2117,    2081,    2044,    2007,    1971,    1935,    1900,    1864, //60~69 degree C
//    1829,    1794,    1760,    1725,    1692,    1658,    1625,    1592,    1560,    1528, //70~79 degree C
//    1497,    1466,    1435,    1405,    1376,    1346,    1318,    1289,    1262,    1234, //80~89 degree C
//    1207,    1181,    1155,    1130,    1105,    1080,    1056,    1033,    1010,     987, //90~99 degree C
//     965,     943,     922,     901,     881,     861,     841,     822,     804,     785, //100~109 degree C
//     767,     750,     733,     716,     700,     684,     668,     653,     638,     624, //110~119 degree C
//     609,     595,     582,     569,     556,     543,     531,     519,     507,     496, //120~119 degree C
//     485                                                                                   //130 degree C
//                                                                                           //otherwise, 131 degree C
//};


/* Temperature lookup table on EVT2, fine tune from ca16 table: All temperature +3 degree C
 * array index is "degree C"
 */
const uint16 audioNtcTempTable[] =
{
    4000,    3990,    3980,          //0~2 degree C 
                                     //(ADC is dummy values, to meet EE team requirement: +3 degree C)
                                                                                           
    3848,    3836,    3823,    3810,    3796,    3782,    3767,    3752,    3736,    3720, //3~12 degree C
    3703,    3685,    3667,    3649,    3629,    3610,    3589,    3568,    3546,    3524, //13~22 degree C
    3501,    3478,    3453,    3429,    3403,    3377,    3351,    3324,    3296,    3268, //23~32 degree C
    3239,    3209,    3179,    3149,    3118,    3086,    3054,    3021,    2988,    2955, //33~42 degree C
    2921,    2887,    2852,    2817,    2782,    2746,    2710,    2674,    2637,    2601, //43~52 degree C
    2564,    2527,    2490,    2453,    2415,    2378,    2341,    2303,    2266,    2229, //53~62 degree C
    2191,    2154,    2117,    2081,    2044,    2007,    1971,    1935,    1900,    1864, //63~72 degree C
    1829,    1794,    1760,    1725,    1692,    1658,    1625,    1592,    1560,    1528, //73~82 degree C
    1497,    1466,    1435,    1405,    1376,    1346,    1318,    1289,    1262,    1234, //83~92 degree C
    1207,    1181,    1155,    1130,    1105,    1080,    1056,    1033,    1010,     987, //93~102 degree C
     965,     943,     922,     901,     881,     861,     841,     822,     804,     785, //103~112 degree C
     767,     750,     733,     716,     700,     684,     668,     653,     638,     624, //113~122 degree C
     609,     595,     582,     569,     556,     543,     531,     519,     507,     496, //123~132 degree C
     485                                                                                   //133 degree C
                                                                                           //otherwise, 134 degree C
};

#define AUDIO_TEMP_MAX   SHRT_MAX
#define AUDIO_TEMP_MIN   SHRT_MIN

const sRange ampTempLevels[TL_NUM] =
{   // upper           lower
    {AUDIO_TEMP_MAX,    95            },  // 0:TL_CRITICAL, shutdown system
    {92,                91            },  // 1:TL_SERIOUS, shutdown amp, flash amber
    {87,                80            },  // 2:TL_WARN, reduce DSP gain, flash amber
    {79,                AUDIO_TEMP_MIN},  // 3:TL_NORMAL
};

//MAINAPP_MAX_TEMP_ALLOW_BOOT is defined on MainApp.config



/*****************************************************************
 * DSP NTC Temperature Register
 *****************************************************************/
#define DSP_TEMP_NTC_REGISTER   MOD_SE_TUNING_TEMPNTC_DCINPALG2_ADDR


#define DSP_READBACK_TEMP_WF_REGISTER    MOD_SE_TUNING_TEMPWFREADBACK_READBACKALGSIGMA2007_ADDR
#define DSP_READBACK_TEMP_TW_REGISTER    MOD_SE_TUNING_TEMPTWREADBACK_READBACKALGSIGMA2006_ADDR
#define DSP_READBACK_GAIN_WF_REGISTER    MOD_SE_TUNING_WFTEMPGAIN_READBACKALGSIGMA2004_ADDR
#define DSP_READBACK_GAIN_TW_REGISTER    MOD_SE_TUNING_TWTEMPGAIN_READBACKALGSIGMA2003_ADDR
#define DSP_READBACK_GAIN_HW_REGISTER    MOD_SE_TUNING_HWTEMPGAIN_READBACKALGSIGMA2001_ADDR

#define DSP_READBACK_NOISE_GATE_REGISTER    MOD_LINEINSIGNALDETECTION_NG_SWSIGNALDETECTION_READBACKALGSIGMA2008_ADDR


#define DSP_TONE_TOUCH_GX1_REGISTER   MOD_VOLUMECONTROL_TT_XGAIN1_DCINPALG8_ADDR
#define DSP_TONE_TOUCH_GX2_REGISTER   MOD_VOLUMECONTROL_TT_XGAIN2_DCINPALG9_ADDR
#define DSP_TONE_TOUCH_GY1_REGISTER   MOD_VOLUMECONTROL_TT_YGAIN1_DCINPALG10_ADDR
#define DSP_TONE_TOUCH_GY2_REGISTER   MOD_VOLUMECONTROL_TT_YGAIN2_DCINPALG11_ADDR
#define DSP_TONE_TOUCH_GZ_REGISTER    MOD_VOLUMECONTROL_TT_ZGAIN_DCINPALG12_ADDR
#define DSP_TONE_TOUCH_K5_REGISTER    MOD_VOLUMECONTROL_TT_K5_DCINPALG13_ADDR
#define DSP_TONE_TOUCH_K6_REGISTER    MOD_VOLUMECONTROL_TT_K6_DCINPALG14_ADDR





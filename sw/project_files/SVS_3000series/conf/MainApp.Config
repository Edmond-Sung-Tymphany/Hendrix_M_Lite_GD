/**
*  @file      MainApp.Config
*  @brief     Config data for MainApp
*  @author    Daniel Qin
*  @date      25-12-2015
*  @copyright Tymphany Ltd.
*/

const static uint8 preset1Name[LEN_OF_PRESET_NAME]@"MENU_PRESET_1_NAME" = "MOVIE";
const static uint8 preset2Name[LEN_OF_PRESET_NAME]@"MENU_PRESET_2_NAME" = "MUSIC";
const static uint8 preset3Name[LEN_OF_PRESET_NAME]@"MENU_PRESET_3_NAME" = "CUSTOM";
const static uint32 BOOTLOADER_MODE[1]@"BOOT_MODE"= {BOOT_MODE_APP};

#ifdef SVS_SB3000
static const uint8 projFeatureSet[] = 
{
    FEATURE_ID_STANDBY,
    FEATURE_ID_LP,
    FEATURE_ID_HP,
    FEATURE_ID_PEQ1,
    FEATURE_ID_PEQ2,
    FEATURE_ID_PEQ3,
    FEATURE_ID_RGC,
    FEATURE_ID_PHASE,
    FEATURE_ID_POLARITY,
    FEATURE_ID_VOLUME,
    FEATURE_ID_PRESET_NAME,
    FEATURE_ID_OTA,
    FEATURE_ID_REMOVE_LOCK,
    FEATURE_ID_REMOVE_DISPLAY_ON,
};
#else
static const uint8 projFeatureSet[] = 
{
    FEATURE_ID_STANDBY,
    FEATURE_ID_LP,
    FEATURE_ID_HP,
    FEATURE_ID_PEQ1,
    FEATURE_ID_PEQ2,
    FEATURE_ID_PEQ3,
    FEATURE_ID_RGC,
    FEATURE_ID_PHASE,
    FEATURE_ID_POLARITY,
    FEATURE_ID_TUNNING,
    FEATURE_ID_VOLUME,
    FEATURE_ID_PRESET_NAME,
    FEATURE_ID_OTA,
    FEATURE_ID_REMOVE_LOCK,
    FEATURE_ID_REMOVE_DISPLAY_ON,
    FEATURE_ID_REMOVE_TUNING_EXT, /*PB3000 no extened tuning*/
};
#endif

static const Color ledBrightnessArray[LED_BRIGHTNESS_TOTAL_STEPS] =
{
    LED_BRIGHTNESS_0,
    LED_BRIGHTNESS_25,
    LED_BRIGHTNESS_50,
    LED_BRIGHTNESS_75,
};


/*  default setting of menu data
*/
static const tMenuDataAttr menuDataAttr[NUM_OF_MENU_DATA] =
{
    /* settingId               min      max   default   perSstep  dspSettinId */
    {PAGE_SETTING_DISPLAY,      0,      20,     0,      10,     DSP_SETT_ID_MAX     },  /* keep it, even through it doesn't use as this project */
    {PAGE_SETTING_TIMEOUT,      0,      600,    100,    100,    DSP_SETT_ID_MAX     },  /* keep it, even through it doesn't use as this project */
    {PAGE_SETTING_STANDBY,      0,      20,     20,     10,     DSP_SETT_ID_MAX     },
    {PAGE_SETTING_BRIGHTNESS,   0,      70,     20,     10,     DSP_SETT_ID_MAX     },  /* keep it, even through it doesn't use as this project */
    {PAGE_SETTING_LP_STATUS,    0,      10,     0,      0,      DSP_EQ_CTRL_USER_LP },
    {PAGE_SETTING_LP_FRE,       300,    2000,   800,    10,     DSP_EQ_CTRL_USER_LP },
    {PAGE_SETTING_LP_SLO,       60,     240,    120,    60,     DSP_EQ_CTRL_USER_LP },
    {PAGE_SETTING_PEQ1_STATUS,  0,      10,     0,      0,      DSP_EQ_CTRL_PEQ1    },
    {PAGE_SETTING_PEQ1_FRE,     200,    2000,   500,    10,     DSP_EQ_CTRL_PEQ1    },
    {PAGE_SETTING_PEQ1_BOOST,   -120,   60,     0,      1,      DSP_EQ_CTRL_PEQ1    },
    {PAGE_SETTING_PEQ1_Q,       2,      100,    10,     1,      DSP_EQ_CTRL_PEQ1    },
    {PAGE_SETTING_PEQ2_STATUS,  0,      10,     0,      0,      DSP_EQ_CTRL_PEQ2    },
    {PAGE_SETTING_PEQ2_FRE,     200,    2000,   500,    10,     DSP_EQ_CTRL_PEQ2    },
    {PAGE_SETTING_PEQ2_BOOST,   -120,   60,     0,      1,      DSP_EQ_CTRL_PEQ2    },
    {PAGE_SETTING_PEQ2_Q,       2,      100,    10,     1,      DSP_EQ_CTRL_PEQ2    },
    {PAGE_SETTING_PEQ3_STATUS,  0,      10,     0,      0,      DSP_EQ_CTRL_PEQ3    },
    {PAGE_SETTING_PEQ3_FRE,     200,    2000,   500,    10,     DSP_EQ_CTRL_PEQ3    },
    {PAGE_SETTING_PEQ3_BOOST,   -120,   60,     0,      1,      DSP_EQ_CTRL_PEQ3    },
    {PAGE_SETTING_PEQ3_Q,       2,      100,    10,     1,      DSP_EQ_CTRL_PEQ3    },
    {PAGE_SETTING_RGC_STATUS,   0,      10,     0,      0,      DSP_EQ_CTRL_RGC     },
    {PAGE_SETTING_RGC_FREQ,     250,    400,    250,    10,     DSP_EQ_CTRL_RGC     },
    {PAGE_SETTING_RGC_SLOPE,    60,     120,    120,    60,     DSP_EQ_CTRL_RGC     },
    {PAGE_SETTING_VOL,          -600,   0,      -100,   10,     DSP_VOLUME_SETT_ID  },
    {PAGE_SETTING_PHASE,        0,      1800,   0,      10,     DSP_PHASE_SETT_ID   },
    {PAGE_SETTING_POLARITY,     0,      10,     0,      10,     DSP_POLARITY_SETT_ID},
    {PAGE_SETTING_TUNNING,      120,    200,    200,    40,     DSP_EQ_CTRL_TUNING  },
};

static const int16 menuData[NUM_OF_MENU_DATA]@"MENU_SETTINGS" = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    0,500,0,10,     /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    0,500,0,10,     /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

static const int16 preset1Data[NUM_OF_MENU_DATA]@"MENU_PRESET_1" = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    0,500,0,10,     /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    0,500,0,10,     /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

static const int16 preset2Data[NUM_OF_MENU_DATA]@"MENU_PRESET_2" = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    10,630,20,24,   /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    10,630,10,20,   /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

static const int16 preset3Data[NUM_OF_MENU_DATA]@"MENU_PRESET_3" = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    0,500,0,10,     /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    0,500,0,10,     /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};


static const int16 preset1OriginalData[NUM_OF_MENU_DATA] = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    0,500,0,10,     /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    0,500,0,10,     /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

static const int16 preset2OriginalData[NUM_OF_MENU_DATA] = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    10,630,20,24,   /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    10,630,10,20,   /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

static const int16 preset3OriginalData[NUM_OF_MENU_DATA] = 
{
    0,100,20,20,    /* display,     timeout,    standby,    brightness  */
    0,800,120,      /* lpStatus,    lpFreq,     lpSlo                   */
    0,500,0,10,     /* peq1Status,  peq1Freq,   peq1Boost,  peq1Q       */
    0,500,0,10,     /* peq2Status,  peq2Freq,   peq2Boost,  peq2Q       */
    0,500,0,10,     /* peq3Status,  peq3Freq,   peq3Boost,  peq3Q       */
    0,250,120,      /* rgcStatus,   rgcFreq,    rgcSlope                */
    -100,0,0,200    /* volume,      phase,      polarity,   tunning     */
};

/* vol step table is not linear at UIv05 */
const int16 volStepTable[]=
{
-600,  -430,   -420,   -410,   -400,   -390,   -380,   -370,   -360,   -350,   -340,   -330,   -320,   -310,   -300, 
-290,  -280,   -270,   -260,   -250,   -240,   -230,   -220,   -210,   -200,   -190,   -180,   -170,   -160,   -150, 
-140,  -130,   -120,   -110,   -100,   -90,    -80,    -70,    -60,    -50,    -40,    -30,    -20,     -10,    0
};

/* low pass filter frequency is not linear, so create a table to adust the led bar*/
const int16 lpFreqStepTable[]= 
{
300,    310,    320,    330,    340,    350,    360,    370,    380,    390,    400,    420,    440,    460,    480,
500,    520,    540,    560,    580,    600,    650,    700,    750,    800,    850,    900,    950,    1000,   1080, 
1170,   1250,   1330,   1420,   1500,   1580,   1660,   1750,   1830,   1910,   2000
};

/* PHASE is not linear, so create a table to adust the led bar*/
const int16 phaseStepTable[]=
{
0,      40,     80,     120,    160,    200,    240,    280,    320,    360,    400,    450,    490,    530,    570, 
610,    650,    690,    730,    770,    810,    850,    900,    940,    980,    1020,   1060,   1100,   1140,   1180, 
1220,   1260,   1300,   1350,   1390,   1430,   1470,   1510,   1550,   1590,   1630,   1670,   1710,   1750,   1800
};



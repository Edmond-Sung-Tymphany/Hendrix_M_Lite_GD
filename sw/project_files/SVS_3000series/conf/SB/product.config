/******************************************************************************

Copyright (c) 2015, Tymphany HK Ltd. All rights reserved.

Confidential information of Tymphany HK Ltd.

The Software is provided "AS IS" and "WITH ALL FAULTS," without warranty of any
kind, including without limitation the warranties of merchantability, fitness
for a particular purpose and non-infringement. Tymphany HK LTD. makes no
warranty that the Software is free of defects or is suitable for any particular
purpose.

******************************************************************************/

/** @defgroup productConfig  ProductConfig
*    @brief     The config data for product
*    @author    Wesley Lee
*    @note      ST-Nucleo-F072RB
*    @date      22-Sept-2015
*    @copyright Tymphany Ltd.
*
* @{
*/

#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG

/**************************************************/
/********* Stack overflow check config ************/
/**************************************************/
//#define HAS_STACK_OVERFLOW_LOW_LEVEL_CHECK



/**************************************************/
/************ System Features Config  *******************/
/**************************************************/
    
#define PRESET_1_ORIGIN_NAME       "MOVIE"
#define PRESET_2_ORIGIN_NAME       "MUSIC"
#define PRESET_3_ORIGIN_NAME       "CUSTOM"

#define USING_BD2242G_CTRL
#define HAS_IGNORE_UART_FRAMING_ERROR
#define INCREASE_SN_RATIO_BY_PGA
#define MAX_VOLUME              (60)
#define MIN_VOLUME              (0)
#define DEFAULT_VOLUME          (40)
#define NUM_OF_MENU_DATA        (26)
#define LEN_OF_PRESET_NAME      (12)

#define HAS_STRIPPED_OUT_DBG_MSG
#define HAS_IGNORE_UART_OVER_RUN_ERROR

/**
* @name System Features Config
* The config data for system features
*/
///@{


/* Enable to use project specific ProjBsp_AssertHandler(),
 * should implement on projBsp.c
 */
//#define PROJECT_SPEC_ASSERT_HANDLER

/*
* NOTE!!!
* The feature should only be enabled in release build for MP stage.
* Do NOT enable the feature unless you are very clear on what you are doing!!!
*/
//#define ENABLE_STM_READ_PROTECTION


/**********************/
/* MainApp */
/**********************/
//Enable line in test mode only on debug build
#ifndef NDEBUG
    #define CA22_LINEIN_TEST_MODE
#endif

//#define HAS_SHOP_MODE

/* Note: the macro should be disable after implemented source hijack feature in ASE-TK. */
//#define SOURCE_HIJACK_IN_MCU

/* NOTE: This macro should only be enabled if need to support EVT new top panel. */
//#ifdef NDEBUG
//#define SUPPORT_NEW_TOP_PANEL
//#endif

/* When ST-Bootloader jump to PIU/UBL, timer tick is disabled, and cause
 * IO-Expender init wait on I2CDrv_WaitReset() and never finish.
 * Workaround: let I2CDrv_WaitReset() delay but do not dependence with tick timer.
 */
#if defined(_BOOTLOADER_UBL) || defined(_BOOTLOADER_PIU)
#define I2C_ESTIMATE_TIMEOUT
#endif


/**********************/
/* Power */
/**********************/
/// Enable POWER Server
#define TP_POWER_V2
#define HAS_POWER_CONTROL

///define if the system has battery
//#define HAS_BATTERY

///define the time when system will be auto off if it's in idle state
#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS 900000  // 15min


/**************************************************/
/************ System clock source config  *********/
/**************************************************/

/* Use internal clock, to give CPU frequency 8Hz
 */
//#define INTERNAL_HIGH_SPEED_CLOCK
#define EXTERNAL_AND_INTERNAL_HIGH_SPEED_CLOCK

/* Use external 12MHz clock, to give CPU frequency 48MHz
 */
//#define EXTERNAL_HIGH_SPEED_CLOCK

#if defined(EXTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_PCLK
#elif defined(INTERNAL_HIGH_SPEED_CLOCK)
  #define UART_CLK_SOURCE_HSI
#elif defined(EXTERNAL_AND_INTERNAL_HIGH_SPEED_CLOCK)
    #define UART_CLK_SOURCE_HSI
#endif

#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (12288000)

//#define USE_POWER_SNEAKY_SERVER


/**********************/
/* Debug */
/**********************/
#define HAS_PROJ_PRINTF // will send MCU log to ASE-TK

//#define GAIN_ADJUSTMENT_FOR_DIFF_BATTLEVEL
#define HAS_DEBUG
#define HW_GPIO_DEBUG
#define PT_ADC_DEBUG
#define BSP_DEBUG_ENABLE

#ifdef PT_ADC_DEBUG
#define HAS_DIRECT_ADC_ACCESS_BY_PORT_BIT
#endif//#if PT_ADC_DEBUG
#define PT_I2C_DEBUG

#define HAS_APP_PRIVATE_SIG

/**********************/
/* Safety */
/**********************/
//#define HAS_IWDG
#define IWDG_FEED_PERIOD_SEC (20)

#ifndef NDEBUG
/*
  To make sure memory control function properly
  erase chip before burning new MCU image.
  This will reset minimal margin values from flash
  and prepare MCU for new stress testing cycles.
*/
  #define HAS_DYNAMIC_MEMORY_CONTROL
  #define HAS_DYNAMIC_MEMORY_CONTROL_WARNING_PERCENTAGE 30  //for debug build, assert when lower than it
#endif

/******************************** volume control *******************************/
#define MAX_VOLUME_STEPS    81
/******************************** volume control *******************************/

/**********************/
/* Setting */
/**********************/
#define HAS_SETTING
#define SETTING_HAS_ROM_DATA

///NVM is non-volatile-memory, which is the flash inside MCU, need MCU to support this
#define HAS_NVM



/**********************/
/* Audio */
/**********************/
/// Enable AUDIO Server
#define HAS_AUDIO_CONTROL
#define HAS_AMPLIFY_MUTE
#define AUDIO_LIMITER_FOR_LOW_POWER
#define TP_AUDIO_V2
#define HAS_I2C2

/* enable DSP-TUNNING on debug build
*  if compile the DEBUG mode, will be asset at LED driver
*/
#ifdef NDEBUG
  //#define HAS_DSP_TUNING_MODE
#endif

/* DSP Path Definition */
#define AUDIO_CHNANNEL_ASE         AUDIO_CHANNEL_I2S_1
#define AUDIO_CHNANNEL_EXT_SOURCE  AUDIO_CHANNEL_I2S_2

#define DSP_TONE_TOUCH_DEFAULT_Gx 0.0
#define DSP_TONE_TOUCH_DEFAULT_Kx -0.967802
#define DSP_POSITION_DEFAULT  SPEAKER_POSITION_WALL


/**********************/
/* Key */
/**********************/
/// Enable KEY Server
#define HAS_KEYS
#define HAS_ADC_KEY
//#define HAS_GPIO_KEY
//#define HAS_INTERRUPT_WAKE_UP_KEY
#define KEY_SRV_HAS_DEBUG

//#define HAS_COMB_KEY


/**********************/
/* Led */
/**********************/
/// Enable LED Server
#define HAS_LEDS
#ifdef HAS_LEDS
#define LED_SRV_HAS_SLEEP
#define LED_HAS_IOEXPANDER
//#define LED_HAS_PWM
//#define LED_HAS_RGB
#endif

/**********************/
/* BT module */
/**********************/
//#define HAS_BLUETOOTH
///define if the system has BT tone
//#define HAS_BT_TONE

///define if the system support NFC pair feature
//#define BT_NFC_PAIR
#define HAS_BLE_CTRL
#define BLE_DEBUG_ENABLE


/**********************/
/* DELEGATE */
/**********************/
/// Enable DELEGATE
#define HAS_DELEGATES

#ifdef HAS_DELEGATES
  //#define HAS_IDLE_DELEGATE
  #ifdef HAS_IDLE_DELEGATE
    #define IDLE_TIMEOUT_IN_MS	(20*60*1000) /*idle debouncing: 20 min */
  #endif /* HAS_IDLE_DELEGATE */
#endif /* HAS_DELEGATES */


/**********************/
/* USB */
/**********************/
#define HAS_USB
#define USB_SERVER_DEBUG
//#define USB_DEVICE_LOW_PWR_MGMT_SUPPORT
//#define USB_CLOCK_SOURCE_CRS
//#define LPM_ENABLED


/**********************/
/* UART  */
/**********************/
/// Enable the feature that UART can wake up MCU from deep sleep, need MCU support
//#define ENABLE_WAKEUP_BY_UART

///define the number of UART system is using
#define NUM_OF_UART     2
#define UART_NON_DIRECT_MAP


/**************************************************/
/**********Product Audio Features Config  ****************/
/**************************************************/
#define SHOP_MODE_DEFAULT_VOL     (81)

/**************************************************/
/***************** Debug Control  *********************/
/**************************************************/
/**
* @name Debug Control
* Turn on/off the debug message seperately, easy for debug
*/
///@{

/* Enable it to quick boot. It do not wait ASE-TK to proivde MCLK,
 * thus audio driver will do nothing
 */
//#define DEBUG_QUICK_BOOT_NO_AUDIO

//#define BT_DEBUG_ENABLE
//#define POWER_DEBUG
#define AUDIOSRV_DEBUG
#define MAINAPP_DEBUG
#define AMDRV_DEBUG
#define IDLEDLG_DEBUG

/// diable all the debug
//#define ALL_DEBUG_DISABLE
#ifdef ALL_DEBUG_DISABLE
#  undef BT_DEBUG_ENABLE
#  undef POWER_DEBUG
#  undef AUDIOSRV_DEBUG
#  undef MAINAPP_DEBUG_ENABLE
#  undef ASE_TK_DEBUG_ENABLE
#endif

///this is ONLY for testing. it allow user use BT button to switch Normal Power and Low Power Drc
//#define LOW_POWER_DRC_QUICK_TEST

///@}  //endof Debug Control

/**************************************************/
/************ Firmware Version Control  *****************/
/**************************************************/
/**
* @name Firmware Version Control
* Firmware Version Info
*/
///@{

//#define SVS_PB3000
#define SVS_SB3000

/// Product Info
#ifdef SVS_PB3000
#define TP_PRODUCT  "SVS PB3000"
#else
#define TP_PRODUCT  "SVS SB3000"
#endif

#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F072CB"

#define STRINGIFY2(x) #x
#define STRINGIFY(x) STRINGIFY2(x)
#define PASTE(a, b) a##.b

/// PIU version
#define PIU_MAJOR_VERSION   2
#define PIU_MINOR_VERSION1  0
#define PIU_MINOR_VERSION2  1
#define PIU_VERSION         STRINGIFY(PIU_MAJOR_VERSION.PIU_MINOR_VERSION1.PIU_MINOR_VERSION2)

// DSP version
#define DSP_MAJOR_VERSION   2
#define DSP_MINOR_VERSION1  0
#define DSP_MINOR_VERSION2  1
#define DSP_VERSION         STRINGIFY(DSP_MAJOR_VERSION.DSP_MINOR_VERSION1.DSP_MINOR_VERSION2)

/// SW version
#define SW_MAJOR_VERSION    2
#define SW_MINOR_VERSION1   0
#define SW_MINOR_VERSION2   1
#define MCU_VERSION         STRINGIFY(SW_MAJOR_VERSION.SW_MINOR_VERSION1.SW_MINOR_VERSION2)

#define SOFTWARE_VERSION_STRING TP_PRODUCT MCU_VERSION

#define BL_HAS_I2C

#define SW_VERSION_LENGTH    (8)
#define HW_VERSION_LENGTH    (8)
#define DSP_VERSION_LENGTH   (8)
#define PCB_SN_LENGTH        (16)

///@}  //endof Firmware Version Control

/**************************************************/
/****************** QP Setting  **********************/
/**************************************************/
/**
* @name QP Setting
* setting data for QP
*/
///@{
#define NUM_OF_SMALL_EVENTS        80
#define SIZE_OF_SMALL_EVENTS       8

#define NUM_OF_MEDIUM_EVENTS       40
#define SIZE_OF_MEDIUM_EVENTS      16

#define NUM_OF_LARGE_EVENTS        20
#define SIZE_OF_LARGE_EVENTS       68 //ASE-TK server need a big event, original setting (38bytes) is too small

#define AUDIO_SRV_EVENT_Q_SIZE     15
#define SETT_SRV_EVENT_Q_SIZE      10
#define LED_SRV_EVENT_Q_SIZE       15
#define DBG_SRV_EVENT_Q_SIZE       20
#define DBG_SRV_TX_BUF_Q_SIZE      5
#define POWER_SRV_EVENT_Q_SIZE     10
#define KEY_SRV_EVENT_Q_SIZE       10
#define ASETK_SRV_EVENT_Q_SIZE	   20
#define MAINAPP_EVENT_Q_SIZE       10
#define HDMI_SRV_EVENT_Q_SIZE      6
#define USB_SRV_EVENT_Q_SIZE       10
#define BLE_SRV_EVENT_Q_SIZE        5

#define BRINGUP_DEBUG

#define BRINGUP_printf      printf

#endif  // PRODUCT_CONFIG

///@}  //endof QP Setting


/// @} //endof product Config group for doxygen


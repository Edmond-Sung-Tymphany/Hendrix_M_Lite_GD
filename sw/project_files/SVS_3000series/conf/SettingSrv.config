
#define SETTING_RESEND_LIMIT    3
#define PAGE_SIZE               2048        // # of 32-bit Instructions per Page
#define SETTING_SAVE_MS         5000
#define IDLE_TIMEOUT_MS         3000
#define TIMER_PERIOD_MS         1000


typedef struct tSettingEntry
{
    uint32          queueMinDebugSrv;
    uint32          queueMinSettingSrv;
    uint32          queueMinAudioSrv;
    uint32          queueMinLedsSrv;
    uint32          queueMinBluetoothSrv;
    uint32          queueMinKeysSrv;
    uint32          queueMinPowerSrv;
    uint32          queueMinAseNgSrv;
    uint32          poolMinSmall;
    uint32          poolMinMedium;
    uint32          poolMinLarge;

    int16           menuData[NUM_OF_MENU_DATA];       //
    int16           preset1[NUM_OF_MENU_DATA];
    int16           preset2[NUM_OF_MENU_DATA];
    int16           preset3[NUM_OF_MENU_DATA];
    uint8           preset1_name[LEN_OF_PRESET_NAME];
    uint8           preset2_name[LEN_OF_PRESET_NAME];
    uint8           preset3_name[LEN_OF_PRESET_NAME];
    uint8           swVer[SW_VERSION_LENGTH];
    uint8           hwVer[HW_VERSION_LENGTH];
    uint8           dspVer[DSP_VERSION_LENGTH];
    bool            screenStatus;
    bool            musicStatus;
    eAmpTempLevel   ampTemp;
    bool            jackStatus;
    bool            jackLevel;
    bool            bootMode;
} tSettingEntry;

static tSettingEntry setting;


static tSettingDatabase settingDB[SETID_MAX] =
{
    { NULL,                         1,                                  SETTING_ATTR_VALID  },    //SETID_DSP_INIT_DATA
    { NULL,                         1,                                  SETTING_ATTR_VALID  },    //SETID_DSP_TUNABLE_PART
    { &setting.screenStatus,        sizeof(setting.screenStatus),       SETTING_ATTR_VALID  },    // SETID_SCREEN_STATUS
    { &setting.musicStatus,         sizeof(setting.musicStatus),        SETTING_ATTR_VALID  },    // SETID_MUSIC_DET
    { &setting.menuData,            sizeof(setting.menuData),           SETTING_ATTR_VALID  },    // SETID_MENU_DATA
    { &setting.preset1,             sizeof(setting.preset1),            SETTING_ATTR_VALID  },    // SETID_PRESET_1
    { &setting.preset2,             sizeof(setting.preset2),            SETTING_ATTR_VALID  },    // SETID_PRESET_2
    { &setting.preset3,             sizeof(setting.preset3),            SETTING_ATTR_VALID  },    // SETID_PRESET_3
    { &setting.preset1_name,        sizeof(setting.preset1_name),       SETTING_ATTR_VALID  },    // SETID_PRESET_1_NAME
    { &setting.preset2_name,        sizeof(setting.preset2_name),       SETTING_ATTR_VALID  },    // SETID_PRESET_2_NAME
    { &setting.preset3_name,        sizeof(setting.preset3_name),       SETTING_ATTR_VALID  },    // SETID_PRESET_3_NAME
    { &setting.swVer,               sizeof(setting.swVer),              SETTING_ATTR_VALID  },    //SETID_SW_VER
    { &setting.hwVer,               sizeof(setting.hwVer),              SETTING_ATTR_VALID  },    //SETID_HW_VER
    { &setting.dspVer,              sizeof(setting.dspVer),             SETTING_ATTR_VALID  },    //SETID_DSP_VER
    { &setting.queueMinDebugSrv,    sizeof(setting.queueMinDebugSrv),   SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_DEBUG_SRV
    { &setting.queueMinSettingSrv,  sizeof(setting.queueMinSettingSrv), SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_SETTING_SRV
    { &setting.queueMinAudioSrv,    sizeof(setting.queueMinAudioSrv),   SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_AUDIO_SRV
    { &setting.queueMinLedsSrv,     sizeof(setting.queueMinLedsSrv),    SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_LEDS_SRV
    { &setting.queueMinKeysSrv,     sizeof(setting.queueMinKeysSrv),    SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_KEYS_SRV
    { &setting.queueMinPowerSrv,    sizeof(setting.queueMinPowerSrv),   SETTING_ATTR_VALID  },    //SETID_QUEUE_MIN_POWER_SRV
    { &setting.poolMinSmall,        sizeof(setting.poolMinSmall),       SETTING_ATTR_VALID  },    //SETID_POOL_MIN_SMALL
    { &setting.poolMinMedium,       sizeof(setting.poolMinMedium),      SETTING_ATTR_VALID  },    //SETID_POOL_MIN_MEDIUM
    { &setting.poolMinLarge,        sizeof(setting.poolMinLarge),       SETTING_ATTR_VALID  },    //SETID_POOL_MIN_LARGE
    { &setting.ampTemp,             sizeof(setting.ampTemp),            SETTING_ATTR_VALID  },    // SETID_AMP_TEMP_LEVEL
    { &setting.jackStatus,          sizeof(setting.jackStatus),         SETTING_ATTR_VALID  },    // SETID_JACK_STATUS
    { &setting.jackLevel,           sizeof(setting.jackLevel),          SETTING_ATTR_VALID  },    // SETID_JACK_LEVEL
    { &setting.bootMode,            sizeof(setting.bootMode),           SETTING_ATTR_VALID  },    // SETID_BOOT_MOD
};


#define SETT_PAGE_ROM_ADDR      0x0801BC00 //= __USEREDIT_region_ROM2_start__
#define SETT_ELEMENT_MIN_SIZE   sizeof(uint32)
#define SETT_ELEMENT_MED_SIZE   0x64
#define SETT_ELEMENT_MAX_SIZE   0x0100
#define SETT_BOOT_MODE_ADDR     0x0801BE30
#define SETT_MAX_NAME_SIZE      0x10

static const tSettingRomMap settingRomMap[] =
{
    { SETID_QUEUE_MIN_DEBUG_SRV,        SETT_PAGE_ROM_ADDR},
    { SETID_QUEUE_MIN_SETTING_SRV,      SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 1},
    { SETID_QUEUE_MIN_AUDIO_SRV,        SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 2},
    { SETID_QUEUE_MIN_LEDS_SRV,         SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 3},
    { SETID_QUEUE_MIN_KEYS_SRV,         SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 4},
    { SETID_QUEUE_MIN_POWER_SRV,        SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 5},
    { SETID_POOL_MIN_SMALL,             SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 6},
    { SETID_POOL_MIN_MEDIUM,            SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 7},
    { SETID_POOL_MIN_LARGE,             SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MIN_SIZE * 8},
    
    { SETID_MENU_DATA,                  SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 1},    // should be the same as __USEREDIT_region_MenuSettings_start__
    { SETID_PRESET_1,                   SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 2},    // should be the same as __USEREDIT_region_Preset1_start__
    { SETID_PRESET_2,                   SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 3},    // should be the same as __USEREDIT_region_Preset2_start__
    { SETID_PRESET_3,                   SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 4},    // should be the same as __USEREDIT_region_Preset3_start__
    { SETID_PRESET_1_NAME,              SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5},    // should be the same as __USEREDIT_region_preset1Name_start__
    { SETID_PRESET_2_NAME,              SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5 + SETT_MAX_NAME_SIZE * 1},   // should be the same as __USEREDIT_region_preset2Name_start__
    { SETID_PRESET_3_NAME,              SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5 + SETT_MAX_NAME_SIZE * 2},   // should be the same as __USEREDIT_region_preset3Name_start__
    { SETID_SW_VER,                     SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5 + SETT_MAX_NAME_SIZE * 3},   // should be the same as
    { SETID_HW_VER,                     SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5 + SETT_MAX_NAME_SIZE * 4},   // should be the same as
    { SETID_DSP_VER,                    SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 5 + SETT_MAX_NAME_SIZE * 5},   // should be the same as
    
    { SETID_SCREEN_STATUS,              SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 6 + SETT_ELEMENT_MIN_SIZE * 1},
    { SETID_MUSIC_DET,                  SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 6 + SETT_ELEMENT_MIN_SIZE * 2},
    { SETID_AMP_TEMP_LEVEL,             SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 6 + SETT_ELEMENT_MIN_SIZE * 3},
    { SETID_JACKIN_STATUS,              SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 6 + SETT_ELEMENT_MIN_SIZE * 4},
    { SETID_JACKIN_LEVEL,               SETT_PAGE_ROM_ADDR + SETT_ELEMENT_MED_SIZE * 6 + SETT_ELEMENT_MIN_SIZE * 5},
    { SETID_BOOT_MODE,                  SETT_BOOT_MODE_ADDR}
};




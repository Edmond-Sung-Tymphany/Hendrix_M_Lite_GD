/**
*  @file      pattern.config
*  @brief     Config data for LED patterns, modified according to UI
*  @author    Wesley Lee
*  @date      15-Jul-2014
*  @copyright Tymphany Ltd.
*/

#include "LedDrv.h"
/***************************************************************************
 * led Pattern Config Data,

 * @param  periodTime       the repeated period time in ms
 * @para   onTime           the time of turning on LED (duty cycle),
 *                          it's only valid in Blink style
 *                          when onTime     == periodTime    , it will light up solid
 * @para   duration         the duration of the pattern,
 *                          set to ALWAYS_REPEAT if it's always repeated
 * @para   color            the color of LED
 * para    nextPattern      It's used to combine patterns. When one pattern is shown once,
 *                          led_srv will jump to show the next pattern which is defined
 *                          in this parameter. Set it to PAT_MAX_NUMBER to only show one pattern
 *                          check below "SYS_ON_CRITICAL_BAT_PAT" for example
 * @para   style            the style we need, defined in ePatStyle
 ***************************************************************************/


/* Fading pattern setting
 */
#define FADING_DATA_SIZE  128

extern const uint8 LED_FADING_DATA[FADING_DATA_SIZE];


/* Other Setting
 */
#define NOT_NEEDED  0
#define ALWAYS_REPEAT (~0)
#define LED_OFF_LEVEL   0
#define LED_ON_LEVEL    (100)




tPatternData patternConfig[PAT_MAX_NUMBER] =
{
/* OFF_PATT */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = BLACK,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE,
    .fading_data    = NULL,
    },

/* SOLID_PAT_WHITE */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = WHITE,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* SOLID_PAT_RED */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = RED,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* SOLID_PAT_GREEN */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = GREEN,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* SOLID_PAT_BLUE */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = BLUE,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* SOLID_PAT_AMBER */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = AMBER,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* SOLID_PAT_YELLOW */
     {
      .periodTime     = 0,
      .onTime         = 0,
      .duration       = ALWAYS_REPEAT,
      .color          = YELLOW,
      .nextPattern    = PAT_MAX_NUMBER,
      .style          = SOLID_STYLE,
      .fading_data    = NULL,
     },

/* DIM_PATT_WHITE */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = DIM_WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE,
    .fading_data    = NULL,
    },

/* DIM_PATT_WHITE */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = DIM_AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE,
    .fading_data    = NULL,
    },

/* DIM_PATT_WHITE */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = DIM_RED,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE,
    .fading_data    = NULL,
    },


/* FLASH_PAT_AMBER */
    {
     .periodTime     = 1000,
     .onTime         = 500,
     .duration       = ALWAYS_REPEAT,
     .color          = AMBER,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* FLASH_PAT_BLUE */
    {
     .periodTime     = 1000,
     .onTime         = 500,
     .duration       = ALWAYS_REPEAT,
     .color          = BLUE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* QUICK_FLASH_PAT_RED */
    {
     .periodTime     = 200,
     .onTime         = 100,
     .duration       = ALWAYS_REPEAT,
     .color          = RED,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* QUICK_FLASH_PAT_WHITE */
    {
     .periodTime     = 200,
     .onTime         = 100,
     .duration       = ALWAYS_REPEAT,
     .color          = WHITE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* QUICK_FLASH_PAT_ORANGE */
    {
     .periodTime     = 200,
     .onTime         = 100,
     .duration       = ALWAYS_REPEAT,
     .color          = ORANGE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* Note: The duration of quick flash is 200ms in UI spec, but we adjust the duration to 160ms for better UX.
* Refer to : https://pm.tymphany.com/SpiraTeam/243/Incident/11596.aspx .
*/
/* QUICK_FLASH_ONCE_PAT_WHITE */
    {
     .periodTime     = 160,
     .onTime         = 80,
     .duration       = 160,
     .color          = WHITE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = BLINK_STYLE,
     .fading_data    = NULL,
    },

/* PULSE_PAT_WHITE */
    {
     .periodTime     = 4000,
     .onTime         = 4000,
     .duration       = ALWAYS_REPEAT,
     .color          = WHITE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* PULSE_PAT_BLUE */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = ALWAYS_REPEAT,
     .color          = BLUE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* PULSE_PAT_RED */
    {
     .periodTime     = 4000,
     .onTime         = 4000,
     .duration       = ALWAYS_REPEAT,
     .color          = RED,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* PULSE_PAT_AMBER */
    {
     .periodTime     = 4000,
     .onTime         = 4000,
     .duration       = ALWAYS_REPEAT,
     .color          = AMBER,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* TRANS_PAT_RED_1 */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = 2000,
     .color          = RED,
     .nextPattern    = TRANS_PAT_RED_2,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },
/* TRANS_PAT_RED_2 */
    {
     .periodTime     = 1000,
     .onTime         = 1000,
     .duration       = 1000,
     .color          = RED,
     .nextPattern    = TRANS_PAT_RED_3,
     .style          = SOLID_STYLE,
     .fading_data    = NULL,
    },
/* TRANS_PAT_RED_3 */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = 2000,
     .color          = RED,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* TRANS_PAT_BLUE_1 */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = 2000,
     .color          = BLUE,
     .nextPattern    = TRANS_PAT_BLUE_2,
     .style          = FADE_IN_STYLE,
     .fading_data    = LED_FADING_DATA,
    },
/* TRANS_PAT_BLUE_2 */
    {
     .periodTime     = 1000,
     .onTime         = 1000,
     .duration       = 1000,
     .color          = BLUE,
     .nextPattern    = TRANS_PAT_BLUE_3,
     .style          = SOLID_STYLE,
     .fading_data    = NULL,
    },
/* TRANS_PAT_BLUE_3 */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = 2000,
     .color          = BLUE,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = FADE_OUT_STYLE,
     .fading_data    = LED_FADING_DATA,
    },

/* TRANS_OFF_PAT_1 */
    {
     .periodTime     = 2000,
     .onTime         = 2000,
     .duration       = 2000,
     .color          = PREVIOUS_COLOR,
     .nextPattern    = TRANS_OFF_PAT_2,
     .style          = FADE_OUT_STYLE,
     .fading_data    = LED_FADING_DATA,
    },
/* TRANS_OFF_PAT_2 */
    {
     .periodTime     = 0,
     .onTime         = 0,
     .duration       = ALWAYS_REPEAT,
     .color          = BLACK,
     .nextPattern    = PAT_MAX_NUMBER,
     .style          = SOLID_STYLE,
     .fading_data    = NULL,
    },

};
/**********************************************************/
/* below part is NOT needed config */

/*
const uint8 LED_FADING_DATA[]=
{
      0,   1,   2,   4,   5,   6,   7,   9,
     10,  11,  12,  13,  15,  16,  17,  18,
     20,  21,  22,  23,  24,  25,  27,  28,
     29,  30,  31,  33,  34,  35,  36,  37,
     38,  39,  41,  42,  43,  44,  45,  46,
     47,  48,  49,  50,  51,  52,  53,  55,
     56,  57,  58,  59,  60,  61,  62,  62,
     63,  64,  65,  66,  67,  68,  69,  70,
     71,  72,  72,  73,  74,  75,  76,  77,
     77,  78,  79,  80,  80,  81,  82,  82,
     83,  84,  84,  85,  86,  86,  87,  88,
     88,  89,  89,  90,  90,  91,  91,  92,
     92,  93,  93,  94,  94,  95,  95,  95,
     96,  96,  96,  97,  97,  97,  98,  98,
     98,  98,  99,  99,  99,  99,  99,  99,
    100, 100, 100, 100, 100, 100, 100, 100,
};
*/

/* The previous fading table have much time on high brightness on human feeling,
 * thus use formula to re-calculate: 
 *   new= 0.01*(old^2)
 */
const uint8 LED_FADING_DATA[]=
{
      0,   0,   0,   0,   0,   0,   0,   1,
      1,   1,   1,   2,   2,   2,   3,   3,
      3,   4,   4,   4,   5,   5,   5,   6,
      6,   7,   7,   8,   9,  10,  11,  12,
     13,  14,  15,  16,  17,  18,  19,  20,
     21,  22,  23,  24,  26,  27,  28,  30,
     31,  32,  33,  34,  35,  36,  37,  38,
     40,  41,  42,  44,  45,  46,  48,  49,
     50,  52,  52,  53,  55,  56,  57,  58,
     59,  61,  62,  64,  65,  66,  67,  68,
     69,  71,  72,  73,  74,  75,  76,  77,
     78,  79,  70,  81,  81,  83,  83,  84,
     85,  86,  86,  87,  88,  89,  90,  91,
     92,  92,  93,  94,  95,  95,  96,  96,
     96,  97,  97,  97,  98,  98,  98,  98,
    100, 100, 100, 100, 100, 100, 100, 100

};

/**
*  @file      AudioSrv.Config
*  @brief     Config data for audio server 
*  @project   iBT150 
*  @author    Johnny Fan
*  @date      15-Sep-2014
*  @copyright Tymphany Ltd.
*/

#include "AudioSrv.h"
#include "product.config"

/*****************************************************************
 * Config Data
 *****************************************************************/
 /* the time (ms) per timeout signal */
#define AUDIO_SRV_TIMEOUT_IN_MS  10

/* measured in ms */
#define AUDIO_ACTIVE_DELAY_UNMUTE_TIME          500
#define AUDIO_ACTIVE_LINE_IN_JACK_SCAN_TIME     500
#define AUDIO_ACTIVE_MUSIC_DETECT_TIME          500
#define AUDIO_SWITCH_CHANNEL_DELAY_TIME         100
 
#define HAS_AMPLIFY_MUTE
#ifdef AUDIO_MULTI_SOURCE
#ifdef BT_CHANNEL
    #define AUDIO_DEFAULT_CHANNEL  BT_CHANNEL
#else
    #define AUDIO_DEFAULT_CHANNEL  AUDIO_CHANNEL_2
#endif // BT_CHANNEL
#endif // AUDIO_MULTI_SOURCE

#ifdef HAS_BT_TONE
static const int16 AUDIO_BT_TONE_PROCESS_DELAY_MS[]=
{
    100,     //change channel
    220,     //send the tone cmd to BT, if there's noise before the tone, make this bigger
    50,     //change vol
    0,      // not used, use the AUDIO_BT_TONE_TIME_MS arrar instead 
    100,     //mute the vol
    200,    // restore the channel if needed
    50,     //restore the vol
};

//play the tone, if there's noise after tone, turn this delay time down
static const int16 AUDIO_BT_TONE_TIME_MS[] = 
{
    1300, //680, //Updated! Used for Reset PDL. //BT_TONE_BAT_EJECT_CMD,
    680,   //BT_TONE_BAT_DOCK_CMD,
    1200, //900, //BT_TONE_AC_IN_CMD,
    20,   //BT_TONE_LIM_VOL_CMD,
    1100, //5000,//4250,   //BT_TONE_PAIRING_CMD,
    1400, //800, //BT_TONE_POWER_OFF_CMD,
    1000,   //BT_TONE_CONNECTED_CMD,
    1000, //800, //BT_TONE_PAIR_FAIL_CMD,
};
#endif //HAS_BT_TONE

/// The default volume for BT tone
#define BT_TONE_DEFALUT_VOLUME  8
/// The volume step for system to fade volume after playing tone
#define BT_TONE_RESTORE_VOL_STEP 1


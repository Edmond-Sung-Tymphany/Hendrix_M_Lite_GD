
/** @defgroup productConfig  ProductConfig
*    @brief     The config data for product
*    @author    Alexey
*    @note      Klipsch MC-13
*    @date      22-Jun-2015
*    @copyright Tymphany Ltd.
*
* @{
*/

#ifndef PRODUCT_CONFIG
#define PRODUCT_CONFIG
#define TP_AUDIO_V1
/**************************************************/
/************ System Features Config  *******************/
/**************************************************/
/**
* @name System Features Config
* The config data for system features
*/
///@{

#define EXTERNAL_HIGH_SPEED_OSC_FREQ        (8000000)

/// Define if there's battery info in setting server
#define DEBUG_BATT_INFO

//#define GAIN_ADJUSTMENT_FOR_DIFF_BATTLEVEL

#define SMART_UNMUTE_ON_CHANNEL_SWITCH

#ifdef RELEASE_CONF
#define HAS_DEBUG
#define HW_GPIO_DEBUG
#endif

/// Enable LED Serveradc

/// Enable AUDIO Server
#define HAS_AUDIO_CONTROL
#define AUDIO_MULTI_SOURCE
#define HAS_AMPLIFY_MUTE
#define HAS_COMB_KEY
//#define HAS_DSP_RUNTIME_TUNE_SUPPORT

/// Enable KEY Server
#define HAS_KEYS
#define HAS_ADC_KEY
#define HAS_GPIO_KEY
#define HAS_INTERRUPT_WAKE_UP_KEY
//#define KEY_SRV_HAS_DEBUG

/// Enable BLUETOOTH Server
#define HAS_BLUETOOTH

/// Enable channel invertion function
#define HAS_DIFFERENTIAL_CHANNEL
#define CHANNEL_1_2_DIFFERENTIAL

/// Choose HW version
//#define HW_VERSION_ES2
#define HW_VERSION_EVT

#define HAS_SETTING
//#define SETTING_HAS_ROM_DATA

/// Enable POWER Server
//#define HAS_POWER_CONTROL  335

/// Enable DELEGATE
//#define HAS_DELEGATES
//#define HAS_BT_DELEGATE
//#define HAS_POWER_DELEGATE

/**@brief Enable NVM feature
*
*   NVM is non-volatile-memory, which is the flash inside MCU, need MCU to support this
*/
//#define HAS_NVM

/// Enable the feature that UART can wake up MCU from deep sleep, need MCU support
//#define ENABLE_WAKEUP_BY_UART

///define the number of UART system is using
#define NUM_OF_UART     1

///define the time when system will be auto off if it's in idle state
#define IDLE_AUTO_POWER_OFF_TIMEOUT_MS 900000  // 15min

///define if the system has BT tone
#define HAS_BT_TONE

///define if the system support NFC pair feature
//#define BT_NFC_PAIR

///set up the timeout for emergency mode
#define EMERGENCY_MODE_TIMEOUT_MS  (3600*1000)  //1hours

///define if the system has battery
#define HAS_BATTERY
///define if the system has external battery
//#define EXTERNAL_BATTERY
//#ifndef HAS_BATTERY
//#undef EXTERNAL_BATTERY
//#endif
///@}  //endof System Features Config

/**************************************************/
/**********Product Audio Features Config  ****************/
/**************************************************/
/**
* @name Product Audio Features Config
* The config data for Product Audio Features
*/
///@{

/** @brief Max volume, need to reference DSP volume table
*    @see MASTER_VOL
*/
#define MIN_VOLUME          0
#define MAX_VOLUME          29      // total of 30 vol. variations

/// The max volume when system power is low
#define LOW_POWER_MAX_VOLUME 24     // -6dB

/// The default volume when system is boot up
#define DEFAULT_VOLUME_PERCENT  67
#define DEFAULT_VOLUME  (((MAX_VOLUME + 1) * DEFAULT_VOLUME_PERCENT)/100)

/// The default volume for BT tone
#define BT_TONE_DEFALUT_VOLUME  DEFAULT_VOLUME
/// The volume step for system to fade volume after playing tone
#define BT_TONE_RESTORE_VOL_STEP 1

/// BT/AUX In proirity config
//#define BT_AUDIO_HAS_HIGH_PRIO
#define AUX_IN_HAS_HIGH_PRIO

/** iBT150 need to enable this macro to remember volue in audio server
*    But it need to set default volume for power on tone, so before that,
*    disable the macro now
*/
//#define REMEMBER_VOLUME

//#define REDUCE_DYNAMIC_RANGE_WHILE_LOW_POWER

//#define BT_CODEC_STATUS_CHECK       // GPIO from module indicate the status of the audio existance.

#define INTERNAL_HIGH_SPEED_CLOCK

//#define LED_USE_IOEXPANDER

//#define USE_POWER_SNEAKY_SERVER

///@}  //endof Product Audio Features Config

/**************************************************/
/***************** Debug Control  *********************/
/**************************************************/
/**
* @name Debug Control
* Turn on/off the debug message seperately, easy for debug
*/
///@{

//#define BT_DEBUG_ENABLE

//#define POWER_DEBUG

//#define AUDIOSRV_DEBUG

//#define MAINAPP_DEBUG_ENABLE

/// diable all the debug
#define ALL_DEBUG_DISABLE
#ifdef ALL_DEBUG_DISABLE
#undef BT_DEBUG_ENABLE
#undef POWER_DEBUG
#undef AUDIOSRV_DEBUG
#undef MAINAPP_DEBUG_ENABLE
#endif

///this is ONLY for testing. it allow user use BT button to switch Normal Power and Low Power Drc
//#define LOW_POWER_DRC_QUICK_TEST

///@}  //endof Debug Control

/**************************************************/
/************ Firmware Version Control  *****************/
/**************************************************/
/**
* @name Firmware Version Control
* Firmware Version Info
*/
///@{

/// Product Info
#define TP_PRODUCT "MC-13"
#define TP_MCU_FAMILY "stm32"
#define TP_MCU "STM32F030x6"

#define STRINGIFY2(x) #x
#define STRINGIFY(x) STRINGIFY2(x)
#define PASTE2(a, b) a##b
#define PASTE(a, b) PASTE2(a,b)

/// SW version, i.e. swv5.05
#define SW_MAJOR_VERSION   3
#define SW_MINOR_VERSION1  0
#define SW_MINOR_VERSION2  5
#define PRODUCT_VERSION_MCU     STRINGIFY(PASTE(SW_MAJOR_VERSION.SW_MINOR_VERSION1, SW_MINOR_VERSION2))

/// DSP EQ version, i.e. EQ4.01
#define DSP_MAJOR_VERSION   3
#define DSP_MINOR_VERSION1  0
#define DSP_MINOR_VERSION2  2
#define PRODUCT_VERSION_DSP     STRINGIFY(PASTE(DSP_MAJOR_VERSION.DSP_MINOR_VERSION1, DSP_MINOR_VERSION2))

///@}  //endof Firmware Version Control

/**************************************************/
/****************** QP Setting  **********************/
/**************************************************/
/**
* @name QP Setting
* setting data for QP
*/
///@{

#define NUM_OF_SMALL_EVENTS        0
#define SIZE_OF_SMALL_EVENTS       0

#define NUM_OF_MEDIUM_EVENTS       6
#define SIZE_OF_MEDIUM_EVENTS      16
#define NUM_OF_LARGE_EVENTS        6
#define SIZE_OF_LARGE_EVENTS       38

#define AUDIO_SRV_EVENT_Q_SIZE     3
#define SETT_SRV_EVENT_Q_SIZE      3
#define LED_SRV_EVENT_Q_SIZE       2
#define DBG_SRV_EVENT_Q_SIZE       5
#define DBG_SRV_TX_BUF_Q_SIZE      5
#define POWER_SRV_EVENT_Q_SIZE     2
#define KEY_SRV_EVENT_Q_SIZE       5
#define BT_SRV_EVENT_Q_SIZE	       3

#endif  // PRODUCT_CONFIG

///@}  //endof QP Setting

/// @} //endof product Config group for doxygen


/**
*  @file      LedSrv.Config
*  @brief     Config data for LED patterns, modified according to UI
*  @author    Wesley Lee
*  @date      15-Jul-2014
*  @copyright Tymphany Ltd.
*/

#include "LedDrvStm.h"

/***************************************************************************
 * led Pattern Config Data,

 * @param  periodTimeInMs   the repeated period time in ms
 * @para   onTimeInMs       the time of turning on LED (duty cycle),
 *                          it's only valid in Blink style
 *                          when onTimeInMs == periodTimeInMs, it will light up solid
 * @para   repeatNumber     the number of repeating times,
 *                          set to ALWAYS_REPEAT if it's always repeated
 * @para   color            the color of LED
 * para    nextPattern      It's used to combine patterns. When one pattern is shown once,
 *                          led_srv will jump to show the next pattern which is defined
 *                          in this parameter. Set it to PAT_MAX_NUMBER to only show one pattern
 *                          check below "SYS_ON_CRITICAL_BAT_PAT" for example
 * @para   style            the style we need, defined in ePatStyle
 ***************************************************************************/

#define NOT_NEEDED  0
#define ALWAYS_REPEAT INT8_MAX
/// 0x60 is the max brightness value because of HW limit, so we get 30% from it to be the project max brightness
#define HW_LIMIT_MAX_BRIGHTNESS 0x60
#define MAX_BRIGHTNESS (uint8)(HW_LIMIT_MAX_BRIGHTNESS * 0.6)
#define MAX_BRIGHTNESS_GREEN 0xFF
#define DIM_BRIGHTNESS 0x4

#define LED_SRV_HAS_SLEEP
#define LED_SRV_HAS_RESPONSE


const tPatternData patternConfig[PAT_MAX_NUMBER] =
{
/* OFF_PATT */
   {
    .periodTimeInMs = 2000,
    .onTimeInMs     = NOT_NEEDED,
    .repeatNumber   = ALWAYS_REPEAT,
    .brightness     = 0,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* SOLID_ON_PATT */
//    {
//    .periodTimeInMs = 2000,
//    .onTimeInMs     = NOT_NEEDED,
//    .repeatNumber   = ALWAYS_REPEAT,
//    .brightness     = MAX_BRIGHTNESS,
//    .nextPattern    = PAT_MAX_NUMBER,
//    .style          = SOLID_STYLE
//    },
/* BT_DISCOVERABLE_PATT */
    {
    .periodTimeInMs = 2000,
    .onTimeInMs     = 1000,
    .repeatNumber   = ALWAYS_REPEAT,
    .brightness     = MAX_BRIGHTNESS,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* BT_RECONNECT_PATT */
    {
    .periodTimeInMs = 1000,
    .onTimeInMs     = 5000,
    .repeatNumber   = ALWAYS_REPEAT,
    .brightness     = MAX_BRIGHTNESS,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VOL_LIMIT_REACH_PATT */
    {
    .periodTimeInMs = 1000,
    .onTimeInMs     = 5000,
    .repeatNumber   = 3,
    .brightness     = MAX_BRIGHTNESS,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE,
    },

};

/* the brightness value for real HW limit, adjust according to HW*/
#define MAX_BRIGHTNESS_HW_LIMIT  32
/* the brightness value generated in the LED_FADING_DATA array*/
#define MAX_BRIGHTNESS_IN_ARRAY_DATA  100


/* choose one of these fading macro*/
#define SINE_FADING_EANBLE
//#define LINEAR_FADING_ENABLE

#if (defined SINE_FADING_EANBLE) && (defined LINEAR_FADING_ENABLE)
#error "can NOT enable SINE and LINEAR at the same time"
#endif

#ifdef SINE_FADING_EANBLE
#define SIN_LENGTH 128
#endif

//sin data
#ifdef SINE_FADING_EANBLE
const uint8 LED_FADING_DATA[SIN_LENGTH]=
{
0,1,2,4,5,6,7,9,10,11,12,13,15,16,17,18,20,21,22,23,24,25,27,28,29,30,31,
33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,
59,60,61,62,62,63,64,65,66,67,68,69,70,71,72,72,73,74,75,76,77,77,78,79,
80,80,81,82,82,83,84,84,85,86,86,87,88,88,89,89,90,90,91,91,92,92,93,93,
94,94,95,95,95,96,96,96,97,97,97,98,98,98,98,99,99,99,99,99,99,100,100,100,
100,100,100,100,100
};
#endif

//linear data
#ifdef LINEAR_FADING_ENABLE
#define SIN_LENGTH 128
#endif

#ifdef LINEAR_FADING_ENABLE
const uint8 LED_FADING_DATA[SIN_LENGTH]=
{
1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,
38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,
55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,
72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,
89,90,91,92,93,94,95,96,97,98,99,100,
};
#endif



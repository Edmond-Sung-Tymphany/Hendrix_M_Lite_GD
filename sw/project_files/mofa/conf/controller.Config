/**
*  @file      controller.Cofig
*  @brief     Config data for controller
*  @author    Bob.Xu
*  @date      18-Mar-2014
*  @copyright Tymphany Ltd.
*/
#include "product.config"

/* server declaration */
#ifdef HAS_POWER_CONTROL
#include "PowerSrv.h"
static cPowerSrv PowerSrv = {SRV_CTOR_FNC(&PowerSrv_StartUp),
                        SRV_XTOR_FNC(&PowerSrv_ShutDown)};
#endif

#ifdef HAS_ALLPLAY
#include "AllPlaySrv.h"
static cAllPlaySrv AllPlaySrv = {SRV_CTOR_FNC(&AllPlaySrv_StartUp),
                        SRV_XTOR_FNC(&AllPlaySrv_ShutDown)};
#endif

#ifdef HAS_KEYS
#include "KeySrv.h"
static cKeySrv KeySrv = {SRV_CTOR_FNC(&KeySrv_StartUp),
                        SRV_XTOR_FNC(&KeySrv_ShutDown)};
#endif

#ifdef HAS_LEDS
#include "LedSrv.h"
static cLedSrv ledSrv = {SRV_CTOR_FNC(&LedSrv_StartUp),
                    SRV_XTOR_FNC(&LedSrv_ShutDown)};
#endif

#ifdef HAS_AUDIO_CONTROL
#include "AudioSrv.h"
static cAudioSrv AudioSrv = {SRV_CTOR_FNC(&AudioSrv_StartUp),
                        SRV_XTOR_FNC(&AudioSrv_ShutDown)};
#endif

#ifdef HAS_DEBUG
#ifndef Q_SPY
#include "DebugSSrv.h"
static cDebugSSrv DebugSSrv = {SRV_CTOR_FNC(&DebugSrv_StartUp),
                      SRV_XTOR_FNC(&DebugSSrv_ShutDown)};
#endif
#endif

#ifdef HAS_DEBUGSETT
#ifndef Q_SPY
#include "DebugSettSrv.h"
static cDebugSettSrv DebugSettSrv = {SRV_CTOR_FNC(&DebugSettSrv_StartUp),
                      SRV_XTOR_FNC(&DebugSettSrv_ShutDown)};
#endif
#endif




#ifdef HAS_SETTING
#include "SettingSrv.h"
#ifdef SETTING_HAS_ROM_DATA
static cSettingSrv SettingSrv = {SRV_CTOR_FNC(&SettingSrv_StartUp),
                    SRV_XTOR_FNC(&SettingSrv_ShutDown)};
#endif  // SETTING_HAS_ROM_DATA
#endif  // HAS_SETTING

/* user can config the mode below*/
const static tObjectListEntity  serverList [] =
{
#ifdef HAS_DEBUG
#ifndef Q_SPY
      {DEBUG_SRV_ID,              (cPersistantObj *)&DebugSSrv,    NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE | POWERING_UP_MODE | POWERING_DOWN_MODE | UPGRADE_MODE | SLEEP_MODE},
#endif
#endif
#ifdef HAS_DEBUGSETT
#ifndef Q_SPY
      {DSS_SRV_ID,              (cPersistantObj *)&DebugSettSrv,   NORMAL_MODE | SAM_BOOTING_MODE | POWERING_UP_MODE | UPGRADE_MODE},
#endif
#endif
#if defined(HAS_SETTING) && defined(SETTING_HAS_ROM_DATA)
    {SETTING_SRV_ID,            (cPersistantObj *)&SettingSrv,     NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE | POWERING_UP_MODE | POWERING_DOWN_MODE | UPGRADE_MODE | SLEEP_MODE},
#endif

#ifdef HAS_LEDS
    {LED_SRV_ID,                (cPersistantObj *)&ledSrv,         NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE | POWERING_UP_MODE | POWERING_DOWN_MODE | UPGRADE_MODE | SLEEP_MODE},
#endif

#ifdef HAS_ALLPLAY
    {ALLPLAY_SRV_ID,            (cPersistantObj *)&AllPlaySrv,     NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE | POWERING_UP_MODE | POWERING_DOWN_MODE | UPGRADE_MODE},
#endif

#ifdef HAS_AUDIO_CONTROL
    {AUDIO_SRV_ID,              (cPersistantObj *)&AudioSrv,       NORMAL_MODE},
#endif

#ifdef HAS_KEYS
    {KEY_SRV_ID,                (cPersistantObj *)&KeySrv,         NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE | POWERING_UP_MODE | POWERING_DOWN_MODE | SLEEP_MODE},
#endif

#ifdef HAS_POWER_CONTROL
    {POWER_SRV_ID,              (cPersistantObj *)&PowerSrv,       NORMAL_MODE | SAM_BOOTING_MODE | STANDBY_MODE |POWERING_UP_MODE | POWERING_DOWN_MODE | UPGRADE_MODE | SOFTRESET_MODE},
#endif

};

/* App declaration*/
#include "MainApp.h"
static cMainApp MainApp =  {APP_CTOR_FNC(&MainApp_StartUp),
                        APP_XTOR_FNC(&MainApp_ShutDown)};

const static tObjectListEntity  appList [] =
{
    {MAIN_APP_ID,               (cPersistantObj *)&MainApp,          NORMAL_MODE},
};



/** @defgroup powerConfigGroup  PowerConfig
*  @brief      The config data for power
*  @author   Johnny Fan
*  @note      iBT150
*  @date      26-Feb-2014
*  @copyright Tymphany Ltd. 
* 
* @{
*/

#include "PowerSrv.h"
#include "product.config"

#ifdef HAS_BATTERY

/// The delay to wait for the charger stat pin stable
#define CHARGER_STAT_DEBOUNCE_TIME_MS  1250

/**
* @name Battery Filter Config
* The filter config for battery/input source
*/
//@{

/**
*   @brief Choose the battery filter style.
*   
*   Define POWERSRV_HIGHEST_FILTER to support highest filter
*   Undefine to support average filter
*/
/***************************************************************************
 * Battery Filter Config
 ***************************************************************************/
/// enable to use battery highest filter, which takes the sample in range, and choose the max value
/// disable it to use average filter
#define BATT_HIGHEST_FILTER
///Filter length for battery voltage
#define BATT_FILTER_LEN  5

#ifdef BATT_HIGHEST_FILTER
///the range that considered as valid, measured in mV
#define SAMPLE_RANGE_mV  50
///the number of samples that continuously out of range, then consider it as valid
#define OUT_OF_RANGE_ACCEPT_NUMBER 10
#endif

/***************************************************************************
 * Battery State Filter Config
 ***************************************************************************/
///use high/low thresholds to filter the battery state (like schmitt trigger), make battery state more stable
///define the number of battery state that power server will detect
#define NUMBER_OF_STATE   5
#define NUMBER_OF_BOUNDS  (NUMBER_OF_STATE-1)

///Define the order that you put your state,
/// INCREASING_ORDER_STATE means from lower state to higher state
//#define INCREASING_ORDER_STATE
/// DECREASING_ORDER_STATE means from higher state to lower state
#define DECREASING_ORDER_STATE

#if defined(DECREASING_ORDER_STATE) && defined(INCREASING_ORDER_STATE)
    #error "can NOT define the DECREASING_ORDER_STATE and INCREASING_ORDER_STATE at the same time"
#endif

/***************************************************************************
 * Input Source Filter Config
 ***************************************************************************/
///Filter length for input source
#define INPUT_SROUCE_FILTER_LEN 10
//@}

/***************************************************************************
 * Internal Battery Config
 ***************************************************************************/
/**
* @name Internal Battery Config
* The config data for internal battery
*/
//@{

///@note: choose SCHMITT_TRIGGER filter, 
///  change the value below for the trigger thresholds
///           if not, need to consider the SMITH_THREADSHOLD_mV for high/low threshold 
/// Config the battery voltage for each states, measured in "mV"
#define MAX_BATT_mVOLT              8400  //max. voltage
#define MIN_BATT_mVOLT              6300

#define BATT_PERCENTAGE_mVOLT_HIGH_BOUND(x)  ((MAX_BATT_mVOLT-MIN_BATT_mVOLT)/100*(x)+MIN_BATT_mVOLT+50)
#define BATT_PERCENTAGE_mVOLT_LOW_BOUND(x)  ((MAX_BATT_mVOLT-MIN_BATT_mVOLT)/100*(x)+MIN_BATT_mVOLT-50)

#define BATT_NORM_LEVEL_HIGH_BOUND      7850
#define BATT_NORM_LEVEL_LOW_BOUND       7750

#define BATT_LOW_LEVEL_HIGH_BOUND       7150
#define BATT_LOW_LEVEL_LOW_BOUND        7050

#define BATT_CRITICAL_LEVEL_HIGH_BOUND   6850
#define BATT_CRITICAL_LEVEL_LOW_BOUND    6750

#define BATT_SHUTDOWN_LEVEL_HIGH_BOUND   6550
#define BATT_SHUTDOWN_LEVEL_LOW_BOUND    6450

/// The threshold to detemine if battery is eject, measured in "mV"
#define BATT_EJECT_mVOLT         2800


/**
*  @brief This const array is corresponding with eBatteryState.
*  @see eBatteryState
*/ 
const int16 intBattAdcHighBound[NUMBER_OF_BOUNDS]=
{
    BATT_NORM_LEVEL_HIGH_BOUND,
    BATT_LOW_LEVEL_HIGH_BOUND,
    BATT_CRITICAL_LEVEL_HIGH_BOUND,
    BATT_SHUTDOWN_LEVEL_HIGH_BOUND,
};
const int16 intBattAdcLowBound[NUMBER_OF_BOUNDS]=
{
    BATT_NORM_LEVEL_LOW_BOUND,
    BATT_LOW_LEVEL_LOW_BOUND,
    BATT_CRITICAL_LEVEL_LOW_BOUND,
    BATT_SHUTDOWN_LEVEL_LOW_BOUND,
};
//@} //endof internal Battery Config

/***************************************************************************
 * external battery Config,
 ***************************************************************************/
#ifdef EXTERNAL_BATTERY
/**
* @name External Battery Config
* The config data for external battery
*/
//@{


/**
*  @brief This const array is corresponding with eBatteryState.
*  @see eBatteryState
*/ 
const int16 extBattAdcHighBound[NUMBER_OF_BOUNDS]=
{
    BATT_NORM_LEVEL_HIGH_BOUND,
    BATT_LOW_LEVEL_HIGH_BOUND,
    BATT_CRITICAL_LEVEL_HIGH_BOUND,
    BATT_SHUTDOWN_LEVEL_HIGH_BOUND,
};
const int16 extBattAdcLowBound[NUMBER_OF_BOUNDS]=
{
    BATT_NORM_LEVEL_LOW_BOUND,
    BATT_LOW_LEVEL_LOW_BOUND,
    BATT_CRITICAL_LEVEL_LOW_BOUND,
    BATT_SHUTDOWN_LEVEL_LOW_BOUND,
};
#endif //end of #ifdef EXTERNAL_BATTERY
#endif //end of #ifdef HAS_BATTERY
//@}  //endof External Battery Config

/** @}*/ //endof Power Config group for doxygen


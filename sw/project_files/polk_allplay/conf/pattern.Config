/**
*  @file      pattern.config
*  @brief     Config data for LED patterns, modified according to UI
*  @author    Johnny Fan
*  @date      15-Feb-2014
*  @copyright Tymphany Ltd.
*/

#include "LedDrv.h"

/***************************************************************************
 * led Pattern Config Data,

 * @param  periodTime       the repeated period time in ms
 * @para   onTime           the time of turning on LED (duty cycle),
 *                          it's only valid in Blink style
 *                          when onTime     == periodTime    , it will light up solid
 * @para   duration         the number of repeating times,
 *                          set to ALWAYS_REPEAT if it's always repeated
 * @para   color            the color of LED
 * para    nextPattern      It's used to combine patterns. When one pattern is shown once,
 *                          led_srv will jump to show the next pattern which is defined
 *                          in this parameter. Set it to PAT_MAX_NUMBER to only show one pattern
 *                          check below "SYS_ON_CRITICAL_BAT_PAT" for example
 * @para   style            the style we need, defined in ePatStyle
 ***************************************************************************/

#define NOT_NEEDED  0
#define ALWAYS_REPEAT (~0)

#define LED_OFF_LEVEL   0
#define LED_ON_LEVEL    (100)

tPatternData patternConfig[PAT_MAX_NUMBER] =
{
/* OFF_PATT */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = BLACK,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/*  COLOR_RED */
    {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = RED,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* COLOR_GREEN*/
    {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = GREEN,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* COLOR_BLUE */
    {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = BLUE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* COLOR_AMBER */
    {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* COLOR_PURPLE */
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = PURPLE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

 /* COLOR_YELLOW*/
   {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = YELLOW,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/* COLOR_WHITE */
    {
    .periodTime     = 0,
    .onTime         = 0,
    .duration       = ALWAYS_REPEAT,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = SOLID_STYLE
    },

/*  POWER_UP_BLINK_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = ALWAYS_REPEAT,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* POWER_DOWN_BLINK_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 4000,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* SYS_ON_CRITICAL_BAT_AP_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = WHITE,
    .nextPattern    = SYS_ON_CRITICAL_BAT_AP_PAT_SPLIT,
    .style          = BLINK_STYLE
    },

/* SYS_ON_CRITICAL_BAT_AP_PAT_SPLIT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = AMBER,
    .nextPattern    = SYS_ON_CRITICAL_BAT_AP_PAT,
    .style          = FADE_STYLE
    },
    
/* SYS_ON_CRITICAL_BAT_DIRECT_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = PURPLE,
    .nextPattern    = SYS_ON_CRITICAL_BAT_DIRECT_PAT_SPLIT,
    .style          = BLINK_STYLE
    },

/* SYS_ON_CRITICAL_BAT_DIRECT_PAT_SPLIT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = AMBER,
    .nextPattern    = SYS_ON_CRITICAL_BAT_DIRECT_PAT,
    .style          = FADE_STYLE
    },

 /* SYS_ON_CRITICAL_BAT_AUXIN_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = BLUE,
    .nextPattern    = SYS_ON_CRITICAL_BAT_AUXIN_PAT_SPLIT,
    .style          = BLINK_STYLE
    },

/* SYS_ON_CRITICAL_BAT_AUXIN_PAT_SPLIT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = AMBER,
    .nextPattern    = SYS_ON_CRITICAL_BAT_AUXIN_PAT,
    .style          = FADE_STYLE
    },
    

 /* NET_CONNECTING_CRITICAL_BAT_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = BLACK,
    .nextPattern    = NET_CONNECTING_CRITICAL_BAT_PAT_SPLIT,
    .style          = BLINK_STYLE
    },

/* NET_CONNECTING_CRITICAL_BAT_PAT_SPLIT */
    {
    .periodTime     = 1000,
    .onTime         = 1000,
    .duration       = 1000,
    .color          = AMBER,
    .nextPattern    = NET_CONNECTING_CRITICAL_BAT_PAT,
    .style          = FADE_STYLE
    },


/* NET_CONNECTING_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = ALWAYS_REPEAT,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = FADE_STYLE
    },

/* NET_FAIL_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 1000,
    .duration       = ALWAYS_REPEAT,
    .color          = RED,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* RST_IN_PROG_PAT */
    {
    .periodTime     = 500,
    .onTime         = 250,
    .duration       = 4000,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* DFU_PROG_PAT */
    {
    .periodTime     = 250,
    .onTime         = 100,
    .duration       = ALWAYS_REPEAT,
    .color          = RED,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* ENT_DEMO_PAT */
    {
    .periodTime     = 500,
    .onTime         = 250,
    .duration       = ALWAYS_REPEAT,
    .color          = BLUE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* BAT_FULL_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 4000,
    .color          = AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* BAT_NORMAL_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 3000,
    .color          = AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* BAT_LOW_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 2000,
    .color          = AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* BAT_CRITICAL_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 1000,
    .color          = AMBER,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VALID_BUT_PRESS_PAT */
    {
    .periodTime     = 200,
    .onTime         = 0,
    .duration       = 200,
    .color          = WHITE,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VOL_MAX_OFF_PAT */
    {
    .periodTime     = 10000,
    .onTime         = 0,
    .duration       = 100000,
    .color          = PREVIOUS_COLOR,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VOL_MAX_PAT */
    {
    .periodTime     = 250,
    .onTime         = 150,
    .duration       = 750,
    .color          = PREVIOUS_COLOR,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VOL_MIN_OFF_PAT*/
    {
    .periodTime     = 10000,
    .onTime         = 0,
    .duration       = 100000,
    .color          = PREVIOUS_COLOR,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* VOL_MIN_PAT */
    {
    .periodTime     = 1000,
    .onTime         = 500,
    .duration       = 3000,
    .color          = PREVIOUS_COLOR,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* HW_ERR_PAT */
    {
    .periodTime     = 500,
    .onTime         = 200,
    .duration       = ALWAYS_REPEAT,
    .color          = RED,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* DIRECT_INIT_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = 8000,
    .color          = PURPLE,
    .nextPattern    = COLOR_PURPLE,
    .style          = FADE_STYLE
    },

/* DIRECT_CRITICAL_BAT_INIT_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = 8000,
    .color          = PURPLE,
    .nextPattern    = SYS_ON_CRITICAL_BAT_DIRECT_PAT,
    .style          = FADE_STYLE
    },

/* DISPLAY_SWV_START_PAT*/
    {
    .periodTime     = 1000,
    .onTime         = 0,
    .duration       = 1000,
    .color          = BLACK,
    .nextPattern    = APP_MAJOR_VER_PAT,
    .style          = BLINK_STYLE
    },

/* DISPLAY_SWV_END_PAT*/
    {
    .periodTime     = 1000,
    .onTime         = 0,
    .duration       = 1000,
    .color          = BLACK,
    .nextPattern    = PAT_MAX_NUMBER,
    .style          = BLINK_STYLE
    },

/* APP_MAJOR_VER_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MAJOR_VER*2000,
    .color          = RED,
    .nextPattern    = APP_MINOR_VER_PAT1,
    .style          = FADE_STYLE
    },
/* APP_MINOR_VER_PAT1 */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MINOR_VER1*2000,
    .color          = GREEN,
    .nextPattern    = APP_MINOR_VER_PAT2,
    .style          = FADE_STYLE
    },
/* APP_MINOR_VER_PAT2 */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MINOR_VER2*2000,
    .color          = BLUE,
    .nextPattern    = DISPLAY_SWV_END_PAT,
    .style          = FADE_STYLE
    }, 

/* BOOT_LOADER_MAJOR_VER_PAT */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MAJOR_VER*2000,
    .color          = RED,
    .nextPattern    = BOOT_LOADER_MINOR_VER_PAT1,
    .style          = FADE_STYLE
    },
/* BOOT_LOADER_MINOR_VER_PAT1 */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MINOR_VER1*2000,
    .color          = GREEN,
    .nextPattern    = BOOT_LOADER_MINOR_VER_PAT2,
    .style          = FADE_STYLE
    },
/* BOOT_LOADER_MINOR_VER_PAT2 */
    {
    .periodTime     = 2000,
    .onTime         = 2000,
    .duration       = MINOR_VER2*2000,
    .color          = BLUE,
    .nextPattern    = DISPLAY_SWV_END_PAT, 
    .style          = FADE_STYLE
    }, };
/**********************************************************/
/* below part is NOT needed config */

const uint8 LED_FADING_DATA[]=
{
      0,   1,   2,   4,   5,   6,   7,   9,
     10,  11,  12,  13,  15,  16,  17,  18,
     20,  21,  22,  23,  24,  25,  27,  28,
     29,  30,  31,  33,  34,  35,  36,  37,
     38,  39,  41,  42,  43,  44,  45,  46,
     47,  48,  49,  50,  51,  52,  53,  55,
     56,  57,  58,  59,  60,  61,  62,  62,
     63,  64,  65,  66,  67,  68,  69,  70,
     71,  72,  72,  73,  74,  75,  76,  77,
     77,  78,  79,  80,  80,  81,  82,  82,
     83,  84,  84,  85,  86,  86,  87,  88,
     88,  89,  89,  90,  90,  91,  91,  92,
     92,  93,  93,  94,  94,  95,  95,  95,
     96,  96,  96,  97,  97,  97,  98,  98,
     98,  98,  99,  99,  99,  99,  99,  99,
    100, 100, 100, 100, 100, 100, 100, 100,
};

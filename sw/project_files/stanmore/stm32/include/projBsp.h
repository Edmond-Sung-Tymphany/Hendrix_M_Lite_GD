/*
-------------------------------------------------------------------------------
TYMPHANY LTD





                  Public project Bsp interfaces
                  -------------------------

                  SW Module Document




@file        projBsp.h
@brief       This file declares the public project bsp interfaces, user should
             implement these interfaces based on the requiremnets and
             the implementation should be located at projBsp.c
@author      Bob.Xu
@date        2014-06-12
@copyright (c) Tymphany Ltd. All rights reserved.

Change History:
VERSION    : 1    DRAFT      2014-06-12     Bob.Xu
DESCRIPTION: First Draft. Generated by newclass.py
SCO/ERROR  :
-------------------------------------------------------------------------------
*/
#ifndef PROJ_BSP_H
#define PROJ_BSP_H

#include "commonTypes.h"
#include "server.h"
#include "AudioSrv.h"

#define BSP_TICKS_PER_SEC       1000U
#define GET_TICKS_IN_MS(x)      (x * BSP_TICKS_PER_SEC / 1000)
#define INLINE                  inline

#define BT_OUTPUT1 GPIO_5
#define BT_OUTPUT2 GPIO_6
#define BT_OUTPUT3 GPIO_7
#define BT_OUTPUT4 GPIO_8
#define BT_OUTPUT5 GPIO_9

#define BT_INPUT0  GPIO_3   //LED0
#define BT_INPUT1  GPIO_4   //LED1

enum MainAppPrivSigs
{
   ENERGYSENSE_SIG = MAX_SIG + 1,
   POWER_SWITCH_SIG,
   BT_IS_OFF_SIG, // when bt is finished powering off
   BT_IS_ON_SIG, // when bt is finished powering on
   SWITCH_INPUT_SIG,
};

#define PCM1862_SLEEP_MODE      (0x09)
#define PCM1862_ACTIVE_MODE     (0x0f)


void ProjBsp_CyclePrintError(char* errString);
void EXTI_Config(bool isTurnOnInterrupt);
void SetEnableWakeupSources();
void SetSignalLossDetectInt();
void SetDisableWakeupSources();
void SetEnableWakeupSourcesFromStandby();
void SetEnableCodecStatus(bool bEnable);
void SetSender(QActive* sender);
void SetDisableSignalLossDetectInt();
void SetEnergySenseMask(eAudioChannel maskChannel);
void MuteAdc(bool mute);

uint8 GetAdcMode();
void SwitchEnergySenseMode(bool bIsSigDetection);


#endif /* End of PROJ_BSP_H */
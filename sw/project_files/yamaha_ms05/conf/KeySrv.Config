/**
*  @file      KeySrv.Cofig
*  @brief     Config data for key server
*  @author    Bob.Xu
*  @date      27-Feb-2014
*  @copyright Tymphany Ltd.
*/
#include "AdcDrv.h"
#include "GpioDrv.h"
#include "LinearKnobKeyDrv.h"
#include "GpioKeyDrv.h"

#ifdef HAS_INFRARED_CTR
#include "IrRxDrv.h"
#endif

#define DEBOUNCE_SAMP_NUM               4
#define KEY_SERVER_TICK_MS              10
#define COMB_KEY_FLAG_RESET             0

/* Private variables */
static cLinearKnobKeyDrv knobKeySet[NUM_OF_LINEAR_KNOB_KEY];
static cADCDrv adcDrvForKey;
static cGpioKeyDrv gpioKeySet[1];
static cGpioDrv gpioDrvForKey;
tKeySrvConfig keySrvConfig =
{
    .timing.debounceTime = 60, /* 60ms */
    .timing.repeatStartTime= 1000,
    .timing.longPressTime = 1000,  /* 1S */
    .timing.veryLongPressTime = 10000, /* 10S */

    .keyboardNum = KEYBOARD_NUMBER,
    .keyboardSet =
    {
        {LINEAR_KNOB_DEV_TYPE,  (cKeyDrv*)knobKeySet,   sizeof(cLinearKnobKeyDrv),    &adcDrvForKey},
        {GPIO_DEV_TYPE,  (cKeyDrv*)gpioKeySet,   sizeof(cGpioKeyDrv),    &gpioDrvForKey},
        /**
         * you can add other types of keyboard here
         */
    }
};

/* Comb keys definations */

/********************************Note***********************************
* if the comb key is defined as sequential key, for example,
* SEQ_KEY_PRESS_COMB_TYPE and SEQ_KEY_SHIFT_COMB_TYPE, the order of the keys
* defined in tCombKeyElem implict the order of comb key. For instance:
* static tCombKeyElem  combKeyGroup2[] =
* {
*     {.pKeysId = PREV_KEY,         .combKeyTrigEvt = KEY_EVT_DOWN},
*     {.pKeysId = VOLUME_DOWN_KEY,  .combKeyTrigEvt = KEY_EVT_DOWN},
*     {.pKeysId = NET_RESET_KEY,    .combKeyTrigEvt = KEY_EVT_DOWN}
* };
* combKeyGroup2 is defined SEQ_KEY_SHIFT_COMB_TYPE, user should do
* PREV_KEY->VOLUME_DOWN_KEY->NET_RESET_KEY to get this comb key. No comb EVT
* will be sent if user disobey this order.
************************************************************************/

#ifdef HAS_COMB_KEY
#define NUM_OF_COMB_KEYS    4
static tCombKeyElem  combKeyGroup0[] =
{
    {.pKeysId = VOLUME_UP_KEY,    .combKeyTrigEvt = KEY_EVT_DOWN},
    {.pKeysId = PREV_KEY,         .combKeyTrigEvt = KEY_EVT_DOWN}
};

static tCombKeyElem  combKeyGroup1[] =
{
    {.pKeysId = PREV_KEY,         .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = NEXT_KEY,         .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = PLAY_PAUSE_KEY,   .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = VOLUME_UP_KEY,    .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = VOLUME_DOWN_KEY,  .combKeyTrigEvt = KEY_EVT_SHORT_PRESS}
};

static tCombKeyElem  combKeyGroup2[] =
{
    {.pKeysId = PREV_KEY,         .combKeyTrigEvt = KEY_EVT_DOWN},
    {.pKeysId = VOLUME_DOWN_KEY,  .combKeyTrigEvt = KEY_EVT_SHORT_PRESS}
};

static tCombKeyElem  combKeyGroup3[] =
{
    {.pKeysId = VOLUME_DOWN_KEY,  .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = VOLUME_UP_KEY,    .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = PLAY_PAUSE_KEY,   .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = NEXT_KEY,         .combKeyTrigEvt = KEY_EVT_SHORT_PRESS},
    {.pKeysId = PREV_KEY,         .combKeyTrigEvt = KEY_EVT_SHORT_PRESS}
};

static tCombDef combKeysDef[NUM_OF_COMB_KEYS] =
{
    {
        .combKeyId = COMB_KEY_ID_0,
        .combKeyType = NORMAL_KEY_COMB_TYPE,
        .numOfKeyElem = 2,
        .timeElapse = 0,
        .pCombKeyElems = combKeyGroup0,
    },
    {
        .combKeyId = COMB_KEY_ID_1,
        .combKeyType = SEQ_KEY_PRESS_COMB_TYPE,
        .numOfKeyElem = 5,
        .timeElapse = 0,
        .resetTime = 5000, /* 5 seconds */
        .pCombKeyElems = combKeyGroup1,
    },
    {
        .combKeyId = COMB_KEY_ID_2,
        .combKeyType = SEQ_KEY_SHIFT_COMB_TYPE,
        .numOfKeyElem = 2,
        .timeElapse = 0,
        .pCombKeyElems = combKeyGroup2,
    },
    {
        .combKeyId = COMB_KEY_ID_3,
        .combKeyType = SEQ_KEY_PRESS_COMB_TYPE,
        .numOfKeyElem = 5,
        .timeElapse = 0,
        .resetTime = 5000, /* 5 seconds */
        .pCombKeyElems = combKeyGroup3,
    }
};
#endif
/* End of Comb key definations */

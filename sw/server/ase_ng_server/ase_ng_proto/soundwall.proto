syntax = "proto2";
package Proto.SoundWall;

/************************************************************************/
message A2Bmode{
	enum Mode {
		A2B_STANDALONE = 0; // This mode is standalone that the soundwall will not connect to slave or as a master
		A2B_MASTER = 1;     // This mode is setting the soundwall as masternode.
		A2B_SLAVE = 2;      // This mode is setting the soundwall as slavenode.
	}
	optional Mode mode = 1;
}

message PowerMode{
	enum Mode {
		STANDBY = 0;
		WORKING = 1;
	}
	optional Mode mode = 1;
}

/// soundwall response the total soundwall nodes
message RespGetTotalNodes{
	optional uint32 totalNodes =1;
}

/// in case of specify node, 
/// e.g version_info, ntc_info, write_dsp_param
message NodeIndex{
	optional uint32 nodeIndex = 1;
}

message MuteMode {
	enum Mode {
		MUTE = 0;
		UNMUTE = 1;
	}
	optional Mode mode = 1;
}

message ReqTestTone {
	required uint32 nodeIndex = 1;
	required uint32 speakerTile = 2;
}

/// ---------------------------------------------------------------------------
/// for the parameter definition and data format,
/// refer to "Soundwall MCU BO DSP Tuning Parameter Interface v1.5.docx"
message GainAndDelay {
	/// which node you want to update?
	required uint32 nodeIndex = 2;
	/// gain setting : [8.24] format
	required uint32 MT_TW_gain_L_1 = 3;
	required uint32 MT_TW_gain_R_1 = 4;
	required uint32 MT_TW_gain_L_2 = 5;
	required uint32 MT_TW_gain_R_2 = 6;
	required uint32 MT_TW_gain_L_3 = 7;
	required uint32 MT_TW_gain_R_3 = 8;
	required uint32 MT_TW_gain_L_4 = 9;
	required uint32 MT_TW_gain_R_4 = 10;
	/// delay setting : [32.0] format
	required uint32 MT_TW_delay_L_1 = 11;
	required uint32 MT_TW_delay_R_1 = 12;
	required uint32 MT_TW_delay_L_2 = 13;
	required uint32 MT_TW_delay_R_2 = 14;
	required uint32 MT_TW_delay_L_3 = 15;
	required uint32 MT_TW_delay_R_3 = 16;
	required uint32 MT_TW_delay_L_4 = 17;
	required uint32 MT_TW_delay_R_4 = 18;
	/// mute setting : [8:24] format
	required uint32 MUTE_L_R = 19;    
}

message DriverGain {
	/// which node you want to update?
	required uint32 nodeIndex = 2;
	/// DRIVER_GAIN setting : [8:24] format
	required uint32 Tile_1_B_Cal_Gain = 3;
	required uint32 Tile_1_MT_Cal_Gain = 4;
	required uint32 Tile_2_B_Cal_Gain = 5;
	required uint32 Tile_2_MT_Cal_Gain = 6;
	required uint32 Tile_3_B_Cal_Gain = 7;
	required uint32 Tile_3_MT_Cal_Gain = 8;
	required uint32 Tile_4_B_Cal_Gain = 9;
	required uint32 Tile_4_MT_Cal_Gain = 10;
	required uint32 Tile_1_TW_Cal_Gain = 11;
	required uint32 Tile_2_TW_Cal_Gain = 12;
	required uint32 Tile_3_TW_Cal_Gain = 13;
	required uint32 Tile_4_TW_Cal_Gain = 14;
}

/// define the EQ parameter for 1 'point'
message DspEqParam {
	/// eq parameter : [8:24] format
	required uint32 param1=1;
	required uint32 param2=2;
	required uint32 param3=3;
	required uint32 param4=4;
	required uint32 param5=5;
}

/// in the "Soundwall MCU BO DSP Tuning Parameter Interface v1.5.docx"
/// the RoomEQ need 16*5*32bits
message BassAndRoomEQ {
	/// which node you want to update?
	required uint32 nodeIndex = 2;
	/// BASS_AND_ROOMEQ setting
	required uint32 bass_gain = 3;
	/// EQ array...
	repeated DspEqParam eqParam = 4;
}
/// ---------------------------------------------------------------------------

//*******************************************************************

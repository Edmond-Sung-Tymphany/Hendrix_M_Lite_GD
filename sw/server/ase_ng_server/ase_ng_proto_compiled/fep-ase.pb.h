/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Tue May 16 18:29:07 2017. */

#ifndef PB_PROTO_FEPASE_FEP_ASE_PB_H_INCLUDED
#define PB_PROTO_FEPASE_FEP_ASE_PB_H_INCLUDED
#include <pb.h>

#include "ase-fep-ReqResp.pb.h"

#include "fep-ase-ReqResp.pb.h"

#include "common.pb.h"

#include "hdmi.pb.h"

#include "firmware-update.pb.h"

#include "production.pb.h"

#include "system.pb.h"

#include "dsp.pb.h"

#include "power-link.pb.h"

#include "eeb.pb.h"

#include "wpl.pb.h"

#include "light-sensor.pb.h"

#include "soundwall.pb.h"

#include "spdif.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Proto_FepAse_Event_Type {
    Proto_FepAse_Event_Type_LINE_IN_SENSE_ACTIVE = 0,
    Proto_FepAse_Event_Type_LINE_IN_SENSE_INACTIVE = 1,
    Proto_FepAse_Event_Type_TOSLINK_SENSE_ACTIVE = 2,
    Proto_FepAse_Event_Type_TOSLINK_SENSE_INACTIVE = 3,
    Proto_FepAse_Event_Type_HDMI_ARC_START_REQUEST = 4,
    Proto_FepAse_Event_Type_HDMI_ARC_STARTED = 5,
    Proto_FepAse_Event_Type_HDMI_ARC_END_REQUEST = 6,
    Proto_FepAse_Event_Type_HDMI_ARC_ENDED = 7,
    Proto_FepAse_Event_Type_HDMI_ARC_AUDIO_MODE_ON = 8,
    Proto_FepAse_Event_Type_HDMI_ARC_AUDIO_MODE_OFF = 9,
    Proto_FepAse_Event_Type_TUNNEL = 10,
    Proto_FepAse_Event_Type_BOOTLOADER_READY = 11,
    Proto_FepAse_Event_Type_FIRMWARE_UPDATE_FINISHED = 12,
    Proto_FepAse_Event_Type_POWERLINK_SENSE_EVENT = 13,
    Proto_FepAse_Event_Type_EEB_TELEGRAM_RECEIVE = 14,
    Proto_FepAse_Event_Type_WPL_EVENT = 15,
    Proto_FepAse_Event_Type_DSP_NTC_DATA_EVENT = 16,
    Proto_FepAse_Event_Type_HDMI_AUDIO_FORMAT = 17,
    Proto_FepAse_Event_Type_LOG_MESSAGE = 18,
    Proto_FepAse_Event_Type_HDMI_CEC_VOLUME_UP = 19,
    Proto_FepAse_Event_Type_HDMI_CEC_VOLUME_DOWN = 20,
    Proto_FepAse_Event_Type_HDMI_CEC_VOLUME_MUTE = 21,
    Proto_FepAse_Event_Type_HDMI_INPUT_SELECTED = 22,
    Proto_FepAse_Event_Type_POWERFAIL = 23,
    Proto_FepAse_Event_Type_HDMI_INPUT_SENSE_CHANGED = 24,
    Proto_FepAse_Event_Type_LIGHT_SENSOR_LIGHT_LEVEL = 25,
    Proto_FepAse_Event_Type_SPDIF_AUDIO_FORMAT_CHANGED = 26
} Proto_FepAse_Event_Type;
#define _Proto_FepAse_Event_Type_MIN Proto_FepAse_Event_Type_LINE_IN_SENSE_ACTIVE
#define _Proto_FepAse_Event_Type_MAX Proto_FepAse_Event_Type_SPDIF_AUDIO_FORMAT_CHANGED
#define _Proto_FepAse_Event_Type_ARRAYSIZE ((Proto_FepAse_Event_Type)(Proto_FepAse_Event_Type_SPDIF_AUDIO_FORMAT_CHANGED+1))

/* Struct definitions */
typedef struct _Proto_FepAse_Event {
    bool has_type;
    Proto_FepAse_Event_Type type;
    pb_size_t which_data;
    union {
        Proto_Production_Tunnel productionTunnel;
        Proto_PowerLink_SenseEvent powerLinkSense;
        Proto_Eeb_EebTelegram eebTelegramReceiveEvent;
        Proto_Wpl_Event wplEvent;
        Proto_Dsp_NTCDataEvent ntcData;
        Proto_Hdmi_AudioFormat audioFormat;
        Proto_System_Log logMessage;
        Proto_Hdmi_InputSelected inputSelected;
        Proto_Hdmi_InputSense inputSense;
        Proto_LightSensor_LightLevel lightSensorLightLevel;
        Proto_Spdif_AudioFormatChanged spdifAudioFormat;
    } data;
/* @@protoc_insertion_point(struct:Proto_FepAse_Event) */
} Proto_FepAse_Event;

typedef struct _Proto_FepAse_Req {
    bool has_type;
    Proto_FepAse_ReqResp type;
    bool has_id;
    uint32_t id;
    pb_size_t which_data;
    union {
        Proto_Dsp_AbsoluteVolume absoluteVolume;
        Proto_Dsp_RelativeVolumeChange relativeVolumeChange;
        Proto_System_AudioCue audioCue;
    } data;
/* @@protoc_insertion_point(struct:Proto_FepAse_Req) */
} Proto_FepAse_Req;

typedef struct _Proto_FepAse_Resp {
    bool has_type;
    Proto_AseFep_ReqResp type;
    bool has_id;
    uint32_t id;
    bool has_genericResponse;
    Proto_Core_GenericResponse genericResponse;
    pb_size_t which_data;
    union {
        Proto_FirmwareUpdate_ChunkResponse firmwareUpdateChunk;
        Proto_FirmwareUpdate_VersionInfo firmwareUpdateVersionInfo;
        Proto_Hdmi_Arc hdmiArc;
        Proto_System_PowerStatus powerStatus;
        Proto_Dsp_LineInSensitivity lineInSensitivity;
        Proto_Dsp_ResponsePositionSoundMode positionSoundMode;
        Proto_Dsp_ResponseInternalSpeakerCompensation internalSpeakerCompensation;
        Proto_PowerLink_AllSensesStatus powerLinkSensesStatus;
        Proto_Production_ButtonState buttonState;
        Proto_Wpl_Response wplResponse;
        Proto_System_PowerSupplyVoltage powerSupplyVoltage;
        Proto_Hdmi_UhdDeepColour uhdDeepColour;
        Proto_Hdmi_AudioFormat audioFormat;
        Proto_Hdmi_InputSelected inputSelected;
        Proto_Hdmi_InputsSense inputsSense;
        Proto_LightSensor_ReplyData lightSensorReplyData;
        Proto_SoundWall_A2Bmode respA2Bmode;
        Proto_SoundWall_RespGetTotalNodes respTotalNodes;
        Proto_SoundWall_PowerMode respPowerMode;
        Proto_SoundWall_DriverGain respDriverGain;
        Proto_SoundWall_BassAndRoomEQ respBassAndRoomEQ;
        Proto_SoundWall_GainAndDelay respGainAndDelay;
        Proto_System_RespGetBoardVersion respGetBoardVersion;
    } data;
/* @@protoc_insertion_point(struct:Proto_FepAse_Resp) */
} Proto_FepAse_Resp;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_FepAse_Event_init_default          {false, (Proto_FepAse_Event_Type)0, 0, {Proto_Production_Tunnel_init_default}}
#define Proto_FepAse_Req_init_default            {false, (Proto_FepAse_ReqResp)0, false, 0, 0, {Proto_Dsp_AbsoluteVolume_init_default}}
#define Proto_FepAse_Resp_init_default           {false, (Proto_AseFep_ReqResp)0, false, 0, false, Proto_Core_GenericResponse_init_default, 0, {Proto_FirmwareUpdate_ChunkResponse_init_default}}
#define Proto_FepAse_Event_init_zero             {false, (Proto_FepAse_Event_Type)0, 0, {Proto_Production_Tunnel_init_zero}}
#define Proto_FepAse_Req_init_zero               {false, (Proto_FepAse_ReqResp)0, false, 0, 0, {Proto_Dsp_AbsoluteVolume_init_zero}}
#define Proto_FepAse_Resp_init_zero              {false, (Proto_AseFep_ReqResp)0, false, 0, false, Proto_Core_GenericResponse_init_zero, 0, {Proto_FirmwareUpdate_ChunkResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_FepAse_Event_productionTunnel_tag  10
#define Proto_FepAse_Event_powerLinkSense_tag    11
#define Proto_FepAse_Event_eebTelegramReceiveEvent_tag 12
#define Proto_FepAse_Event_wplEvent_tag          13
#define Proto_FepAse_Event_ntcData_tag           14
#define Proto_FepAse_Event_audioFormat_tag       15
#define Proto_FepAse_Event_logMessage_tag        16
#define Proto_FepAse_Event_inputSelected_tag     17
#define Proto_FepAse_Event_inputSense_tag        18
#define Proto_FepAse_Event_lightSensorLightLevel_tag 19
#define Proto_FepAse_Event_spdifAudioFormat_tag  20
#define Proto_FepAse_Event_type_tag              1
#define Proto_FepAse_Req_absoluteVolume_tag      10
#define Proto_FepAse_Req_relativeVolumeChange_tag 11
#define Proto_FepAse_Req_audioCue_tag            12
#define Proto_FepAse_Req_type_tag                1
#define Proto_FepAse_Req_id_tag                  2
#define Proto_FepAse_Resp_firmwareUpdateChunk_tag 11
#define Proto_FepAse_Resp_firmwareUpdateVersionInfo_tag 12
#define Proto_FepAse_Resp_hdmiArc_tag            13
#define Proto_FepAse_Resp_powerStatus_tag        14
#define Proto_FepAse_Resp_lineInSensitivity_tag  15
#define Proto_FepAse_Resp_positionSoundMode_tag  16
#define Proto_FepAse_Resp_internalSpeakerCompensation_tag 17
#define Proto_FepAse_Resp_powerLinkSensesStatus_tag 18
#define Proto_FepAse_Resp_buttonState_tag        19
#define Proto_FepAse_Resp_wplResponse_tag        20
#define Proto_FepAse_Resp_powerSupplyVoltage_tag 21
#define Proto_FepAse_Resp_uhdDeepColour_tag      22
#define Proto_FepAse_Resp_audioFormat_tag        23
#define Proto_FepAse_Resp_inputSelected_tag      24
#define Proto_FepAse_Resp_inputsSense_tag        25
#define Proto_FepAse_Resp_lightSensorReplyData_tag 26
#define Proto_FepAse_Resp_respA2Bmode_tag        27
#define Proto_FepAse_Resp_respTotalNodes_tag     28
#define Proto_FepAse_Resp_respPowerMode_tag      29
#define Proto_FepAse_Resp_respDriverGain_tag     30
#define Proto_FepAse_Resp_respBassAndRoomEQ_tag  31
#define Proto_FepAse_Resp_respGainAndDelay_tag   32
#define Proto_FepAse_Resp_respGetBoardVersion_tag 33
#define Proto_FepAse_Resp_type_tag               1
#define Proto_FepAse_Resp_id_tag                 2
#define Proto_FepAse_Resp_genericResponse_tag    3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_FepAse_Event_fields[13];
extern const pb_field_t Proto_FepAse_Req_fields[6];
extern const pb_field_t Proto_FepAse_Resp_fields[27];

/* Maximum encoded size of messages (where known) */
/* Proto_FepAse_Event_size depends on runtime parameters */
/* Proto_FepAse_Req_size depends on runtime parameters */
/* Proto_FepAse_Resp_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FEP_ASE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

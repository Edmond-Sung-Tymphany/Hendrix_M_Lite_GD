/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Tue May 16 18:29:08 2017. */

#ifndef PB_PROTO_POWERLINK_POWER_LINK_PB_H_INCLUDED
#define PB_PROTO_POWERLINK_POWER_LINK_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Proto_PowerLink_AllSensesStatus {
    pb_callback_t senses;
/* @@protoc_insertion_point(struct:Proto_PowerLink_AllSensesStatus) */
} Proto_PowerLink_AllSensesStatus;

typedef struct _Proto_PowerLink_AllSensesStatus_PortState {
    bool connected;
    uint32_t port;
/* @@protoc_insertion_point(struct:Proto_PowerLink_AllSensesStatus_PortState) */
} Proto_PowerLink_AllSensesStatus_PortState;

typedef PB_BYTES_ARRAY_T(86) Proto_PowerLink_Data_telegram_t;
typedef struct _Proto_PowerLink_Data {
    bool has_telegram;
    Proto_PowerLink_Data_telegram_t telegram;
    bool has_wired;
    bool wired;
    bool has_wireless;
    bool wireless;
/* @@protoc_insertion_point(struct:Proto_PowerLink_Data) */
} Proto_PowerLink_Data;

typedef struct _Proto_PowerLink_SenseEvent {
    bool connected;
    uint32_t port;
/* @@protoc_insertion_point(struct:Proto_PowerLink_SenseEvent) */
} Proto_PowerLink_SenseEvent;

typedef struct _Proto_PowerLink_SetMute {
    bool enable;
/* @@protoc_insertion_point(struct:Proto_PowerLink_SetMute) */
} Proto_PowerLink_SetMute;

typedef struct _Proto_PowerLink_SetON {
    uint32_t port;
    bool enable;
/* @@protoc_insertion_point(struct:Proto_PowerLink_SetON) */
} Proto_PowerLink_SetON;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_PowerLink_SenseEvent_init_default  {0, 0}
#define Proto_PowerLink_AllSensesStatus_init_default {{{NULL}, NULL}}
#define Proto_PowerLink_AllSensesStatus_PortState_init_default {0, 0}
#define Proto_PowerLink_SetON_init_default       {0, 0}
#define Proto_PowerLink_SetMute_init_default     {0}
#define Proto_PowerLink_Data_init_default        {false, {0, {0}}, false, 0, false, 0}
#define Proto_PowerLink_SenseEvent_init_zero     {0, 0}
#define Proto_PowerLink_AllSensesStatus_init_zero {{{NULL}, NULL}}
#define Proto_PowerLink_AllSensesStatus_PortState_init_zero {0, 0}
#define Proto_PowerLink_SetON_init_zero          {0, 0}
#define Proto_PowerLink_SetMute_init_zero        {0}
#define Proto_PowerLink_Data_init_zero           {false, {0, {0}}, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_PowerLink_AllSensesStatus_senses_tag 1
#define Proto_PowerLink_AllSensesStatus_PortState_connected_tag 1
#define Proto_PowerLink_AllSensesStatus_PortState_port_tag 2
#define Proto_PowerLink_Data_telegram_tag        1
#define Proto_PowerLink_Data_wired_tag           2
#define Proto_PowerLink_Data_wireless_tag        3
#define Proto_PowerLink_SenseEvent_connected_tag 1
#define Proto_PowerLink_SenseEvent_port_tag      2
#define Proto_PowerLink_SetMute_enable_tag       2
#define Proto_PowerLink_SetON_port_tag           1
#define Proto_PowerLink_SetON_enable_tag         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_PowerLink_SenseEvent_fields[3];
extern const pb_field_t Proto_PowerLink_AllSensesStatus_fields[2];
extern const pb_field_t Proto_PowerLink_AllSensesStatus_PortState_fields[3];
extern const pb_field_t Proto_PowerLink_SetON_fields[3];
extern const pb_field_t Proto_PowerLink_SetMute_fields[2];
extern const pb_field_t Proto_PowerLink_Data_fields[4];

/* Maximum encoded size of messages (where known) */
#define Proto_PowerLink_SenseEvent_size          8
/* Proto_PowerLink_AllSensesStatus_size depends on runtime parameters */
#define Proto_PowerLink_AllSensesStatus_PortState_size 8
#define Proto_PowerLink_SetON_size               8
#define Proto_PowerLink_SetMute_size             2
#define Proto_PowerLink_Data_size                92

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define POWER_LINK_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Tue May 16 18:29:08 2017. */

#ifndef PB_PROTO_PRODUCTION_PRODUCTION_PB_H_INCLUDED
#define PB_PROTO_PRODUCTION_PRODUCTION_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Proto_Production_LedModeSet_StatusLed {
    Proto_Production_LedModeSet_StatusLed_NetBlue = 0,
    Proto_Production_LedModeSet_StatusLed_NetOrange = 1,
    Proto_Production_LedModeSet_StatusLed_NetRed = 2,
    Proto_Production_LedModeSet_StatusLed_NetWhite = 3,
    Proto_Production_LedModeSet_StatusLed_ProdOrange = 4,
    Proto_Production_LedModeSet_StatusLed_ProdRed = 5,
    Proto_Production_LedModeSet_StatusLed_ProdWhite = 6,
    Proto_Production_LedModeSet_StatusLed_ProdGreen = 7,
    Proto_Production_LedModeSet_StatusLed_PairBlue = 8,
    Proto_Production_LedModeSet_StatusLed_PairRed = 9
} Proto_Production_LedModeSet_StatusLed;
#define _Proto_Production_LedModeSet_StatusLed_MIN Proto_Production_LedModeSet_StatusLed_NetBlue
#define _Proto_Production_LedModeSet_StatusLed_MAX Proto_Production_LedModeSet_StatusLed_PairRed
#define _Proto_Production_LedModeSet_StatusLed_ARRAYSIZE ((Proto_Production_LedModeSet_StatusLed)(Proto_Production_LedModeSet_StatusLed_PairRed+1))

typedef enum _Proto_Production_GetButtonState_ButtonId {
    Proto_Production_GetButtonState_ButtonId_BLE_Pairing = 0,
    Proto_Production_GetButtonState_ButtonId_SoftAP = 1
} Proto_Production_GetButtonState_ButtonId;
#define _Proto_Production_GetButtonState_ButtonId_MIN Proto_Production_GetButtonState_ButtonId_BLE_Pairing
#define _Proto_Production_GetButtonState_ButtonId_MAX Proto_Production_GetButtonState_ButtonId_SoftAP
#define _Proto_Production_GetButtonState_ButtonId_ARRAYSIZE ((Proto_Production_GetButtonState_ButtonId)(Proto_Production_GetButtonState_ButtonId_SoftAP+1))

/* Struct definitions */
typedef struct _Proto_Production_ButtonState {
    bool pressed;
/* @@protoc_insertion_point(struct:Proto_Production_ButtonState) */
} Proto_Production_ButtonState;

typedef struct _Proto_Production_GetButtonState {
    bool has_buttonId;
    Proto_Production_GetButtonState_ButtonId buttonId;
/* @@protoc_insertion_point(struct:Proto_Production_GetButtonState) */
} Proto_Production_GetButtonState;

typedef struct _Proto_Production_LedModeSet {
    bool has_led;
    Proto_Production_LedModeSet_StatusLed led;
    int32_t onTimeMs;
    int32_t offTimeMs;
/* @@protoc_insertion_point(struct:Proto_Production_LedModeSet) */
} Proto_Production_LedModeSet;

typedef PB_BYTES_ARRAY_T(126) Proto_Production_Tunnel_data_t;
typedef struct _Proto_Production_Tunnel {
    bool has_data;
    Proto_Production_Tunnel_data_t data;
/* @@protoc_insertion_point(struct:Proto_Production_Tunnel) */
} Proto_Production_Tunnel;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_Production_Tunnel_init_default     {false, {0, {0}}}
#define Proto_Production_LedModeSet_init_default {false, (Proto_Production_LedModeSet_StatusLed)0, 0, 0}
#define Proto_Production_GetButtonState_init_default {false, (Proto_Production_GetButtonState_ButtonId)0}
#define Proto_Production_ButtonState_init_default {0}
#define Proto_Production_Tunnel_init_zero        {false, {0, {0}}}
#define Proto_Production_LedModeSet_init_zero    {false, (Proto_Production_LedModeSet_StatusLed)0, 0, 0}
#define Proto_Production_GetButtonState_init_zero {false, (Proto_Production_GetButtonState_ButtonId)0}
#define Proto_Production_ButtonState_init_zero   {0}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_Production_ButtonState_pressed_tag 2
#define Proto_Production_GetButtonState_buttonId_tag 1
#define Proto_Production_LedModeSet_led_tag      1
#define Proto_Production_LedModeSet_onTimeMs_tag 2
#define Proto_Production_LedModeSet_offTimeMs_tag 3
#define Proto_Production_Tunnel_data_tag         1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_Production_Tunnel_fields[2];
extern const pb_field_t Proto_Production_LedModeSet_fields[4];
extern const pb_field_t Proto_Production_GetButtonState_fields[2];
extern const pb_field_t Proto_Production_ButtonState_fields[2];

/* Maximum encoded size of messages (where known) */
#define Proto_Production_Tunnel_size             128
#define Proto_Production_LedModeSet_size         24
#define Proto_Production_GetButtonState_size     2
#define Proto_Production_ButtonState_size        2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PRODUCTION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

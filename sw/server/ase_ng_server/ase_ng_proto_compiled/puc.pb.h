/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Tue May 16 18:29:08 2017. */

#ifndef PB_PROTO_PUC_PUC_PB_H_INCLUDED
#define PB_PROTO_PUC_PUC_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Proto_Puc_PucCommand_SendMode {
    Proto_Puc_PucCommand_SendMode_IR_SEND_COMMAND_ONCE = 0,
    Proto_Puc_PucCommand_SendMode_IR_SEND_COMMAND_CONTINUOUS = 1,
    Proto_Puc_PucCommand_SendMode_IR_SEND_COMMAND_CONTINUOUS_END = 2,
    Proto_Puc_PucCommand_SendMode_IR_SET_PUC_OUTPUT_LOW = 3,
    Proto_Puc_PucCommand_SendMode_IR_SET_PUC_OUTPUT_HIGH = 4
} Proto_Puc_PucCommand_SendMode;
#define _Proto_Puc_PucCommand_SendMode_MIN Proto_Puc_PucCommand_SendMode_IR_SEND_COMMAND_ONCE
#define _Proto_Puc_PucCommand_SendMode_MAX Proto_Puc_PucCommand_SendMode_IR_SET_PUC_OUTPUT_HIGH
#define _Proto_Puc_PucCommand_SendMode_ARRAYSIZE ((Proto_Puc_PucCommand_SendMode)(Proto_Puc_PucCommand_SendMode_IR_SET_PUC_OUTPUT_HIGH+1))

typedef enum _Proto_Puc_PucCommand_ModulationMode {
    Proto_Puc_PucCommand_ModulationMode_IR_MODULATION_OFF = 0,
    Proto_Puc_PucCommand_ModulationMode_IR_MODULATION_ON = 1
} Proto_Puc_PucCommand_ModulationMode;
#define _Proto_Puc_PucCommand_ModulationMode_MIN Proto_Puc_PucCommand_ModulationMode_IR_MODULATION_OFF
#define _Proto_Puc_PucCommand_ModulationMode_MAX Proto_Puc_PucCommand_ModulationMode_IR_MODULATION_ON
#define _Proto_Puc_PucCommand_ModulationMode_ARRAYSIZE ((Proto_Puc_PucCommand_ModulationMode)(Proto_Puc_PucCommand_ModulationMode_IR_MODULATION_ON+1))

typedef enum _Proto_Puc_PucCommand_CommandFormat {
    Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_NEC_FORMAT = 0,
    Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_RC5_FORMAT = 1,
    Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_BITSTREAM_FORMAT = 2,
    Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_RAW_FORMAT = 3
} Proto_Puc_PucCommand_CommandFormat;
#define _Proto_Puc_PucCommand_CommandFormat_MIN Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_NEC_FORMAT
#define _Proto_Puc_PucCommand_CommandFormat_MAX Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_RAW_FORMAT
#define _Proto_Puc_PucCommand_CommandFormat_ARRAYSIZE ((Proto_Puc_PucCommand_CommandFormat)(Proto_Puc_PucCommand_CommandFormat_IR_PROTOCOL_RAW_FORMAT+1))

/* Struct definitions */
typedef struct _Proto_Puc_PucCommand {
    bool has_sendMode;
    Proto_Puc_PucCommand_SendMode sendMode;
    bool has_modulationMode;
    Proto_Puc_PucCommand_ModulationMode modulationMode;
    bool has_commandFormat;
    Proto_Puc_PucCommand_CommandFormat commandFormat;
    uint32_t pucOutput;
    pb_callback_t code;
    pb_callback_t main;
    pb_callback_t alt;
    pb_callback_t repeat_signal_main;
    pb_callback_t repeat_signal_alt;
    pb_callback_t flanks;
    pb_callback_t altFlanks;
/* @@protoc_insertion_point(struct:Proto_Puc_PucCommand) */
} Proto_Puc_PucCommand;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Proto_Puc_PucCommand_init_default        {false, (Proto_Puc_PucCommand_SendMode)0, false, (Proto_Puc_PucCommand_ModulationMode)0, false, (Proto_Puc_PucCommand_CommandFormat)0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define Proto_Puc_PucCommand_init_zero           {false, (Proto_Puc_PucCommand_SendMode)0, false, (Proto_Puc_PucCommand_ModulationMode)0, false, (Proto_Puc_PucCommand_CommandFormat)0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Proto_Puc_PucCommand_sendMode_tag        1
#define Proto_Puc_PucCommand_modulationMode_tag  2
#define Proto_Puc_PucCommand_commandFormat_tag   3
#define Proto_Puc_PucCommand_pucOutput_tag       4
#define Proto_Puc_PucCommand_code_tag            5
#define Proto_Puc_PucCommand_main_tag            6
#define Proto_Puc_PucCommand_alt_tag             7
#define Proto_Puc_PucCommand_repeat_signal_main_tag 8
#define Proto_Puc_PucCommand_repeat_signal_alt_tag 9
#define Proto_Puc_PucCommand_flanks_tag          10
#define Proto_Puc_PucCommand_altFlanks_tag       11

/* Struct field encoding specification for nanopb */
extern const pb_field_t Proto_Puc_PucCommand_fields[12];

/* Maximum encoded size of messages (where known) */
/* Proto_Puc_PucCommand_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PUC_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
